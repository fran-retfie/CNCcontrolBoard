ARM GAS  /tmp/ccuXJxLl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"cnc_core.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ihyp,"ax",%progbits
  20              		.align	1
  21              		.global	ihyp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ihyp:
  27              	.LVL0:
  28              	.LFB288:
  29              		.file 1 "Core/Src/cnc_core.c"
   1:Core/Src/cnc_core.c **** 
   2:Core/Src/cnc_core.c **** //--- Francesco Osti 29/12/2022 ---//
   3:Core/Src/cnc_core.c **** 
   4:Core/Src/cnc_core.c **** #include "cnc_core.h"
   5:Core/Src/cnc_core.c **** #include "cnc_config.h"
   6:Core/Src/cnc_core.c **** #include "data_parser.h"
   7:Core/Src/cnc_core.c **** #include "main.h"
   8:Core/Src/cnc_core.c **** #include <stdbool.h>
   9:Core/Src/cnc_core.c **** #include <stdlib.h>
  10:Core/Src/cnc_core.c **** 
  11:Core/Src/cnc_core.c **** //very efficient way of approximating hypotenuse using integer numbers
  12:Core/Src/cnc_core.c **** int32_t ihyp(uint16_t x, uint16_t y){
  30              		.loc 1 12 37 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  13:Core/Src/cnc_core.c ****     if(y > x){
  35              		.loc 1 13 5 view .LVU1
  36              		.loc 1 13 7 is_stmt 0 view .LVU2
  37 0000 8142     		cmp	r1, r0
  38 0002 06D9     		bls	.L2
  14:Core/Src/cnc_core.c ****         return (uint32_t) y + ((((uint32_t) x * (uint32_t) x)/y)>>1);
  39              		.loc 1 14 9 is_stmt 1 view .LVU3
  40              		.loc 1 14 47 is_stmt 0 view .LVU4
  41 0004 00FB00F0 		mul	r0, r0, r0
  42              	.LVL1:
  43              		.loc 1 14 62 view .LVU5
  44 0008 B0FBF1F0 		udiv	r0, r0, r1
ARM GAS  /tmp/ccuXJxLl.s 			page 2


  45              		.loc 1 14 29 view .LVU6
  46 000c 01EB5000 		add	r0, r1, r0, lsr #1
  47 0010 7047     		bx	lr
  48              	.LVL2:
  49              	.L2:
  15:Core/Src/cnc_core.c ****     }
  16:Core/Src/cnc_core.c ****     else {
  17:Core/Src/cnc_core.c ****         return (uint32_t) x + ((((uint32_t) y * (uint32_t) y)/x)>>1);
  50              		.loc 1 17 9 is_stmt 1 view .LVU7
  51              		.loc 1 17 47 is_stmt 0 view .LVU8
  52 0012 01FB01F1 		mul	r1, r1, r1
  53              	.LVL3:
  54              		.loc 1 17 62 view .LVU9
  55 0016 B1FBF0F1 		udiv	r1, r1, r0
  56              		.loc 1 17 29 view .LVU10
  57 001a 00EB5100 		add	r0, r0, r1, lsr #1
  58              	.LVL4:
  18:Core/Src/cnc_core.c ****     }
  19:Core/Src/cnc_core.c **** }
  59              		.loc 1 19 1 view .LVU11
  60 001e 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE288:
  64              		.section	.text.CNC_Stepper,"ax",%progbits
  65              		.align	1
  66              		.global	CNC_Stepper
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	CNC_Stepper:
  72              	.LVL5:
  73              	.LFB289:
  20:Core/Src/cnc_core.c **** 
  21:Core/Src/cnc_core.c **** void CNC_Stepper(HMI_info_t* info, bool runX, bool runY, TIM_HandleTypeDef *htimX, TIM_HandleTypeDe
  74              		.loc 1 21 109 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 4, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 21 109 is_stmt 0 view .LVU13
  79 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 4, -24
  82              		.cfi_offset 5, -20
  83              		.cfi_offset 6, -16
  84              		.cfi_offset 7, -12
  85              		.cfi_offset 8, -8
  86              		.cfi_offset 14, -4
  87 0004 0546     		mov	r5, r0
  88 0006 0C46     		mov	r4, r1
  89 0008 9046     		mov	r8, r2
  90 000a 1F46     		mov	r7, r3
  91 000c 069E     		ldr	r6, [sp, #24]
  22:Core/Src/cnc_core.c ****     runX &= !(HAL_GPIO_ReadPin(limitX_Port, limitX_Pin) || ((info->pos.x == 0) && !info->dir.x) || 
  92              		.loc 1 22 5 is_stmt 1 view .LVU14
  93              		.loc 1 22 15 is_stmt 0 view .LVU15
  94 000e 4FF48041 		mov	r1, #16384
  95              	.LVL6:
ARM GAS  /tmp/ccuXJxLl.s 			page 3


  96              		.loc 1 22 15 view .LVU16
  97 0012 3648     		ldr	r0, .L23
  98              	.LVL7:
  99              		.loc 1 22 15 view .LVU17
 100 0014 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 101              	.LVL8:
 102              		.loc 1 22 13 view .LVU18
 103 0018 58B9     		cbnz	r0, .L14
 104              		.loc 1 22 71 discriminator 1 view .LVU19
 105 001a AB88     		ldrh	r3, [r5, #4]
 106              		.loc 1 22 57 discriminator 1 view .LVU20
 107 001c 0BB9     		cbnz	r3, .L6
 108              		.loc 1 22 93 discriminator 4 view .LVU21
 109 001e 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 110              		.loc 1 22 80 discriminator 4 view .LVU22
 111 0020 DAB1     		cbz	r2, .L15
 112              	.L6:
 113              		.loc 1 22 13 discriminator 5 view .LVU23
 114 0022 4CF61F32 		movw	r2, #51999
 115 0026 9342     		cmp	r3, r2
 116 0028 19D9     		bls	.L16
 117              		.loc 1 22 139 discriminator 8 view .LVU24
 118 002a 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 119              		.loc 1 22 127 discriminator 8 view .LVU25
 120 002c CBB1     		cbz	r3, .L17
 121              		.loc 1 22 13 view .LVU26
 122 002e 0023     		movs	r3, #0
 123 0030 00E0     		b	.L5
 124              	.L14:
 125              		.loc 1 22 13 view .LVU27
 126 0032 0023     		movs	r3, #0
 127              	.L5:
 128              		.loc 1 22 10 discriminator 12 view .LVU28
 129 0034 1C40     		ands	r4, r4, r3
 130              	.LVL9:
  23:Core/Src/cnc_core.c ****     runY &= !(HAL_GPIO_ReadPin(limitY_Port, limitY_Pin) || ((info->pos.y == 0) && !info->dir.y) || 
 131              		.loc 1 23 5 is_stmt 1 discriminator 12 view .LVU29
 132              		.loc 1 23 15 is_stmt 0 discriminator 12 view .LVU30
 133 0036 4FF40041 		mov	r1, #32768
 134 003a 2C48     		ldr	r0, .L23
 135 003c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 136              	.LVL10:
 137              		.loc 1 23 13 discriminator 12 view .LVU31
 138 0040 88B9     		cbnz	r0, .L18
 139              		.loc 1 23 71 discriminator 1 view .LVU32
 140 0042 EB88     		ldrh	r3, [r5, #6]
 141              		.loc 1 23 57 discriminator 1 view .LVU33
 142 0044 0BB9     		cbnz	r3, .L8
 143              		.loc 1 23 93 discriminator 4 view .LVU34
 144 0046 6A7C     		ldrb	r2, [r5, #17]	@ zero_extendqisi2
 145              		.loc 1 23 80 discriminator 4 view .LVU35
 146 0048 7AB3     		cbz	r2, .L19
 147              	.L8:
 148              		.loc 1 23 13 discriminator 5 view .LVU36
 149 004a 4CF61F32 		movw	r2, #51999
 150 004e 9342     		cmp	r3, r2
 151 0050 2DD9     		bls	.L20
ARM GAS  /tmp/ccuXJxLl.s 			page 4


 152              		.loc 1 23 139 discriminator 8 view .LVU37
 153 0052 6B7C     		ldrb	r3, [r5, #17]	@ zero_extendqisi2
 154              		.loc 1 23 127 discriminator 8 view .LVU38
 155 0054 6BB3     		cbz	r3, .L21
 156              		.loc 1 23 13 view .LVU39
 157 0056 0023     		movs	r3, #0
 158 0058 06E0     		b	.L7
 159              	.LVL11:
 160              	.L15:
  22:Core/Src/cnc_core.c ****     runX &= !(HAL_GPIO_ReadPin(limitX_Port, limitX_Pin) || ((info->pos.x == 0) && !info->dir.x) || 
 161              		.loc 1 22 13 view .LVU40
 162 005a 0023     		movs	r3, #0
 163 005c EAE7     		b	.L5
 164              	.L16:
 165 005e 0123     		movs	r3, #1
 166 0060 E8E7     		b	.L5
 167              	.L17:
  22:Core/Src/cnc_core.c ****     runX &= !(HAL_GPIO_ReadPin(limitX_Port, limitX_Pin) || ((info->pos.x == 0) && !info->dir.x) || 
 168              		.loc 1 22 13 view .LVU41
 169 0062 0123     		movs	r3, #1
 170 0064 E6E7     		b	.L5
 171              	.LVL12:
 172              	.L18:
 173              		.loc 1 23 13 view .LVU42
 174 0066 0023     		movs	r3, #0
 175              	.L7:
 176              		.loc 1 23 10 discriminator 12 view .LVU43
 177 0068 08EA0308 		and	r8, r8, r3
 178              	.LVL13:
  24:Core/Src/cnc_core.c ****     if(!HAL_GPIO_ReadPin(SWSTOP_GPIO_Port, SWSTOP_Pin)){
 179              		.loc 1 24 5 is_stmt 1 discriminator 12 view .LVU44
 180              		.loc 1 24 9 is_stmt 0 discriminator 12 view .LVU45
 181 006c 4021     		movs	r1, #64
 182 006e 4FF09040 		mov	r0, #1207959552
 183 0072 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 184              	.LVL14:
 185              		.loc 1 24 7 discriminator 12 view .LVU46
 186 0076 50BB     		cbnz	r0, .L9
  25:Core/Src/cnc_core.c ****         if(runX){
 187              		.loc 1 25 9 is_stmt 1 view .LVU47
 188              		.loc 1 25 11 is_stmt 0 view .LVU48
 189 0078 ECB1     		cbz	r4, .L10
  26:Core/Src/cnc_core.c ****             htimX->Instance->CR1 &= ~TIM_CR1_OPM;
 190              		.loc 1 26 13 is_stmt 1 view .LVU49
 191              		.loc 1 26 18 is_stmt 0 view .LVU50
 192 007a 3A68     		ldr	r2, [r7]
 193              		.loc 1 26 34 view .LVU51
 194 007c 1368     		ldr	r3, [r2]
 195 007e 23F00803 		bic	r3, r3, #8
 196 0082 1360     		str	r3, [r2]
  27:Core/Src/cnc_core.c ****             htimX->Instance->CR1 |= TIM_CR1_CEN;
 197              		.loc 1 27 13 is_stmt 1 view .LVU52
 198              		.loc 1 27 18 is_stmt 0 view .LVU53
 199 0084 3A68     		ldr	r2, [r7]
 200              		.loc 1 27 34 view .LVU54
 201 0086 1368     		ldr	r3, [r2]
 202 0088 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccuXJxLl.s 			page 5


 203 008c 1360     		str	r3, [r2]
 204              	.L11:
  28:Core/Src/cnc_core.c ****         }
  29:Core/Src/cnc_core.c ****         else
  30:Core/Src/cnc_core.c ****             htimX->Instance->CR1 |= TIM_CR1_OPM;
  31:Core/Src/cnc_core.c **** 
  32:Core/Src/cnc_core.c ****         if(runY){
 205              		.loc 1 32 9 is_stmt 1 view .LVU55
 206              		.loc 1 32 11 is_stmt 0 view .LVU56
 207 008e B8F1000F 		cmp	r8, #0
 208 0092 16D0     		beq	.L12
  33:Core/Src/cnc_core.c ****             htimY->Instance->CR1 &= ~TIM_CR1_OPM; 
 209              		.loc 1 33 13 is_stmt 1 view .LVU57
 210              		.loc 1 33 18 is_stmt 0 view .LVU58
 211 0094 3268     		ldr	r2, [r6]
 212              		.loc 1 33 34 view .LVU59
 213 0096 1368     		ldr	r3, [r2]
 214 0098 23F00803 		bic	r3, r3, #8
 215 009c 1360     		str	r3, [r2]
  34:Core/Src/cnc_core.c ****             htimY->Instance->CR1 |= TIM_CR1_CEN;
 216              		.loc 1 34 13 is_stmt 1 view .LVU60
 217              		.loc 1 34 18 is_stmt 0 view .LVU61
 218 009e 3268     		ldr	r2, [r6]
 219              		.loc 1 34 34 view .LVU62
 220 00a0 1368     		ldr	r3, [r2]
 221 00a2 43F00103 		orr	r3, r3, #1
 222 00a6 1360     		str	r3, [r2]
 223 00a8 1DE0     		b	.L4
 224              	.LVL15:
 225              	.L19:
  23:Core/Src/cnc_core.c ****     if(!HAL_GPIO_ReadPin(SWSTOP_GPIO_Port, SWSTOP_Pin)){
 226              		.loc 1 23 13 view .LVU63
 227 00aa 0023     		movs	r3, #0
 228 00ac DCE7     		b	.L7
 229              	.L20:
 230 00ae 0123     		movs	r3, #1
 231 00b0 DAE7     		b	.L7
 232              	.L21:
  23:Core/Src/cnc_core.c ****     if(!HAL_GPIO_ReadPin(SWSTOP_GPIO_Port, SWSTOP_Pin)){
 233              		.loc 1 23 13 view .LVU64
 234 00b2 0123     		movs	r3, #1
 235 00b4 D8E7     		b	.L7
 236              	.LVL16:
 237              	.L10:
  30:Core/Src/cnc_core.c **** 
 238              		.loc 1 30 13 is_stmt 1 view .LVU65
  30:Core/Src/cnc_core.c **** 
 239              		.loc 1 30 18 is_stmt 0 view .LVU66
 240 00b6 3A68     		ldr	r2, [r7]
  30:Core/Src/cnc_core.c **** 
 241              		.loc 1 30 34 view .LVU67
 242 00b8 1368     		ldr	r3, [r2]
 243 00ba 43F00803 		orr	r3, r3, #8
 244 00be 1360     		str	r3, [r2]
 245 00c0 E5E7     		b	.L11
 246              	.L12:
  35:Core/Src/cnc_core.c ****         }
ARM GAS  /tmp/ccuXJxLl.s 			page 6


  36:Core/Src/cnc_core.c ****         else
  37:Core/Src/cnc_core.c ****             htimY->Instance->CR1 |= TIM_CR1_OPM;          
 247              		.loc 1 37 13 is_stmt 1 view .LVU68
 248              		.loc 1 37 18 is_stmt 0 view .LVU69
 249 00c2 3268     		ldr	r2, [r6]
 250              		.loc 1 37 34 view .LVU70
 251 00c4 1368     		ldr	r3, [r2]
 252 00c6 43F00803 		orr	r3, r3, #8
 253 00ca 1360     		str	r3, [r2]
 254 00cc 0BE0     		b	.L4
 255              	.L9:
  38:Core/Src/cnc_core.c ****     }
  39:Core/Src/cnc_core.c ****     else
  40:Core/Src/cnc_core.c ****     {
  41:Core/Src/cnc_core.c ****         info->state = HMI_State_Stop;
 256              		.loc 1 41 9 is_stmt 1 view .LVU71
 257              		.loc 1 41 21 is_stmt 0 view .LVU72
 258 00ce 0023     		movs	r3, #0
 259 00d0 6B70     		strb	r3, [r5, #1]
  42:Core/Src/cnc_core.c ****         htimX->Instance->CR1 |= TIM_CR1_OPM;
 260              		.loc 1 42 9 is_stmt 1 view .LVU73
 261              		.loc 1 42 14 is_stmt 0 view .LVU74
 262 00d2 3A68     		ldr	r2, [r7]
 263              		.loc 1 42 30 view .LVU75
 264 00d4 1368     		ldr	r3, [r2]
 265 00d6 43F00803 		orr	r3, r3, #8
 266 00da 1360     		str	r3, [r2]
  43:Core/Src/cnc_core.c ****         htimY->Instance->CR1 |= TIM_CR1_OPM;
 267              		.loc 1 43 9 is_stmt 1 view .LVU76
 268              		.loc 1 43 14 is_stmt 0 view .LVU77
 269 00dc 3268     		ldr	r2, [r6]
 270              		.loc 1 43 30 view .LVU78
 271 00de 1368     		ldr	r3, [r2]
 272 00e0 43F00803 		orr	r3, r3, #8
 273 00e4 1360     		str	r3, [r2]
 274              	.L4:
  44:Core/Src/cnc_core.c ****     }     
  45:Core/Src/cnc_core.c **** }
 275              		.loc 1 45 1 view .LVU79
 276 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 277              	.LVL17:
 278              	.L24:
 279              		.loc 1 45 1 view .LVU80
 280 00ea 00BF     		.align	2
 281              	.L23:
 282 00ec 000C0048 		.word	1207962624
 283              		.cfi_endproc
 284              	.LFE289:
 286              		.section	.text.CNC_Absolute,"ax",%progbits
 287              		.align	1
 288              		.global	CNC_Absolute
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	CNC_Absolute:
 294              	.LVL18:
 295              	.LFB290:
ARM GAS  /tmp/ccuXJxLl.s 			page 7


  46:Core/Src/cnc_core.c **** 
  47:Core/Src/cnc_core.c **** void CNC_Absolute(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 296              		.loc 1 47 88 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 16
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		.loc 1 47 88 is_stmt 0 view .LVU82
 301 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 302              		.cfi_def_cfa_offset 36
 303              		.cfi_offset 4, -36
 304              		.cfi_offset 5, -32
 305              		.cfi_offset 6, -28
 306              		.cfi_offset 7, -24
 307              		.cfi_offset 8, -20
 308              		.cfi_offset 9, -16
 309              		.cfi_offset 10, -12
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 87B0     		sub	sp, sp, #28
 313              		.cfi_def_cfa_offset 64
 314 0006 0446     		mov	r4, r0
 315 0008 8846     		mov	r8, r1
 316 000a 9146     		mov	r9, r2
  48:Core/Src/cnc_core.c **** 
  49:Core/Src/cnc_core.c ****     info->dir.x = (info->pos.x < info->commanded.pos.x);
 317              		.loc 1 49 5 is_stmt 1 view .LVU83
 318              		.loc 1 49 29 is_stmt 0 view .LVU84
 319 000c 8088     		ldrh	r0, [r0, #4]
 320              	.LVL19:
 321              		.loc 1 49 53 view .LVU85
 322 000e 638A     		ldrh	r3, [r4, #18]
 323              		.loc 1 49 32 view .LVU86
 324 0010 9842     		cmp	r0, r3
 325 0012 2CBF     		ite	cs
 326 0014 0022     		movcs	r2, #0
 327              	.LVL20:
 328              		.loc 1 49 32 view .LVU87
 329 0016 0122     		movcc	r2, #1
 330              		.loc 1 49 17 view .LVU88
 331 0018 2274     		strb	r2, [r4, #16]
  50:Core/Src/cnc_core.c ****     info->dir.y = (info->pos.y < info->commanded.pos.y);
 332              		.loc 1 50 5 is_stmt 1 view .LVU89
 333              		.loc 1 50 29 is_stmt 0 view .LVU90
 334 001a E388     		ldrh	r3, [r4, #6]
 335              		.loc 1 50 53 view .LVU91
 336 001c A18A     		ldrh	r1, [r4, #20]
 337              	.LVL21:
 338              		.loc 1 50 32 view .LVU92
 339 001e 8B42     		cmp	r3, r1
 340 0020 2CBF     		ite	cs
 341 0022 0023     		movcs	r3, #0
 342 0024 0123     		movcc	r3, #1
 343              		.loc 1 50 17 view .LVU93
 344 0026 6374     		strb	r3, [r4, #17]
  51:Core/Src/cnc_core.c **** 
  52:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirX_Port, dirX_Pin, info->dir.x);
 345              		.loc 1 52 5 is_stmt 1 view .LVU94
ARM GAS  /tmp/ccuXJxLl.s 			page 8


 346 0028 344D     		ldr	r5, .L34
 347 002a 4FF48071 		mov	r1, #256
 348 002e 2846     		mov	r0, r5
 349 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 350              	.LVL22:
  53:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirY_Port, dirY_Pin, info->dir.y);
 351              		.loc 1 53 5 view .LVU95
 352 0034 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 353 0036 4FF40071 		mov	r1, #512
 354 003a 2846     		mov	r0, r5
 355 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 356              	.LVL23:
  54:Core/Src/cnc_core.c **** 
  55:Core/Src/cnc_core.c ****     uint16_t dX = info->dir.x ? (info->commanded.pos.x - info->pos.x) : (info->pos.x - info->comman
 357              		.loc 1 55 5 view .LVU96
 358              		.loc 1 55 28 is_stmt 0 view .LVU97
 359 0040 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 360              		.loc 1 55 14 view .LVU98
 361 0042 002B     		cmp	r3, #0
 362 0044 45D0     		beq	.L26
 363              		.loc 1 55 53 discriminator 1 view .LVU99
 364 0046 658A     		ldrh	r5, [r4, #18]
 365              		.loc 1 55 67 discriminator 1 view .LVU100
 366 0048 A388     		ldrh	r3, [r4, #4]
 367              		.loc 1 55 14 discriminator 1 view .LVU101
 368 004a ED1A     		subs	r5, r5, r3
 369 004c ADB2     		uxth	r5, r5
 370              	.L27:
 371              	.LVL24:
  56:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 372              		.loc 1 56 5 is_stmt 1 discriminator 4 view .LVU102
 373              		.loc 1 56 28 is_stmt 0 discriminator 4 view .LVU103
 374 004e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 375              		.loc 1 56 14 discriminator 4 view .LVU104
 376 0050 002B     		cmp	r3, #0
 377 0052 43D0     		beq	.L28
 378              		.loc 1 56 53 discriminator 1 view .LVU105
 379 0054 A68A     		ldrh	r6, [r4, #20]
 380              		.loc 1 56 67 discriminator 1 view .LVU106
 381 0056 E388     		ldrh	r3, [r4, #6]
 382              		.loc 1 56 14 discriminator 1 view .LVU107
 383 0058 F61A     		subs	r6, r6, r3
 384 005a B6B2     		uxth	r6, r6
 385              	.L29:
 386              	.LVL25:
  57:Core/Src/cnc_core.c **** 
  58:Core/Src/cnc_core.c ****     bool runX = dX > 0;
 387              		.loc 1 58 5 is_stmt 1 discriminator 4 view .LVU108
 388              		.loc 1 58 10 is_stmt 0 discriminator 4 view .LVU109
 389 005c B5F1000A 		subs	r10, r5, #0
 390 0060 18BF     		it	ne
 391 0062 4FF0010A 		movne	r10, #1
 392              	.LVL26:
  59:Core/Src/cnc_core.c ****     bool runY = dY > 0;
 393              		.loc 1 59 5 is_stmt 1 discriminator 4 view .LVU110
 394              		.loc 1 59 10 is_stmt 0 discriminator 4 view .LVU111
 395 0066 B6F1000B 		subs	fp, r6, #0
ARM GAS  /tmp/ccuXJxLl.s 			page 9


 396 006a 18BF     		it	ne
 397 006c 4FF0010B 		movne	fp, #1
 398              	.LVL27:
  60:Core/Src/cnc_core.c **** 
  61:Core/Src/cnc_core.c ****     //sistema questa parte dai...
  62:Core/Src/cnc_core.c ****     int32_t den;
 399              		.loc 1 62 5 is_stmt 1 discriminator 4 view .LVU112
  63:Core/Src/cnc_core.c ****     if(((dX > dY) ? dX : dY) >= (1<<8))
 400              		.loc 1 63 5 discriminator 4 view .LVU113
 401              		.loc 1 63 24 is_stmt 0 discriminator 4 view .LVU114
 402 0070 2B46     		mov	r3, r5
 403 0072 B542     		cmp	r5, r6
 404 0074 38BF     		it	cc
 405 0076 3346     		movcc	r3, r6
 406              		.loc 1 63 7 discriminator 4 view .LVU115
 407 0078 FF2B     		cmp	r3, #255
 408 007a 34D9     		bls	.L30
  64:Core/Src/cnc_core.c ****         den = (int32_t) ihyp(dX, dY) * freqX_1mm_min;
 409              		.loc 1 64 9 is_stmt 1 view .LVU116
 410              		.loc 1 64 25 is_stmt 0 view .LVU117
 411 007c 3146     		mov	r1, r6
 412 007e 2846     		mov	r0, r5
 413 0080 FFF7FEFF 		bl	ihyp
 414              	.LVL28:
 415              		.loc 1 64 13 view .LVU118
 416 0084 4FF6C163 		movw	r3, #65217
 417 0088 03FB00F7 		mul	r7, r3, r0
 418              	.LVL29:
 419              	.L31:
  65:Core/Src/cnc_core.c ****     else
  66:Core/Src/cnc_core.c ****         den = (int32_t) ihyp(dX<<7, dY<<7) * (freqX_1mm_min>>7);
  67:Core/Src/cnc_core.c **** 
  68:Core/Src/cnc_core.c ****     info->pulseLenght.x = (uint16_t) div(den, (int32_t) info->feed * (int32_t) dX).quot;
 420              		.loc 1 68 5 is_stmt 1 view .LVU119
 421              		.loc 1 68 61 is_stmt 0 view .LVU120
 422 008c E28A     		ldrh	r2, [r4, #22]
 423              		.loc 1 68 38 view .LVU121
 424 008e 05FB02F2 		mul	r2, r5, r2
 425 0092 3946     		mov	r1, r7
 426 0094 02A8     		add	r0, sp, #8
 427 0096 FFF7FEFF 		bl	div
 428              	.LVL30:
 429              		.loc 1 68 27 view .LVU122
 430 009a BDF90830 		ldrsh	r3, [sp, #8]
 431              		.loc 1 68 25 view .LVU123
 432 009e 2381     		strh	r3, [r4, #8]	@ movhi
  69:Core/Src/cnc_core.c ****     info->pulseLenght.y = (uint16_t) div(den, (int32_t) info->feed * (int32_t) dY).quot;
 433              		.loc 1 69 5 is_stmt 1 view .LVU124
 434              		.loc 1 69 61 is_stmt 0 view .LVU125
 435 00a0 E28A     		ldrh	r2, [r4, #22]
 436              		.loc 1 69 38 view .LVU126
 437 00a2 06FB02F2 		mul	r2, r6, r2
 438 00a6 3946     		mov	r1, r7
 439 00a8 04A8     		add	r0, sp, #16
 440 00aa FFF7FEFF 		bl	div
 441              	.LVL31:
 442              		.loc 1 69 27 view .LVU127
ARM GAS  /tmp/ccuXJxLl.s 			page 10


 443 00ae BDF91030 		ldrsh	r3, [sp, #16]
 444              		.loc 1 69 25 view .LVU128
 445 00b2 6381     		strh	r3, [r4, #10]	@ movhi
  70:Core/Src/cnc_core.c **** 
  71:Core/Src/cnc_core.c ****     CNC_Stepper(info, runX, runY, htimX, htimY);    
 446              		.loc 1 71 5 is_stmt 1 view .LVU129
 447 00b4 CDF80090 		str	r9, [sp]
 448 00b8 4346     		mov	r3, r8
 449 00ba 5A46     		mov	r2, fp
 450 00bc 5146     		mov	r1, r10
 451 00be 2046     		mov	r0, r4
 452 00c0 FFF7FEFF 		bl	CNC_Stepper
 453              	.LVL32:
  72:Core/Src/cnc_core.c **** 
  73:Core/Src/cnc_core.c ****     if(!runX && !runY)
 454              		.loc 1 73 5 view .LVU130
 455              		.loc 1 73 7 is_stmt 0 view .LVU131
 456 00c4 15B9     		cbnz	r5, .L25
 457              		.loc 1 73 14 discriminator 1 view .LVU132
 458 00c6 0EB9     		cbnz	r6, .L25
  74:Core/Src/cnc_core.c ****         info->move = HMI_Move_Done; 
 459              		.loc 1 74 9 is_stmt 1 view .LVU133
 460              		.loc 1 74 20 is_stmt 0 view .LVU134
 461 00c8 0323     		movs	r3, #3
 462 00ca A370     		strb	r3, [r4, #2]
 463              	.L25:
  75:Core/Src/cnc_core.c **** }
 464              		.loc 1 75 1 view .LVU135
 465 00cc 07B0     		add	sp, sp, #28
 466              		.cfi_remember_state
 467              		.cfi_def_cfa_offset 36
 468              		@ sp needed
 469 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 470              	.LVL33:
 471              	.L26:
 472              		.cfi_restore_state
  55:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 473              		.loc 1 55 83 discriminator 2 view .LVU136
 474 00d2 A588     		ldrh	r5, [r4, #4]
  55:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 475              		.loc 1 55 107 discriminator 2 view .LVU137
 476 00d4 638A     		ldrh	r3, [r4, #18]
  55:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 477              		.loc 1 55 14 discriminator 2 view .LVU138
 478 00d6 ED1A     		subs	r5, r5, r3
 479 00d8 ADB2     		uxth	r5, r5
 480 00da B8E7     		b	.L27
 481              	.LVL34:
 482              	.L28:
  56:Core/Src/cnc_core.c **** 
 483              		.loc 1 56 83 discriminator 2 view .LVU139
 484 00dc E688     		ldrh	r6, [r4, #6]
  56:Core/Src/cnc_core.c **** 
 485              		.loc 1 56 107 discriminator 2 view .LVU140
 486 00de A38A     		ldrh	r3, [r4, #20]
  56:Core/Src/cnc_core.c **** 
 487              		.loc 1 56 14 discriminator 2 view .LVU141
ARM GAS  /tmp/ccuXJxLl.s 			page 11


 488 00e0 F61A     		subs	r6, r6, r3
 489 00e2 B6B2     		uxth	r6, r6
 490 00e4 BAE7     		b	.L29
 491              	.LVL35:
 492              	.L30:
  66:Core/Src/cnc_core.c **** 
 493              		.loc 1 66 9 is_stmt 1 view .LVU142
  66:Core/Src/cnc_core.c **** 
 494              		.loc 1 66 25 is_stmt 0 view .LVU143
 495 00e6 F101     		lsls	r1, r6, #7
 496 00e8 89B2     		uxth	r1, r1
 497 00ea E801     		lsls	r0, r5, #7
 498 00ec 80B2     		uxth	r0, r0
 499 00ee FFF7FEFF 		bl	ihyp
 500              	.LVL36:
  66:Core/Src/cnc_core.c **** 
 501              		.loc 1 66 13 view .LVU144
 502 00f2 C0EBC013 		rsb	r3, r0, r0, lsl #7
 503 00f6 00EB8307 		add	r7, r0, r3, lsl #2
 504              	.LVL37:
  66:Core/Src/cnc_core.c **** 
 505              		.loc 1 66 13 view .LVU145
 506 00fa C7E7     		b	.L31
 507              	.L35:
 508              		.align	2
 509              	.L34:
 510 00fc 000C0048 		.word	1207962624
 511              		.cfi_endproc
 512              	.LFE290:
 514              		.section	.text.CNC_Jog,"ax",%progbits
 515              		.align	1
 516              		.global	CNC_Jog
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 521              	CNC_Jog:
 522              	.LVL38:
 523              	.LFB291:
  76:Core/Src/cnc_core.c **** 
  77:Core/Src/cnc_core.c **** void CNC_Jog(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 524              		.loc 1 77 83 is_stmt 1 view -0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		.loc 1 77 83 is_stmt 0 view .LVU147
 529 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 530              		.cfi_def_cfa_offset 20
 531              		.cfi_offset 4, -20
 532              		.cfi_offset 5, -16
 533              		.cfi_offset 6, -12
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 87B0     		sub	sp, sp, #28
 537              		.cfi_def_cfa_offset 48
 538 0004 0446     		mov	r4, r0
 539 0006 0D46     		mov	r5, r1
 540 0008 1646     		mov	r6, r2
ARM GAS  /tmp/ccuXJxLl.s 			page 12


  78:Core/Src/cnc_core.c **** 
  79:Core/Src/cnc_core.c ****     info->dir.x = (info->commanded.speed.x > 0);
 541              		.loc 1 79 5 is_stmt 1 view .LVU148
 542              		.loc 1 79 41 is_stmt 0 view .LVU149
 543 000a B0F91230 		ldrsh	r3, [r0, #18]
 544              		.loc 1 79 44 view .LVU150
 545 000e 002B     		cmp	r3, #0
 546 0010 D4BF     		ite	le
 547 0012 0023     		movle	r3, #0
 548 0014 0123     		movgt	r3, #1
 549              		.loc 1 79 17 view .LVU151
 550 0016 0374     		strb	r3, [r0, #16]
  80:Core/Src/cnc_core.c ****     info->dir.x = (info->commanded.speed.y > 0);
 551              		.loc 1 80 5 is_stmt 1 view .LVU152
 552              		.loc 1 80 41 is_stmt 0 view .LVU153
 553 0018 B0F91400 		ldrsh	r0, [r0, #20]
 554              	.LVL39:
 555              		.loc 1 80 44 view .LVU154
 556 001c 0028     		cmp	r0, #0
 557 001e D4BF     		ite	le
 558 0020 0022     		movle	r2, #0
 559              	.LVL40:
 560              		.loc 1 80 44 view .LVU155
 561 0022 0122     		movgt	r2, #1
 562              		.loc 1 80 17 view .LVU156
 563 0024 2274     		strb	r2, [r4, #16]
  81:Core/Src/cnc_core.c **** 
  82:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirX_Port, dirX_Pin, info->dir.x);
 564              		.loc 1 82 5 is_stmt 1 view .LVU157
 565 0026 1C4F     		ldr	r7, .L38
 566 0028 4FF48071 		mov	r1, #256
 567              	.LVL41:
 568              		.loc 1 82 5 is_stmt 0 view .LVU158
 569 002c 3846     		mov	r0, r7
 570 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 571              	.LVL42:
  83:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirY_Port, dirY_Pin, info->dir.y);
 572              		.loc 1 83 5 is_stmt 1 view .LVU159
 573 0032 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 574 0034 4FF40071 		mov	r1, #512
 575 0038 3846     		mov	r0, r7
 576 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 577              	.LVL43:
  84:Core/Src/cnc_core.c **** 
  85:Core/Src/cnc_core.c ****     info->pulseLenght.x = (uint16_t) div(freqX_1mm_min, abs(info->commanded.speed.x)).quot;
 578              		.loc 1 85 5 view .LVU160
 579              		.loc 1 85 82 is_stmt 0 view .LVU161
 580 003e B4F91220 		ldrsh	r2, [r4, #18]
 581              		.loc 1 85 57 view .LVU162
 582 0042 002A     		cmp	r2, #0
 583 0044 B8BF     		it	lt
 584 0046 5242     		rsblt	r2, r2, #0
 585              		.loc 1 85 38 view .LVU163
 586 0048 92B2     		uxth	r2, r2
 587 004a 4FF6C161 		movw	r1, #65217
 588 004e 02A8     		add	r0, sp, #8
 589 0050 FFF7FEFF 		bl	div
ARM GAS  /tmp/ccuXJxLl.s 			page 13


 590              	.LVL44:
 591              		.loc 1 85 27 view .LVU164
 592 0054 BDF90830 		ldrsh	r3, [sp, #8]
 593              		.loc 1 85 25 view .LVU165
 594 0058 2381     		strh	r3, [r4, #8]	@ movhi
  86:Core/Src/cnc_core.c ****     info->pulseLenght.y = (uint16_t) div(freqY_1mm_min, abs(info->commanded.speed.y)).quot;
 595              		.loc 1 86 5 is_stmt 1 view .LVU166
 596              		.loc 1 86 82 is_stmt 0 view .LVU167
 597 005a B4F91420 		ldrsh	r2, [r4, #20]
 598              		.loc 1 86 57 view .LVU168
 599 005e 002A     		cmp	r2, #0
 600 0060 B8BF     		it	lt
 601 0062 5242     		rsblt	r2, r2, #0
 602              		.loc 1 86 38 view .LVU169
 603 0064 92B2     		uxth	r2, r2
 604 0066 4FF6C161 		movw	r1, #65217
 605 006a 04A8     		add	r0, sp, #16
 606 006c FFF7FEFF 		bl	div
 607              	.LVL45:
 608              		.loc 1 86 27 view .LVU170
 609 0070 BDF91030 		ldrsh	r3, [sp, #16]
 610              		.loc 1 86 25 view .LVU171
 611 0074 6381     		strh	r3, [r4, #10]	@ movhi
  87:Core/Src/cnc_core.c **** 
  88:Core/Src/cnc_core.c ****     CNC_Stepper(info, info->commanded.speed.x != 0, info->commanded.speed.y != 0, htimX, htimY); 
 612              		.loc 1 88 5 is_stmt 1 view .LVU172
 613              		.loc 1 88 44 is_stmt 0 view .LVU173
 614 0076 B4F91210 		ldrsh	r1, [r4, #18]
 615              		.loc 1 88 74 view .LVU174
 616 007a B4F91420 		ldrsh	r2, [r4, #20]
 617              		.loc 1 88 5 view .LVU175
 618 007e 0096     		str	r6, [sp]
 619 0080 2B46     		mov	r3, r5
 620 0082 003A     		subs	r2, r2, #0
 621 0084 18BF     		it	ne
 622 0086 0122     		movne	r2, #1
 623 0088 0039     		subs	r1, r1, #0
 624 008a 18BF     		it	ne
 625 008c 0121     		movne	r1, #1
 626 008e 2046     		mov	r0, r4
 627 0090 FFF7FEFF 		bl	CNC_Stepper
 628              	.LVL46:
  89:Core/Src/cnc_core.c **** }
 629              		.loc 1 89 1 view .LVU176
 630 0094 07B0     		add	sp, sp, #28
 631              		.cfi_def_cfa_offset 20
 632              		@ sp needed
 633 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 634              	.LVL47:
 635              	.L39:
 636              		.loc 1 89 1 view .LVU177
 637              		.align	2
 638              	.L38:
 639 0098 000C0048 		.word	1207962624
 640              		.cfi_endproc
 641              	.LFE291:
 643              		.section	.text.CNC_TIM_Callback_X,"ax",%progbits
ARM GAS  /tmp/ccuXJxLl.s 			page 14


 644              		.align	1
 645              		.global	CNC_TIM_Callback_X
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	CNC_TIM_Callback_X:
 651              	.LVL48:
 652              	.LFB292:
  90:Core/Src/cnc_core.c **** 
  91:Core/Src/cnc_core.c **** void CNC_TIM_Callback_X(HMI_info_t* info, TIM_HandleTypeDef *htimX){
 653              		.loc 1 91 68 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
  92:Core/Src/cnc_core.c ****     htimX->Instance->ARR = info->pulseLenght.x;
 658              		.loc 1 92 5 view .LVU179
 659              		.loc 1 92 10 is_stmt 0 view .LVU180
 660 0000 0B68     		ldr	r3, [r1]
 661              		.loc 1 92 45 view .LVU181
 662 0002 B0F90820 		ldrsh	r2, [r0, #8]
 663              		.loc 1 92 26 view .LVU182
 664 0006 DA62     		str	r2, [r3, #44]
  93:Core/Src/cnc_core.c ****     htimX->Instance->CCR3 = ((info->pulseLenght.x)>>1);
 665              		.loc 1 93 5 is_stmt 1 view .LVU183
 666              		.loc 1 93 48 is_stmt 0 view .LVU184
 667 0008 B0F90830 		ldrsh	r3, [r0, #8]
 668              		.loc 1 93 10 view .LVU185
 669 000c 0A68     		ldr	r2, [r1]
 670              		.loc 1 93 51 view .LVU186
 671 000e 5B10     		asrs	r3, r3, #1
 672              		.loc 1 93 27 view .LVU187
 673 0010 D363     		str	r3, [r2, #60]
  94:Core/Src/cnc_core.c **** 
  95:Core/Src/cnc_core.c ****     if(info->dir.x){
 674              		.loc 1 95 5 is_stmt 1 view .LVU188
 675              		.loc 1 95 17 is_stmt 0 view .LVU189
 676 0012 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 677              		.loc 1 95 7 view .LVU190
 678 0014 8BB1     		cbz	r3, .L41
  96:Core/Src/cnc_core.c ****         if(info->pulsesCnt.x == stepX_01mm-1){
 679              		.loc 1 96 9 is_stmt 1 view .LVU191
 680              		.loc 1 96 27 is_stmt 0 view .LVU192
 681 0016 8389     		ldrh	r3, [r0, #12]
 682              		.loc 1 96 11 view .LVU193
 683 0018 032B     		cmp	r3, #3
 684 001a 02D0     		beq	.L47
  97:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
  98:Core/Src/cnc_core.c ****             if(info->pos.x < max_limX)
  99:Core/Src/cnc_core.c ****                 info->pos.x++;
 100:Core/Src/cnc_core.c ****             info->update = true;
 101:Core/Src/cnc_core.c ****         }
 102:Core/Src/cnc_core.c ****         else
 103:Core/Src/cnc_core.c ****             info->pulsesCnt.x++;
 685              		.loc 1 103 13 is_stmt 1 view .LVU194
 686              		.loc 1 103 30 is_stmt 0 view .LVU195
 687 001c 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccuXJxLl.s 			page 15


 688 001e 8381     		strh	r3, [r0, #12]	@ movhi
 689 0020 7047     		bx	lr
 690              	.L47:
  97:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
 691              		.loc 1 97 13 is_stmt 1 view .LVU196
  97:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
 692              		.loc 1 97 31 is_stmt 0 view .LVU197
 693 0022 0023     		movs	r3, #0
 694 0024 8381     		strh	r3, [r0, #12]	@ movhi
  98:Core/Src/cnc_core.c ****                 info->pos.x++;
 695              		.loc 1 98 13 is_stmt 1 view .LVU198
  98:Core/Src/cnc_core.c ****                 info->pos.x++;
 696              		.loc 1 98 25 is_stmt 0 view .LVU199
 697 0026 8388     		ldrh	r3, [r0, #4]
  98:Core/Src/cnc_core.c ****                 info->pos.x++;
 698              		.loc 1 98 15 view .LVU200
 699 0028 4CF61F32 		movw	r2, #51999
 700 002c 9342     		cmp	r3, r2
 701 002e 01D8     		bhi	.L43
  99:Core/Src/cnc_core.c ****             info->update = true;
 702              		.loc 1 99 17 is_stmt 1 view .LVU201
  99:Core/Src/cnc_core.c ****             info->update = true;
 703              		.loc 1 99 28 is_stmt 0 view .LVU202
 704 0030 0133     		adds	r3, r3, #1
 705 0032 8380     		strh	r3, [r0, #4]	@ movhi
 706              	.L43:
 100:Core/Src/cnc_core.c ****         }
 707              		.loc 1 100 13 is_stmt 1 view .LVU203
 100:Core/Src/cnc_core.c ****         }
 708              		.loc 1 100 26 is_stmt 0 view .LVU204
 709 0034 0123     		movs	r3, #1
 710 0036 8376     		strb	r3, [r0, #26]
 711 0038 7047     		bx	lr
 712              	.L41:
 104:Core/Src/cnc_core.c ****     }
 105:Core/Src/cnc_core.c ****     else{
 106:Core/Src/cnc_core.c ****         if(info->pulsesCnt.x == 0){
 713              		.loc 1 106 9 is_stmt 1 view .LVU205
 714              		.loc 1 106 27 is_stmt 0 view .LVU206
 715 003a 8389     		ldrh	r3, [r0, #12]
 716              		.loc 1 106 11 view .LVU207
 717 003c 43B9     		cbnz	r3, .L45
 107:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 3;
 718              		.loc 1 107 13 is_stmt 1 view .LVU208
 719              		.loc 1 107 31 is_stmt 0 view .LVU209
 720 003e 0323     		movs	r3, #3
 721 0040 8381     		strh	r3, [r0, #12]	@ movhi
 108:Core/Src/cnc_core.c ****             if(info->pos.x > 0)
 722              		.loc 1 108 13 is_stmt 1 view .LVU210
 723              		.loc 1 108 25 is_stmt 0 view .LVU211
 724 0042 8388     		ldrh	r3, [r0, #4]
 725              		.loc 1 108 15 view .LVU212
 726 0044 0BB1     		cbz	r3, .L46
 109:Core/Src/cnc_core.c ****                 info->pos.x--;
 727              		.loc 1 109 17 is_stmt 1 view .LVU213
 728              		.loc 1 109 28 is_stmt 0 view .LVU214
 729 0046 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccuXJxLl.s 			page 16


 730 0048 8380     		strh	r3, [r0, #4]	@ movhi
 731              	.L46:
 110:Core/Src/cnc_core.c ****             info->update = true;
 732              		.loc 1 110 13 is_stmt 1 view .LVU215
 733              		.loc 1 110 26 is_stmt 0 view .LVU216
 734 004a 0123     		movs	r3, #1
 735 004c 8376     		strb	r3, [r0, #26]
 736 004e 7047     		bx	lr
 737              	.L45:
 111:Core/Src/cnc_core.c ****         }
 112:Core/Src/cnc_core.c ****         else
 113:Core/Src/cnc_core.c ****             info->pulsesCnt.x--;
 738              		.loc 1 113 13 is_stmt 1 view .LVU217
 739              		.loc 1 113 30 is_stmt 0 view .LVU218
 740 0050 013B     		subs	r3, r3, #1
 741 0052 8381     		strh	r3, [r0, #12]	@ movhi
 114:Core/Src/cnc_core.c ****     }
 115:Core/Src/cnc_core.c **** }
 742              		.loc 1 115 1 view .LVU219
 743 0054 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE292:
 747              		.section	.text.CNC_TIM_Callback_Y,"ax",%progbits
 748              		.align	1
 749              		.global	CNC_TIM_Callback_Y
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	CNC_TIM_Callback_Y:
 755              	.LVL49:
 756              	.LFB293:
 116:Core/Src/cnc_core.c **** 
 117:Core/Src/cnc_core.c **** void CNC_TIM_Callback_Y(HMI_info_t* info, TIM_HandleTypeDef *htimY){
 757              		.loc 1 117 68 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 118:Core/Src/cnc_core.c ****     htimY->Instance->ARR = info->pulseLenght.y;
 762              		.loc 1 118 5 view .LVU221
 763              		.loc 1 118 10 is_stmt 0 view .LVU222
 764 0000 0B68     		ldr	r3, [r1]
 765              		.loc 1 118 45 view .LVU223
 766 0002 B0F90A20 		ldrsh	r2, [r0, #10]
 767              		.loc 1 118 26 view .LVU224
 768 0006 DA62     		str	r2, [r3, #44]
 119:Core/Src/cnc_core.c ****     htimY->Instance->CCR1 = ((info->pulseLenght.y)>>1);
 769              		.loc 1 119 5 is_stmt 1 view .LVU225
 770              		.loc 1 119 48 is_stmt 0 view .LVU226
 771 0008 B0F90A30 		ldrsh	r3, [r0, #10]
 772              		.loc 1 119 10 view .LVU227
 773 000c 0A68     		ldr	r2, [r1]
 774              		.loc 1 119 51 view .LVU228
 775 000e 5B10     		asrs	r3, r3, #1
 776              		.loc 1 119 27 view .LVU229
 777 0010 5363     		str	r3, [r2, #52]
 120:Core/Src/cnc_core.c **** 
ARM GAS  /tmp/ccuXJxLl.s 			page 17


 121:Core/Src/cnc_core.c ****     if(info->dir.y){
 778              		.loc 1 121 5 is_stmt 1 view .LVU230
 779              		.loc 1 121 17 is_stmt 0 view .LVU231
 780 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 781              		.loc 1 121 7 view .LVU232
 782 0014 6BB1     		cbz	r3, .L49
 122:Core/Src/cnc_core.c ****         if(info->pulsesCnt.y == stepY_01mm-1){
 783              		.loc 1 122 9 is_stmt 1 view .LVU233
 784              		.loc 1 122 27 is_stmt 0 view .LVU234
 785 0016 C389     		ldrh	r3, [r0, #14]
 786              		.loc 1 122 11 view .LVU235
 787 0018 032B     		cmp	r3, #3
 788 001a 02D0     		beq	.L54
 123:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 124:Core/Src/cnc_core.c ****             if(info->pos.y < max_limY)
 125:Core/Src/cnc_core.c ****                 info->pos.y++;
 126:Core/Src/cnc_core.c ****             info->update = true;
 127:Core/Src/cnc_core.c ****         }
 128:Core/Src/cnc_core.c ****         else
 129:Core/Src/cnc_core.c ****             info->pulsesCnt.y++;
 789              		.loc 1 129 13 is_stmt 1 view .LVU236
 790              		.loc 1 129 30 is_stmt 0 view .LVU237
 791 001c 0133     		adds	r3, r3, #1
 792 001e C381     		strh	r3, [r0, #14]	@ movhi
 793 0020 7047     		bx	lr
 794              	.L54:
 123:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 795              		.loc 1 123 13 is_stmt 1 view .LVU238
 123:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 796              		.loc 1 123 31 is_stmt 0 view .LVU239
 797 0022 0023     		movs	r3, #0
 798 0024 C381     		strh	r3, [r0, #14]	@ movhi
 124:Core/Src/cnc_core.c ****                 info->pos.y++;
 799              		.loc 1 124 13 is_stmt 1 view .LVU240
 125:Core/Src/cnc_core.c ****             info->update = true;
 800              		.loc 1 125 17 view .LVU241
 125:Core/Src/cnc_core.c ****             info->update = true;
 801              		.loc 1 125 26 is_stmt 0 view .LVU242
 802 0026 C388     		ldrh	r3, [r0, #6]
 125:Core/Src/cnc_core.c ****             info->update = true;
 803              		.loc 1 125 28 view .LVU243
 804 0028 0133     		adds	r3, r3, #1
 805 002a C380     		strh	r3, [r0, #6]	@ movhi
 126:Core/Src/cnc_core.c ****         }
 806              		.loc 1 126 13 is_stmt 1 view .LVU244
 126:Core/Src/cnc_core.c ****         }
 807              		.loc 1 126 26 is_stmt 0 view .LVU245
 808 002c 0123     		movs	r3, #1
 809 002e 8376     		strb	r3, [r0, #26]
 810 0030 7047     		bx	lr
 811              	.L49:
 130:Core/Src/cnc_core.c ****     }
 131:Core/Src/cnc_core.c ****     else{
 132:Core/Src/cnc_core.c ****         if(info->pulsesCnt.y == 0){
 812              		.loc 1 132 9 is_stmt 1 view .LVU246
 813              		.loc 1 132 27 is_stmt 0 view .LVU247
 814 0032 C389     		ldrh	r3, [r0, #14]
ARM GAS  /tmp/ccuXJxLl.s 			page 18


 815              		.loc 1 132 11 view .LVU248
 816 0034 43B9     		cbnz	r3, .L52
 133:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 3;
 817              		.loc 1 133 13 is_stmt 1 view .LVU249
 818              		.loc 1 133 31 is_stmt 0 view .LVU250
 819 0036 0323     		movs	r3, #3
 820 0038 C381     		strh	r3, [r0, #14]	@ movhi
 134:Core/Src/cnc_core.c ****             if(info->pos.y > 0)
 821              		.loc 1 134 13 is_stmt 1 view .LVU251
 822              		.loc 1 134 25 is_stmt 0 view .LVU252
 823 003a C388     		ldrh	r3, [r0, #6]
 824              		.loc 1 134 15 view .LVU253
 825 003c 0BB1     		cbz	r3, .L53
 135:Core/Src/cnc_core.c ****                 info->pos.y--;
 826              		.loc 1 135 17 is_stmt 1 view .LVU254
 827              		.loc 1 135 28 is_stmt 0 view .LVU255
 828 003e 013B     		subs	r3, r3, #1
 829 0040 C380     		strh	r3, [r0, #6]	@ movhi
 830              	.L53:
 136:Core/Src/cnc_core.c ****             info->update = true;
 831              		.loc 1 136 13 is_stmt 1 view .LVU256
 832              		.loc 1 136 26 is_stmt 0 view .LVU257
 833 0042 0123     		movs	r3, #1
 834 0044 8376     		strb	r3, [r0, #26]
 835 0046 7047     		bx	lr
 836              	.L52:
 137:Core/Src/cnc_core.c ****         }
 138:Core/Src/cnc_core.c ****         else
 139:Core/Src/cnc_core.c ****             info->pulsesCnt.y--;
 837              		.loc 1 139 13 is_stmt 1 view .LVU258
 838              		.loc 1 139 30 is_stmt 0 view .LVU259
 839 0048 013B     		subs	r3, r3, #1
 840 004a C381     		strh	r3, [r0, #14]	@ movhi
 140:Core/Src/cnc_core.c ****     }
 141:Core/Src/cnc_core.c **** }
 841              		.loc 1 141 1 view .LVU260
 842 004c 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE293:
 846              		.section	.text.CNC_HL_Control,"ax",%progbits
 847              		.align	1
 848              		.global	CNC_HL_Control
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 853              	CNC_HL_Control:
 854              	.LVL50:
 855              	.LFB294:
 142:Core/Src/cnc_core.c **** 
 143:Core/Src/cnc_core.c **** void CNC_HL_Control(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY, UART_Hand
 856              		.loc 1 143 146 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 4, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		.loc 1 143 146 is_stmt 0 view .LVU262
 861 0000 38B5     		push	{r3, r4, r5, lr}
 862              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccuXJxLl.s 			page 19


 863              		.cfi_offset 3, -16
 864              		.cfi_offset 4, -12
 865              		.cfi_offset 5, -8
 866              		.cfi_offset 14, -4
 867 0002 0446     		mov	r4, r0
 144:Core/Src/cnc_core.c ****     switch (info->mode) {
 868              		.loc 1 144 5 is_stmt 1 view .LVU263
 869              		.loc 1 144 17 is_stmt 0 view .LVU264
 870 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 871              	.LVL51:
 872              		.loc 1 144 5 view .LVU265
 873 0006 0128     		cmp	r0, #1
 874 0008 11D0     		beq	.L56
 875 000a 1D46     		mov	r5, r3
 876 000c 0328     		cmp	r0, #3
 877 000e 33D0     		beq	.L57
 878 0010 00B1     		cbz	r0, .L71
 879              	.LVL52:
 880              	.L55:
 145:Core/Src/cnc_core.c ****         case  HMI_Mode_Zero:
 146:Core/Src/cnc_core.c ****             if(info->state == HMI_State_Run){
 147:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 148:Core/Src/cnc_core.c ****                     info->move = HMI_Move_Jog;
 149:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 150:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 151:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 152:Core/Src/cnc_core.c ****                 }
 153:Core/Src/cnc_core.c ****             }
 154:Core/Src/cnc_core.c ****         break;
 155:Core/Src/cnc_core.c **** 
 156:Core/Src/cnc_core.c ****         case  HMI_Mode_Man:
 157:Core/Src/cnc_core.c ****             info->move = HMI_Move_Jog;
 158:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 159:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 160:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 161:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 162:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 163:Core/Src/cnc_core.c ****         break;
 164:Core/Src/cnc_core.c **** 
 165:Core/Src/cnc_core.c ****         case  HMI_Mode_Face:
 166:Core/Src/cnc_core.c ****             
 167:Core/Src/cnc_core.c ****         break; 
 168:Core/Src/cnc_core.c **** 
 169:Core/Src/cnc_core.c ****         case  HMI_Mode_Ser:
 170:Core/Src/cnc_core.c ****             if(info->state == HMI_State_Run){
 171:Core/Src/cnc_core.c ****                 switch (info->move) {
 172:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 173:Core/Src/cnc_core.c ****                     if(ReadGcode(huart, info)) 
 174:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 175:Core/Src/cnc_core.c ****                     else
 176:Core/Src/cnc_core.c ****                         WriteACK(huart, false);
 177:Core/Src/cnc_core.c ****                 break;
 178:Core/Src/cnc_core.c **** 
 179:Core/Src/cnc_core.c ****                 case HMI_Move_Done:
 180:Core/Src/cnc_core.c ****                     info->move = HMI_Move_None;
 181:Core/Src/cnc_core.c ****                     info->update = true;
 182:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
ARM GAS  /tmp/ccuXJxLl.s 			page 20


 183:Core/Src/cnc_core.c ****                 break;
 184:Core/Src/cnc_core.c **** 
 185:Core/Src/cnc_core.c ****                 case HMI_Move_Absolute:
 186:Core/Src/cnc_core.c ****                     CNC_Absolute(info, htimX, htimY);
 187:Core/Src/cnc_core.c ****                 break;
 188:Core/Src/cnc_core.c **** 
 189:Core/Src/cnc_core.c ****                 case HMI_Move_Jog:
 190:Core/Src/cnc_core.c ****                     info->move = HMI_Move_None;;
 191:Core/Src/cnc_core.c ****                 break;
 192:Core/Src/cnc_core.c ****                 }
 193:Core/Src/cnc_core.c ****             }               
 194:Core/Src/cnc_core.c ****         break;
 195:Core/Src/cnc_core.c ****     }
 196:Core/Src/cnc_core.c **** }
 881              		.loc 1 196 1 view .LVU266
 882 0012 38BD     		pop	{r3, r4, r5, pc}
 883              	.LVL53:
 884              	.L71:
 885              	.LBB2:
 146:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 886              		.loc 1 146 13 is_stmt 1 view .LVU267
 146:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 887              		.loc 1 146 20 is_stmt 0 view .LVU268
 888 0014 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 889              	.LVL54:
 146:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 890              		.loc 1 146 15 view .LVU269
 891 0016 022B     		cmp	r3, #2
 892 0018 FBD1     		bne	.L55
 147:Core/Src/cnc_core.c ****                     info->move = HMI_Move_Jog;
 893              		.loc 1 147 17 is_stmt 1 view .LVU270
 148:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 894              		.loc 1 148 21 view .LVU271
 148:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 895              		.loc 1 148 32 is_stmt 0 view .LVU272
 896 001a 0123     		movs	r3, #1
 897 001c A370     		strb	r3, [r4, #2]
 149:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 898              		.loc 1 149 21 is_stmt 1 view .LVU273
 149:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 899              		.loc 1 149 45 is_stmt 0 view .LVU274
 900 001e 4FF63873 		movw	r3, #65336
 901 0022 6382     		strh	r3, [r4, #18]	@ movhi
 150:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 902              		.loc 1 150 21 is_stmt 1 view .LVU275
 150:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 903              		.loc 1 150 45 is_stmt 0 view .LVU276
 904 0024 A382     		strh	r3, [r4, #20]	@ movhi
 151:Core/Src/cnc_core.c ****                 }
 905              		.loc 1 151 21 is_stmt 1 view .LVU277
 906 0026 2046     		mov	r0, r4
 907 0028 FFF7FEFF 		bl	CNC_Jog
 908              	.LVL55:
 151:Core/Src/cnc_core.c ****                 }
 909              		.loc 1 151 21 is_stmt 0 view .LVU278
 910 002c F1E7     		b	.L55
 911              	.LVL56:
ARM GAS  /tmp/ccuXJxLl.s 			page 21


 912              	.L56:
 157:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 913              		.loc 1 157 13 is_stmt 1 view .LVU279
 157:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 914              		.loc 1 157 24 is_stmt 0 view .LVU280
 915 002e 0123     		movs	r3, #1
 916              	.LVL57:
 157:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 917              		.loc 1 157 24 view .LVU281
 918 0030 A370     		strb	r3, [r4, #2]
 158:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 919              		.loc 1 158 13 is_stmt 1 view .LVU282
 158:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 920              		.loc 1 158 48 is_stmt 0 view .LVU283
 921 0032 049B     		ldr	r3, [sp, #16]
 922 0034 9889     		ldrh	r0, [r3, #12]
 158:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 923              		.loc 1 158 29 view .LVU284
 924 0036 C0F34E00 		ubfx	r0, r0, #1, #15
 158:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 925              		.loc 1 158 57 view .LVU285
 926 003a A0F29A30 		subw	r0, r0, #922
 158:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 927              		.loc 1 158 21 view .LVU286
 928 003e 00B2     		sxth	r0, r0
 929              	.LVL58:
 159:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 930              		.loc 1 159 13 is_stmt 1 view .LVU287
 159:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 931              		.loc 1 159 48 is_stmt 0 view .LVU288
 932 0040 DB89     		ldrh	r3, [r3, #14]
 159:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 933              		.loc 1 159 29 view .LVU289
 934 0042 C3F34E03 		ubfx	r3, r3, #1, #15
 159:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 935              		.loc 1 159 57 view .LVU290
 936 0046 A3F28B33 		subw	r3, r3, #907
 159:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 937              		.loc 1 159 21 view .LVU291
 938 004a 1BB2     		sxth	r3, r3
 939              	.LVL59:
 160:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 940              		.loc 1 160 13 is_stmt 1 view .LVU292
 160:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 941              		.loc 1 160 40 is_stmt 0 view .LVU293
 942 004c 80EAE075 		eor	r5, r0, r0, asr #31
 943 0050 A5EBE075 		sub	r5, r5, r0, asr #31
 944 0054 ADB2     		uxth	r5, r5
 160:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 945              		.loc 1 160 37 view .LVU294
 946 0056 462D     		cmp	r5, #70
 947 0058 00D8     		bhi	.L59
 948 005a 0020     		movs	r0, #0
 949              	.LVL60:
 950              	.L59:
 160:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 951              		.loc 1 160 37 discriminator 4 view .LVU295
ARM GAS  /tmp/ccuXJxLl.s 			page 22


 952 005c 6082     		strh	r0, [r4, #18]	@ movhi
 161:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 953              		.loc 1 161 13 is_stmt 1 discriminator 4 view .LVU296
 161:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 954              		.loc 1 161 40 is_stmt 0 discriminator 4 view .LVU297
 955 005e 83EAE370 		eor	r0, r3, r3, asr #31
 956 0062 A0EBE370 		sub	r0, r0, r3, asr #31
 957 0066 80B2     		uxth	r0, r0
 161:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 958              		.loc 1 161 37 discriminator 4 view .LVU298
 959 0068 4628     		cmp	r0, #70
 960 006a 00D8     		bhi	.L60
 161:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 961              		.loc 1 161 37 view .LVU299
 962 006c 0023     		movs	r3, #0
 963              	.LVL61:
 964              	.L60:
 161:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 965              		.loc 1 161 37 discriminator 4 view .LVU300
 966 006e A382     		strh	r3, [r4, #20]	@ movhi
 162:Core/Src/cnc_core.c ****         break;
 967              		.loc 1 162 13 is_stmt 1 discriminator 4 view .LVU301
 968 0070 2046     		mov	r0, r4
 969 0072 FFF7FEFF 		bl	CNC_Jog
 970              	.LVL62:
 163:Core/Src/cnc_core.c **** 
 971              		.loc 1 163 9 discriminator 4 view .LVU302
 972 0076 CCE7     		b	.L55
 973              	.LVL63:
 974              	.L57:
 170:Core/Src/cnc_core.c ****                 switch (info->move) {
 975              		.loc 1 170 13 view .LVU303
 170:Core/Src/cnc_core.c ****                 switch (info->move) {
 976              		.loc 1 170 20 is_stmt 0 view .LVU304
 977 0078 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 978              	.LVL64:
 170:Core/Src/cnc_core.c ****                 switch (info->move) {
 979              		.loc 1 170 15 view .LVU305
 980 007a 022B     		cmp	r3, #2
 981 007c C9D1     		bne	.L55
 171:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 982              		.loc 1 171 17 is_stmt 1 view .LVU306
 171:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 983              		.loc 1 171 29 is_stmt 0 view .LVU307
 984 007e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 985 0080 032B     		cmp	r3, #3
 986 0082 C6D8     		bhi	.L55
 987 0084 DFE803F0 		tbb	[pc, r3]
 988              	.L62:
 989 0088 17       		.byte	(.L65-.L62)/2
 990 0089 1B       		.byte	(.L64-.L62)/2
 991 008a 02       		.byte	(.L63-.L62)/2
 992 008b 0F       		.byte	(.L61-.L62)/2
 993              		.p2align 1
 994              	.L63:
 173:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 995              		.loc 1 173 21 is_stmt 1 view .LVU308
ARM GAS  /tmp/ccuXJxLl.s 			page 23


 173:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 996              		.loc 1 173 24 is_stmt 0 view .LVU309
 997 008c 2146     		mov	r1, r4
 998              	.LVL65:
 173:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 999              		.loc 1 173 24 view .LVU310
 1000 008e 2846     		mov	r0, r5
 1001 0090 FFF7FEFF 		bl	ReadGcode
 1002              	.LVL66:
 173:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 1003              		.loc 1 173 23 view .LVU311
 1004 0094 10B1     		cbz	r0, .L66
 174:Core/Src/cnc_core.c ****                     else
 1005              		.loc 1 174 25 is_stmt 1 view .LVU312
 174:Core/Src/cnc_core.c ****                     else
 1006              		.loc 1 174 36 is_stmt 0 view .LVU313
 1007 0096 0023     		movs	r3, #0
 1008 0098 A370     		strb	r3, [r4, #2]
 1009 009a BAE7     		b	.L55
 1010              	.L66:
 176:Core/Src/cnc_core.c ****                 break;
 1011              		.loc 1 176 25 is_stmt 1 view .LVU314
 1012 009c 0021     		movs	r1, #0
 1013 009e 2846     		mov	r0, r5
 1014 00a0 FFF7FEFF 		bl	WriteACK
 1015              	.LVL67:
 1016 00a4 B5E7     		b	.L55
 1017              	.LVL68:
 1018              	.L61:
 180:Core/Src/cnc_core.c ****                     info->update = true;
 1019              		.loc 1 180 21 view .LVU315
 180:Core/Src/cnc_core.c ****                     info->update = true;
 1020              		.loc 1 180 32 is_stmt 0 view .LVU316
 1021 00a6 0223     		movs	r3, #2
 1022 00a8 A370     		strb	r3, [r4, #2]
 181:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 1023              		.loc 1 181 21 is_stmt 1 view .LVU317
 181:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 1024              		.loc 1 181 34 is_stmt 0 view .LVU318
 1025 00aa 0121     		movs	r1, #1
 1026              	.LVL69:
 181:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 1027              		.loc 1 181 34 view .LVU319
 1028 00ac A176     		strb	r1, [r4, #26]
 182:Core/Src/cnc_core.c ****                 break;
 1029              		.loc 1 182 21 is_stmt 1 view .LVU320
 1030 00ae 2846     		mov	r0, r5
 1031 00b0 FFF7FEFF 		bl	WriteACK
 1032              	.LVL70:
 183:Core/Src/cnc_core.c **** 
 1033              		.loc 1 183 17 view .LVU321
 1034 00b4 ADE7     		b	.L55
 1035              	.LVL71:
 1036              	.L65:
 186:Core/Src/cnc_core.c ****                 break;
 1037              		.loc 1 186 21 view .LVU322
 1038 00b6 2046     		mov	r0, r4
ARM GAS  /tmp/ccuXJxLl.s 			page 24


 1039 00b8 FFF7FEFF 		bl	CNC_Absolute
 1040              	.LVL72:
 187:Core/Src/cnc_core.c **** 
 1041              		.loc 1 187 17 view .LVU323
 1042 00bc A9E7     		b	.L55
 1043              	.LVL73:
 1044              	.L64:
 190:Core/Src/cnc_core.c ****                 break;
 1045              		.loc 1 190 21 view .LVU324
 190:Core/Src/cnc_core.c ****                 break;
 1046              		.loc 1 190 32 is_stmt 0 view .LVU325
 1047 00be 0223     		movs	r3, #2
 1048 00c0 A370     		strb	r3, [r4, #2]
 190:Core/Src/cnc_core.c ****                 break;
 1049              		.loc 1 190 48 is_stmt 1 view .LVU326
 191:Core/Src/cnc_core.c ****                 }
 1050              		.loc 1 191 17 view .LVU327
 1051              	.LBE2:
 1052              		.loc 1 196 1 is_stmt 0 view .LVU328
 1053 00c2 A6E7     		b	.L55
 1054              		.cfi_endproc
 1055              	.LFE294:
 1057              		.section	.text.CNC_Stop,"ax",%progbits
 1058              		.align	1
 1059              		.global	CNC_Stop
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1064              	CNC_Stop:
 1065              	.LVL74:
 1066              	.LFB295:
 197:Core/Src/cnc_core.c **** 
 198:Core/Src/cnc_core.c **** void CNC_Stop(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1067              		.loc 1 198 84 is_stmt 1 view -0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 199:Core/Src/cnc_core.c ****     htimX->Instance->CR1 |= TIM_CR1_OPM;
 1072              		.loc 1 199 5 view .LVU330
 1073              		.loc 1 199 10 is_stmt 0 view .LVU331
 1074 0000 0968     		ldr	r1, [r1]
 1075              	.LVL75:
 1076              		.loc 1 199 26 view .LVU332
 1077 0002 0B68     		ldr	r3, [r1]
 1078 0004 43F00803 		orr	r3, r3, #8
 1079 0008 0B60     		str	r3, [r1]
 200:Core/Src/cnc_core.c ****     htimY->Instance->CR1 |= TIM_CR1_OPM;
 1080              		.loc 1 200 5 is_stmt 1 view .LVU333
 1081              		.loc 1 200 10 is_stmt 0 view .LVU334
 1082 000a 1268     		ldr	r2, [r2]
 1083              	.LVL76:
 1084              		.loc 1 200 26 view .LVU335
 1085 000c 1368     		ldr	r3, [r2]
 1086 000e 43F00803 		orr	r3, r3, #8
 1087 0012 1360     		str	r3, [r2]
 201:Core/Src/cnc_core.c **** 
ARM GAS  /tmp/ccuXJxLl.s 			page 25


 202:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1088              		.loc 1 202 5 is_stmt 1 view .LVU336
 1089              		.loc 1 202 17 is_stmt 0 view .LVU337
 1090 0014 0023     		movs	r3, #0
 1091 0016 4370     		strb	r3, [r0, #1]
 203:Core/Src/cnc_core.c ****     info->update = true;
 1092              		.loc 1 203 5 is_stmt 1 view .LVU338
 1093              		.loc 1 203 18 is_stmt 0 view .LVU339
 1094 0018 0123     		movs	r3, #1
 1095 001a 8376     		strb	r3, [r0, #26]
 204:Core/Src/cnc_core.c ****     info->cnt2 = 30;
 1096              		.loc 1 204 5 is_stmt 1 view .LVU340
 1097              		.loc 1 204 16 is_stmt 0 view .LVU341
 1098 001c 1E23     		movs	r3, #30
 1099 001e 4376     		strb	r3, [r0, #25]
 205:Core/Src/cnc_core.c **** }
 1100              		.loc 1 205 1 view .LVU342
 1101 0020 7047     		bx	lr
 1102              		.cfi_endproc
 1103              	.LFE295:
 1105              		.section	.text.CNC_Limit_X,"ax",%progbits
 1106              		.align	1
 1107              		.global	CNC_Limit_X
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1112              	CNC_Limit_X:
 1113              	.LVL77:
 1114              	.LFB296:
 206:Core/Src/cnc_core.c **** 
 207:Core/Src/cnc_core.c **** void CNC_Limit_X(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1115              		.loc 1 207 87 is_stmt 1 view -0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 208:Core/Src/cnc_core.c ****     htimX->Instance->CR1 |= TIM_CR1_OPM;
 1120              		.loc 1 208 5 view .LVU344
 1121              		.loc 1 208 10 is_stmt 0 view .LVU345
 1122 0000 0A68     		ldr	r2, [r1]
 1123              	.LVL78:
 1124              		.loc 1 208 26 view .LVU346
 1125 0002 1368     		ldr	r3, [r2]
 1126 0004 43F00803 		orr	r3, r3, #8
 1127 0008 1360     		str	r3, [r2]
 209:Core/Src/cnc_core.c **** 
 210:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1128              		.loc 1 210 5 is_stmt 1 view .LVU347
 1129              		.loc 1 210 17 is_stmt 0 view .LVU348
 1130 000a 0023     		movs	r3, #0
 1131 000c 4370     		strb	r3, [r0, #1]
 211:Core/Src/cnc_core.c ****     info->pos.x = 0;
 1132              		.loc 1 211 5 is_stmt 1 view .LVU349
 1133              		.loc 1 211 17 is_stmt 0 view .LVU350
 1134 000e 8380     		strh	r3, [r0, #4]	@ movhi
 212:Core/Src/cnc_core.c ****     info->zeroed.x = true;
 1135              		.loc 1 212 5 is_stmt 1 view .LVU351
ARM GAS  /tmp/ccuXJxLl.s 			page 26


 1136              		.loc 1 212 20 is_stmt 0 view .LVU352
 1137 0010 0123     		movs	r3, #1
 1138 0012 C376     		strb	r3, [r0, #27]
 213:Core/Src/cnc_core.c ****     info->update = true;
 1139              		.loc 1 213 5 is_stmt 1 view .LVU353
 1140              		.loc 1 213 18 is_stmt 0 view .LVU354
 1141 0014 8376     		strb	r3, [r0, #26]
 214:Core/Src/cnc_core.c **** }
 1142              		.loc 1 214 1 view .LVU355
 1143 0016 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE296:
 1147              		.section	.text.CNC_Limit_Y,"ax",%progbits
 1148              		.align	1
 1149              		.global	CNC_Limit_Y
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1154              	CNC_Limit_Y:
 1155              	.LVL79:
 1156              	.LFB297:
 215:Core/Src/cnc_core.c **** 
 216:Core/Src/cnc_core.c **** void CNC_Limit_Y(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1157              		.loc 1 216 87 is_stmt 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 217:Core/Src/cnc_core.c ****     htimY->Instance->CR1 |= TIM_CR1_OPM;
 1162              		.loc 1 217 5 view .LVU357
 1163              		.loc 1 217 10 is_stmt 0 view .LVU358
 1164 0000 1268     		ldr	r2, [r2]
 1165              	.LVL80:
 1166              		.loc 1 217 26 view .LVU359
 1167 0002 1368     		ldr	r3, [r2]
 1168 0004 43F00803 		orr	r3, r3, #8
 1169 0008 1360     		str	r3, [r2]
 218:Core/Src/cnc_core.c **** 
 219:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1170              		.loc 1 219 5 is_stmt 1 view .LVU360
 1171              		.loc 1 219 17 is_stmt 0 view .LVU361
 1172 000a 0023     		movs	r3, #0
 1173 000c 4370     		strb	r3, [r0, #1]
 220:Core/Src/cnc_core.c ****     info->pos.y = 0;
 1174              		.loc 1 220 5 is_stmt 1 view .LVU362
 1175              		.loc 1 220 17 is_stmt 0 view .LVU363
 1176 000e C380     		strh	r3, [r0, #6]	@ movhi
 221:Core/Src/cnc_core.c ****     info->zeroed.y = true;
 1177              		.loc 1 221 5 is_stmt 1 view .LVU364
 1178              		.loc 1 221 20 is_stmt 0 view .LVU365
 1179 0010 0123     		movs	r3, #1
 1180 0012 0377     		strb	r3, [r0, #28]
 222:Core/Src/cnc_core.c ****     info->update = true;
 1181              		.loc 1 222 5 is_stmt 1 view .LVU366
 1182              		.loc 1 222 18 is_stmt 0 view .LVU367
 1183 0014 8376     		strb	r3, [r0, #26]
 223:Core/Src/cnc_core.c **** }
ARM GAS  /tmp/ccuXJxLl.s 			page 27


 1184              		.loc 1 223 1 view .LVU368
 1185 0016 7047     		bx	lr
 1186              		.cfi_endproc
 1187              	.LFE297:
 1189              		.text
 1190              	.Letext0:
 1191              		.file 2 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1192              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1193              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 1194              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1195              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1196              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1197              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1198              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1199              		.file 10 "Core/Inc/cnc_info.h"
 1200              		.file 11 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1201              		.file 12 "Core/Inc/data_parser.h"
ARM GAS  /tmp/ccuXJxLl.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cnc_core.c
     /tmp/ccuXJxLl.s:20     .text.ihyp:0000000000000000 $t
     /tmp/ccuXJxLl.s:26     .text.ihyp:0000000000000000 ihyp
     /tmp/ccuXJxLl.s:65     .text.CNC_Stepper:0000000000000000 $t
     /tmp/ccuXJxLl.s:71     .text.CNC_Stepper:0000000000000000 CNC_Stepper
     /tmp/ccuXJxLl.s:282    .text.CNC_Stepper:00000000000000ec $d
     /tmp/ccuXJxLl.s:287    .text.CNC_Absolute:0000000000000000 $t
     /tmp/ccuXJxLl.s:293    .text.CNC_Absolute:0000000000000000 CNC_Absolute
     /tmp/ccuXJxLl.s:510    .text.CNC_Absolute:00000000000000fc $d
     /tmp/ccuXJxLl.s:515    .text.CNC_Jog:0000000000000000 $t
     /tmp/ccuXJxLl.s:521    .text.CNC_Jog:0000000000000000 CNC_Jog
     /tmp/ccuXJxLl.s:639    .text.CNC_Jog:0000000000000098 $d
     /tmp/ccuXJxLl.s:644    .text.CNC_TIM_Callback_X:0000000000000000 $t
     /tmp/ccuXJxLl.s:650    .text.CNC_TIM_Callback_X:0000000000000000 CNC_TIM_Callback_X
     /tmp/ccuXJxLl.s:748    .text.CNC_TIM_Callback_Y:0000000000000000 $t
     /tmp/ccuXJxLl.s:754    .text.CNC_TIM_Callback_Y:0000000000000000 CNC_TIM_Callback_Y
     /tmp/ccuXJxLl.s:847    .text.CNC_HL_Control:0000000000000000 $t
     /tmp/ccuXJxLl.s:853    .text.CNC_HL_Control:0000000000000000 CNC_HL_Control
     /tmp/ccuXJxLl.s:989    .text.CNC_HL_Control:0000000000000088 $d
     /tmp/ccuXJxLl.s:993    .text.CNC_HL_Control:000000000000008c $t
     /tmp/ccuXJxLl.s:1058   .text.CNC_Stop:0000000000000000 $t
     /tmp/ccuXJxLl.s:1064   .text.CNC_Stop:0000000000000000 CNC_Stop
     /tmp/ccuXJxLl.s:1106   .text.CNC_Limit_X:0000000000000000 $t
     /tmp/ccuXJxLl.s:1112   .text.CNC_Limit_X:0000000000000000 CNC_Limit_X
     /tmp/ccuXJxLl.s:1148   .text.CNC_Limit_Y:0000000000000000 $t
     /tmp/ccuXJxLl.s:1154   .text.CNC_Limit_Y:0000000000000000 CNC_Limit_Y

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
div
ReadGcode
WriteACK
