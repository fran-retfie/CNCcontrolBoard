ARM GAS  /tmp/ccf6dNNL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"cnc_core.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ihyp,"ax",%progbits
  20              		.align	1
  21              		.global	ihyp
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ihyp:
  27              	.LVL0:
  28              	.LFB288:
  29              		.file 1 "Core/Src/cnc_core.c"
   1:Core/Src/cnc_core.c **** 
   2:Core/Src/cnc_core.c **** //--- Francesco Osti 29/12/2022 ---//
   3:Core/Src/cnc_core.c **** 
   4:Core/Src/cnc_core.c **** #include "cnc_core.h"
   5:Core/Src/cnc_core.c **** #include "cnc_config.h"
   6:Core/Src/cnc_core.c **** #include "data_parser.h"
   7:Core/Src/cnc_core.c **** #include "main.h"
   8:Core/Src/cnc_core.c **** #include <stdbool.h>
   9:Core/Src/cnc_core.c **** #include <stdlib.h>
  10:Core/Src/cnc_core.c **** 
  11:Core/Src/cnc_core.c **** //very efficient way of approximating hypotenuse using integer numbers
  12:Core/Src/cnc_core.c **** int32_t ihyp(uint16_t x, uint16_t y){
  30              		.loc 1 12 37 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  13:Core/Src/cnc_core.c ****     if(y > x){
  35              		.loc 1 13 5 view .LVU1
  36              		.loc 1 13 7 is_stmt 0 view .LVU2
  37 0000 8142     		cmp	r1, r0
  38 0002 06D9     		bls	.L2
  14:Core/Src/cnc_core.c ****         return (uint32_t) y + ((((uint32_t) x * (uint32_t) x)/y)>>1);
  39              		.loc 1 14 9 is_stmt 1 view .LVU3
  40              		.loc 1 14 47 is_stmt 0 view .LVU4
  41 0004 00FB00F0 		mul	r0, r0, r0
  42              	.LVL1:
  43              		.loc 1 14 62 view .LVU5
  44 0008 B0FBF1F0 		udiv	r0, r0, r1
ARM GAS  /tmp/ccf6dNNL.s 			page 2


  45              		.loc 1 14 29 view .LVU6
  46 000c 01EB5000 		add	r0, r1, r0, lsr #1
  47 0010 7047     		bx	lr
  48              	.LVL2:
  49              	.L2:
  15:Core/Src/cnc_core.c ****     }
  16:Core/Src/cnc_core.c ****     else {
  17:Core/Src/cnc_core.c ****         return (uint32_t) x + ((((uint32_t) y * (uint32_t) y)/x)>>1);
  50              		.loc 1 17 9 is_stmt 1 view .LVU7
  51              		.loc 1 17 47 is_stmt 0 view .LVU8
  52 0012 01FB01F1 		mul	r1, r1, r1
  53              	.LVL3:
  54              		.loc 1 17 62 view .LVU9
  55 0016 B1FBF0F1 		udiv	r1, r1, r0
  56              		.loc 1 17 29 view .LVU10
  57 001a 00EB5100 		add	r0, r0, r1, lsr #1
  58              	.LVL4:
  18:Core/Src/cnc_core.c ****     }
  19:Core/Src/cnc_core.c **** }
  59              		.loc 1 19 1 view .LVU11
  60 001e 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE288:
  64              		.section	.text.CNC_Stepper,"ax",%progbits
  65              		.align	1
  66              		.global	CNC_Stepper
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	CNC_Stepper:
  72              	.LVL5:
  73              	.LFB289:
  20:Core/Src/cnc_core.c **** 
  21:Core/Src/cnc_core.c **** void CNC_Stepper(HMI_info_t* info, bool runX, bool runY, TIM_HandleTypeDef *htimX, TIM_HandleTypeDe
  74              		.loc 1 21 109 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 4, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 21 109 is_stmt 0 view .LVU13
  79 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 4, -24
  82              		.cfi_offset 5, -20
  83              		.cfi_offset 6, -16
  84              		.cfi_offset 7, -12
  85              		.cfi_offset 8, -8
  86              		.cfi_offset 14, -4
  87 0004 0646     		mov	r6, r0
  88 0006 0D46     		mov	r5, r1
  89 0008 1746     		mov	r7, r2
  90 000a 1C46     		mov	r4, r3
  91 000c DDF81880 		ldr	r8, [sp, #24]
  22:Core/Src/cnc_core.c ****     //runX &= !(!HAL_GPIO_ReadPin(limitX_Port, limitX_Pin) || ((info->pos.x == 0) && !info->dir.x) 
  23:Core/Src/cnc_core.c ****     //runY &= !(!HAL_GPIO_ReadPin(limitY_Port, limitY_Pin) || ((info->pos.y == 0) && !info->dir.y) 
  24:Core/Src/cnc_core.c ****     if(!HAL_GPIO_ReadPin(SWSTOP_GPIO_Port, SWSTOP_Pin)){
  92              		.loc 1 24 5 is_stmt 1 view .LVU14
  93              		.loc 1 24 9 is_stmt 0 view .LVU15
ARM GAS  /tmp/ccf6dNNL.s 			page 3


  94 0010 4021     		movs	r1, #64
  95              	.LVL6:
  96              		.loc 1 24 9 view .LVU16
  97 0012 4FF09040 		mov	r0, #1207959552
  98              	.LVL7:
  99              		.loc 1 24 9 view .LVU17
 100 0016 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 101              	.LVL8:
 102              		.loc 1 24 7 view .LVU18
 103 001a 0028     		cmp	r0, #0
 104 001c 3ED1     		bne	.L5
  25:Core/Src/cnc_core.c ****         if(runX){
 105              		.loc 1 25 9 is_stmt 1 view .LVU19
 106              		.loc 1 25 11 is_stmt 0 view .LVU20
 107 001e 002D     		cmp	r5, #0
 108 0020 2FD0     		beq	.L6
  26:Core/Src/cnc_core.c ****             if(!(htimX->Instance->CR1 && TIM_CR1_CEN)){
 109              		.loc 1 26 13 is_stmt 1 view .LVU21
 110              		.loc 1 26 23 is_stmt 0 view .LVU22
 111 0022 2368     		ldr	r3, [r4]
 112              		.loc 1 26 33 view .LVU23
 113 0024 1A68     		ldr	r2, [r3]
 114              		.loc 1 26 15 view .LVU24
 115 0026 3AB9     		cbnz	r2, .L7
  27:Core/Src/cnc_core.c ****                 htimX->Instance->ARR = info->pulseLenght.x;
 116              		.loc 1 27 17 is_stmt 1 view .LVU25
 117              		.loc 1 27 57 is_stmt 0 view .LVU26
 118 0028 B6F90820 		ldrsh	r2, [r6, #8]
 119              		.loc 1 27 38 view .LVU27
 120 002c DA62     		str	r2, [r3, #44]
  28:Core/Src/cnc_core.c ****                 htimX->Instance->CCR3 = ((info->pulseLenght.x)>>1);
 121              		.loc 1 28 17 is_stmt 1 view .LVU28
 122              		.loc 1 28 60 is_stmt 0 view .LVU29
 123 002e B6F90830 		ldrsh	r3, [r6, #8]
 124              		.loc 1 28 22 view .LVU30
 125 0032 2268     		ldr	r2, [r4]
 126              		.loc 1 28 63 view .LVU31
 127 0034 5B10     		asrs	r3, r3, #1
 128              		.loc 1 28 39 view .LVU32
 129 0036 D363     		str	r3, [r2, #60]
 130              	.L7:
  29:Core/Src/cnc_core.c ****             }
  30:Core/Src/cnc_core.c ****             htimX->Instance->CR1 &= ~TIM_CR1_OPM;
 131              		.loc 1 30 13 is_stmt 1 view .LVU33
 132              		.loc 1 30 18 is_stmt 0 view .LVU34
 133 0038 2268     		ldr	r2, [r4]
 134              		.loc 1 30 34 view .LVU35
 135 003a 1368     		ldr	r3, [r2]
 136 003c 23F00803 		bic	r3, r3, #8
 137 0040 1360     		str	r3, [r2]
  31:Core/Src/cnc_core.c ****             htimX->Instance->CR1 |= TIM_CR1_CEN;
 138              		.loc 1 31 13 is_stmt 1 view .LVU36
 139              		.loc 1 31 18 is_stmt 0 view .LVU37
 140 0042 2268     		ldr	r2, [r4]
 141              		.loc 1 31 34 view .LVU38
 142 0044 1368     		ldr	r3, [r2]
 143 0046 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccf6dNNL.s 			page 4


 144 004a 1360     		str	r3, [r2]
 145              	.L8:
  32:Core/Src/cnc_core.c ****         }
  33:Core/Src/cnc_core.c ****         else
  34:Core/Src/cnc_core.c ****             htimX->Instance->CR1 |= TIM_CR1_OPM;
  35:Core/Src/cnc_core.c **** 
  36:Core/Src/cnc_core.c ****         if(runY){
 146              		.loc 1 36 9 is_stmt 1 view .LVU39
 147              		.loc 1 36 11 is_stmt 0 view .LVU40
 148 004c FFB1     		cbz	r7, .L9
  37:Core/Src/cnc_core.c ****             if(!(htimY->Instance->CR1 && TIM_CR1_CEN)){
 149              		.loc 1 37 13 is_stmt 1 view .LVU41
 150              		.loc 1 37 23 is_stmt 0 view .LVU42
 151 004e D8F80030 		ldr	r3, [r8]
 152              		.loc 1 37 33 view .LVU43
 153 0052 1A68     		ldr	r2, [r3]
 154              		.loc 1 37 15 view .LVU44
 155 0054 42B9     		cbnz	r2, .L10
  38:Core/Src/cnc_core.c ****                 htimY->Instance->ARR = info->pulseLenght.y;
 156              		.loc 1 38 17 is_stmt 1 view .LVU45
 157              		.loc 1 38 57 is_stmt 0 view .LVU46
 158 0056 B6F90A20 		ldrsh	r2, [r6, #10]
 159              		.loc 1 38 38 view .LVU47
 160 005a DA62     		str	r2, [r3, #44]
  39:Core/Src/cnc_core.c ****                 htimY->Instance->CCR3 = ((info->pulseLenght.y)>>1);
 161              		.loc 1 39 17 is_stmt 1 view .LVU48
 162              		.loc 1 39 60 is_stmt 0 view .LVU49
 163 005c B6F90A30 		ldrsh	r3, [r6, #10]
 164              		.loc 1 39 22 view .LVU50
 165 0060 D8F80020 		ldr	r2, [r8]
 166              		.loc 1 39 63 view .LVU51
 167 0064 5B10     		asrs	r3, r3, #1
 168              		.loc 1 39 39 view .LVU52
 169 0066 D363     		str	r3, [r2, #60]
 170              	.L10:
  40:Core/Src/cnc_core.c ****             }
  41:Core/Src/cnc_core.c ****             htimY->Instance->CR1 &= ~TIM_CR1_OPM; 
 171              		.loc 1 41 13 is_stmt 1 view .LVU53
 172              		.loc 1 41 18 is_stmt 0 view .LVU54
 173 0068 D8F80020 		ldr	r2, [r8]
 174              		.loc 1 41 34 view .LVU55
 175 006c 1368     		ldr	r3, [r2]
 176 006e 23F00803 		bic	r3, r3, #8
 177 0072 1360     		str	r3, [r2]
  42:Core/Src/cnc_core.c ****             htimY->Instance->CR1 |= TIM_CR1_CEN;
 178              		.loc 1 42 13 is_stmt 1 view .LVU56
 179              		.loc 1 42 18 is_stmt 0 view .LVU57
 180 0074 D8F80020 		ldr	r2, [r8]
 181              		.loc 1 42 34 view .LVU58
 182 0078 1368     		ldr	r3, [r2]
 183 007a 43F00103 		orr	r3, r3, #1
 184 007e 1360     		str	r3, [r2]
 185 0080 19E0     		b	.L4
 186              	.L6:
  34:Core/Src/cnc_core.c **** 
 187              		.loc 1 34 13 is_stmt 1 view .LVU59
  34:Core/Src/cnc_core.c **** 
ARM GAS  /tmp/ccf6dNNL.s 			page 5


 188              		.loc 1 34 18 is_stmt 0 view .LVU60
 189 0082 2268     		ldr	r2, [r4]
  34:Core/Src/cnc_core.c **** 
 190              		.loc 1 34 34 view .LVU61
 191 0084 1368     		ldr	r3, [r2]
 192 0086 43F00803 		orr	r3, r3, #8
 193 008a 1360     		str	r3, [r2]
 194 008c DEE7     		b	.L8
 195              	.L9:
  43:Core/Src/cnc_core.c ****         }
  44:Core/Src/cnc_core.c ****         else
  45:Core/Src/cnc_core.c ****             htimY->Instance->CR1 |= TIM_CR1_OPM;          
 196              		.loc 1 45 13 is_stmt 1 view .LVU62
 197              		.loc 1 45 18 is_stmt 0 view .LVU63
 198 008e D8F80020 		ldr	r2, [r8]
 199              		.loc 1 45 34 view .LVU64
 200 0092 1368     		ldr	r3, [r2]
 201 0094 43F00803 		orr	r3, r3, #8
 202 0098 1360     		str	r3, [r2]
 203 009a 0CE0     		b	.L4
 204              	.L5:
  46:Core/Src/cnc_core.c ****     }
  47:Core/Src/cnc_core.c ****     else
  48:Core/Src/cnc_core.c ****     {
  49:Core/Src/cnc_core.c ****         info->state = HMI_State_Stop;
 205              		.loc 1 49 9 is_stmt 1 view .LVU65
 206              		.loc 1 49 21 is_stmt 0 view .LVU66
 207 009c 0023     		movs	r3, #0
 208 009e 7370     		strb	r3, [r6, #1]
  50:Core/Src/cnc_core.c ****         htimX->Instance->CR1 |= TIM_CR1_OPM;
 209              		.loc 1 50 9 is_stmt 1 view .LVU67
 210              		.loc 1 50 14 is_stmt 0 view .LVU68
 211 00a0 2268     		ldr	r2, [r4]
 212              		.loc 1 50 30 view .LVU69
 213 00a2 1368     		ldr	r3, [r2]
 214 00a4 43F00803 		orr	r3, r3, #8
 215 00a8 1360     		str	r3, [r2]
  51:Core/Src/cnc_core.c ****         htimY->Instance->CR1 |= TIM_CR1_OPM;
 216              		.loc 1 51 9 is_stmt 1 view .LVU70
 217              		.loc 1 51 14 is_stmt 0 view .LVU71
 218 00aa D8F80020 		ldr	r2, [r8]
 219              		.loc 1 51 30 view .LVU72
 220 00ae 1368     		ldr	r3, [r2]
 221 00b0 43F00803 		orr	r3, r3, #8
 222 00b4 1360     		str	r3, [r2]
 223              	.L4:
  52:Core/Src/cnc_core.c ****     }     
  53:Core/Src/cnc_core.c **** }
 224              		.loc 1 53 1 view .LVU73
 225 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 226              		.loc 1 53 1 view .LVU74
 227              		.cfi_endproc
 228              	.LFE289:
 230              		.section	.text.CNC_Absolute,"ax",%progbits
 231              		.align	1
 232              		.global	CNC_Absolute
 233              		.syntax unified
ARM GAS  /tmp/ccf6dNNL.s 			page 6


 234              		.thumb
 235              		.thumb_func
 237              	CNC_Absolute:
 238              	.LVL9:
 239              	.LFB290:
  54:Core/Src/cnc_core.c **** 
  55:Core/Src/cnc_core.c **** void CNC_Absolute(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 240              		.loc 1 55 88 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 16
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 55 88 is_stmt 0 view .LVU76
 245 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 246              		.cfi_def_cfa_offset 36
 247              		.cfi_offset 4, -36
 248              		.cfi_offset 5, -32
 249              		.cfi_offset 6, -28
 250              		.cfi_offset 7, -24
 251              		.cfi_offset 8, -20
 252              		.cfi_offset 9, -16
 253              		.cfi_offset 10, -12
 254              		.cfi_offset 11, -8
 255              		.cfi_offset 14, -4
 256 0004 87B0     		sub	sp, sp, #28
 257              		.cfi_def_cfa_offset 64
 258 0006 0446     		mov	r4, r0
 259 0008 8846     		mov	r8, r1
 260 000a 9146     		mov	r9, r2
  56:Core/Src/cnc_core.c **** 
  57:Core/Src/cnc_core.c ****     info->dir.x = (info->pos.x < info->commanded.pos.x);
 261              		.loc 1 57 5 is_stmt 1 view .LVU77
 262              		.loc 1 57 29 is_stmt 0 view .LVU78
 263 000c 8088     		ldrh	r0, [r0, #4]
 264              	.LVL10:
 265              		.loc 1 57 53 view .LVU79
 266 000e 638A     		ldrh	r3, [r4, #18]
 267              		.loc 1 57 32 view .LVU80
 268 0010 9842     		cmp	r0, r3
 269 0012 2CBF     		ite	cs
 270 0014 0022     		movcs	r2, #0
 271              	.LVL11:
 272              		.loc 1 57 32 view .LVU81
 273 0016 0122     		movcc	r2, #1
 274              		.loc 1 57 17 view .LVU82
 275 0018 2274     		strb	r2, [r4, #16]
  58:Core/Src/cnc_core.c ****     info->dir.y = (info->pos.y < info->commanded.pos.y);
 276              		.loc 1 58 5 is_stmt 1 view .LVU83
 277              		.loc 1 58 29 is_stmt 0 view .LVU84
 278 001a E388     		ldrh	r3, [r4, #6]
 279              		.loc 1 58 53 view .LVU85
 280 001c A18A     		ldrh	r1, [r4, #20]
 281              	.LVL12:
 282              		.loc 1 58 32 view .LVU86
 283 001e 8B42     		cmp	r3, r1
 284 0020 2CBF     		ite	cs
 285 0022 0023     		movcs	r3, #0
 286 0024 0123     		movcc	r3, #1
ARM GAS  /tmp/ccf6dNNL.s 			page 7


 287              		.loc 1 58 17 view .LVU87
 288 0026 6374     		strb	r3, [r4, #17]
  59:Core/Src/cnc_core.c **** 
  60:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirX_Port, dirX_Pin, info->dir.x);
 289              		.loc 1 60 5 is_stmt 1 view .LVU88
 290 0028 344D     		ldr	r5, .L22
 291 002a 4FF48071 		mov	r1, #256
 292 002e 2846     		mov	r0, r5
 293 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 294              	.LVL13:
  61:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirY_Port, dirY_Pin, info->dir.y);
 295              		.loc 1 61 5 view .LVU89
 296 0034 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 297 0036 4FF40071 		mov	r1, #512
 298 003a 2846     		mov	r0, r5
 299 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 300              	.LVL14:
  62:Core/Src/cnc_core.c **** 
  63:Core/Src/cnc_core.c ****     uint16_t dX = info->dir.x ? (info->commanded.pos.x - info->pos.x) : (info->pos.x - info->comman
 301              		.loc 1 63 5 view .LVU90
 302              		.loc 1 63 28 is_stmt 0 view .LVU91
 303 0040 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 304              		.loc 1 63 14 view .LVU92
 305 0042 002B     		cmp	r3, #0
 306 0044 45D0     		beq	.L14
 307              		.loc 1 63 53 discriminator 1 view .LVU93
 308 0046 658A     		ldrh	r5, [r4, #18]
 309              		.loc 1 63 67 discriminator 1 view .LVU94
 310 0048 A388     		ldrh	r3, [r4, #4]
 311              		.loc 1 63 14 discriminator 1 view .LVU95
 312 004a ED1A     		subs	r5, r5, r3
 313 004c ADB2     		uxth	r5, r5
 314              	.L15:
 315              	.LVL15:
  64:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 316              		.loc 1 64 5 is_stmt 1 discriminator 4 view .LVU96
 317              		.loc 1 64 28 is_stmt 0 discriminator 4 view .LVU97
 318 004e 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 319              		.loc 1 64 14 discriminator 4 view .LVU98
 320 0050 002B     		cmp	r3, #0
 321 0052 43D0     		beq	.L16
 322              		.loc 1 64 53 discriminator 1 view .LVU99
 323 0054 A68A     		ldrh	r6, [r4, #20]
 324              		.loc 1 64 67 discriminator 1 view .LVU100
 325 0056 E388     		ldrh	r3, [r4, #6]
 326              		.loc 1 64 14 discriminator 1 view .LVU101
 327 0058 F61A     		subs	r6, r6, r3
 328 005a B6B2     		uxth	r6, r6
 329              	.L17:
 330              	.LVL16:
  65:Core/Src/cnc_core.c **** 
  66:Core/Src/cnc_core.c ****     bool runX = dX > 0;
 331              		.loc 1 66 5 is_stmt 1 discriminator 4 view .LVU102
 332              		.loc 1 66 10 is_stmt 0 discriminator 4 view .LVU103
 333 005c B5F1000A 		subs	r10, r5, #0
 334 0060 18BF     		it	ne
 335 0062 4FF0010A 		movne	r10, #1
ARM GAS  /tmp/ccf6dNNL.s 			page 8


 336              	.LVL17:
  67:Core/Src/cnc_core.c ****     bool runY = dY > 0;
 337              		.loc 1 67 5 is_stmt 1 discriminator 4 view .LVU104
 338              		.loc 1 67 10 is_stmt 0 discriminator 4 view .LVU105
 339 0066 B6F1000B 		subs	fp, r6, #0
 340 006a 18BF     		it	ne
 341 006c 4FF0010B 		movne	fp, #1
 342              	.LVL18:
  68:Core/Src/cnc_core.c **** 
  69:Core/Src/cnc_core.c ****     //sistema questa parte dai...
  70:Core/Src/cnc_core.c ****     int32_t den;
 343              		.loc 1 70 5 is_stmt 1 discriminator 4 view .LVU106
  71:Core/Src/cnc_core.c ****     if(((dX > dY) ? dX : dY) >= (1<<8))
 344              		.loc 1 71 5 discriminator 4 view .LVU107
 345              		.loc 1 71 24 is_stmt 0 discriminator 4 view .LVU108
 346 0070 2B46     		mov	r3, r5
 347 0072 B542     		cmp	r5, r6
 348 0074 38BF     		it	cc
 349 0076 3346     		movcc	r3, r6
 350              		.loc 1 71 7 discriminator 4 view .LVU109
 351 0078 FF2B     		cmp	r3, #255
 352 007a 34D9     		bls	.L18
  72:Core/Src/cnc_core.c ****         den = (int32_t) ihyp(dX, dY) * freqX_1mm_min;
 353              		.loc 1 72 9 is_stmt 1 view .LVU110
 354              		.loc 1 72 25 is_stmt 0 view .LVU111
 355 007c 3146     		mov	r1, r6
 356 007e 2846     		mov	r0, r5
 357 0080 FFF7FEFF 		bl	ihyp
 358              	.LVL19:
 359              		.loc 1 72 13 view .LVU112
 360 0084 4FF6C163 		movw	r3, #65217
 361 0088 03FB00F7 		mul	r7, r3, r0
 362              	.LVL20:
 363              	.L19:
  73:Core/Src/cnc_core.c ****     else
  74:Core/Src/cnc_core.c ****         den = (int32_t) ihyp(dX<<7, dY<<7) * (freqX_1mm_min>>7);
  75:Core/Src/cnc_core.c **** 
  76:Core/Src/cnc_core.c ****     info->pulseLenght.x = (uint16_t) div(den, (int32_t) info->feed * (int32_t) dX).quot;
 364              		.loc 1 76 5 is_stmt 1 view .LVU113
 365              		.loc 1 76 61 is_stmt 0 view .LVU114
 366 008c E28A     		ldrh	r2, [r4, #22]
 367              		.loc 1 76 38 view .LVU115
 368 008e 05FB02F2 		mul	r2, r5, r2
 369 0092 3946     		mov	r1, r7
 370 0094 02A8     		add	r0, sp, #8
 371 0096 FFF7FEFF 		bl	div
 372              	.LVL21:
 373              		.loc 1 76 27 view .LVU116
 374 009a BDF90830 		ldrsh	r3, [sp, #8]
 375              		.loc 1 76 25 view .LVU117
 376 009e 2381     		strh	r3, [r4, #8]	@ movhi
  77:Core/Src/cnc_core.c ****     info->pulseLenght.y = (uint16_t) div(den, (int32_t) info->feed * (int32_t) dY).quot;
 377              		.loc 1 77 5 is_stmt 1 view .LVU118
 378              		.loc 1 77 61 is_stmt 0 view .LVU119
 379 00a0 E28A     		ldrh	r2, [r4, #22]
 380              		.loc 1 77 38 view .LVU120
 381 00a2 06FB02F2 		mul	r2, r6, r2
ARM GAS  /tmp/ccf6dNNL.s 			page 9


 382 00a6 3946     		mov	r1, r7
 383 00a8 04A8     		add	r0, sp, #16
 384 00aa FFF7FEFF 		bl	div
 385              	.LVL22:
 386              		.loc 1 77 27 view .LVU121
 387 00ae BDF91030 		ldrsh	r3, [sp, #16]
 388              		.loc 1 77 25 view .LVU122
 389 00b2 6381     		strh	r3, [r4, #10]	@ movhi
  78:Core/Src/cnc_core.c **** 
  79:Core/Src/cnc_core.c ****     CNC_Stepper(info, runX, runY, htimX, htimY);    
 390              		.loc 1 79 5 is_stmt 1 view .LVU123
 391 00b4 CDF80090 		str	r9, [sp]
 392 00b8 4346     		mov	r3, r8
 393 00ba 5A46     		mov	r2, fp
 394 00bc 5146     		mov	r1, r10
 395 00be 2046     		mov	r0, r4
 396 00c0 FFF7FEFF 		bl	CNC_Stepper
 397              	.LVL23:
  80:Core/Src/cnc_core.c **** 
  81:Core/Src/cnc_core.c ****     if(!runX && !runY)
 398              		.loc 1 81 5 view .LVU124
 399              		.loc 1 81 7 is_stmt 0 view .LVU125
 400 00c4 15B9     		cbnz	r5, .L13
 401              		.loc 1 81 14 discriminator 1 view .LVU126
 402 00c6 0EB9     		cbnz	r6, .L13
  82:Core/Src/cnc_core.c ****         info->move = HMI_Move_Done; 
 403              		.loc 1 82 9 is_stmt 1 view .LVU127
 404              		.loc 1 82 20 is_stmt 0 view .LVU128
 405 00c8 0323     		movs	r3, #3
 406 00ca A370     		strb	r3, [r4, #2]
 407              	.L13:
  83:Core/Src/cnc_core.c **** }
 408              		.loc 1 83 1 view .LVU129
 409 00cc 07B0     		add	sp, sp, #28
 410              		.cfi_remember_state
 411              		.cfi_def_cfa_offset 36
 412              		@ sp needed
 413 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 414              	.LVL24:
 415              	.L14:
 416              		.cfi_restore_state
  63:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 417              		.loc 1 63 83 discriminator 2 view .LVU130
 418 00d2 A588     		ldrh	r5, [r4, #4]
  63:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 419              		.loc 1 63 107 discriminator 2 view .LVU131
 420 00d4 638A     		ldrh	r3, [r4, #18]
  63:Core/Src/cnc_core.c ****     uint16_t dY = info->dir.y ? (info->commanded.pos.y - info->pos.y) : (info->pos.y - info->comman
 421              		.loc 1 63 14 discriminator 2 view .LVU132
 422 00d6 ED1A     		subs	r5, r5, r3
 423 00d8 ADB2     		uxth	r5, r5
 424 00da B8E7     		b	.L15
 425              	.LVL25:
 426              	.L16:
  64:Core/Src/cnc_core.c **** 
 427              		.loc 1 64 83 discriminator 2 view .LVU133
 428 00dc E688     		ldrh	r6, [r4, #6]
ARM GAS  /tmp/ccf6dNNL.s 			page 10


  64:Core/Src/cnc_core.c **** 
 429              		.loc 1 64 107 discriminator 2 view .LVU134
 430 00de A38A     		ldrh	r3, [r4, #20]
  64:Core/Src/cnc_core.c **** 
 431              		.loc 1 64 14 discriminator 2 view .LVU135
 432 00e0 F61A     		subs	r6, r6, r3
 433 00e2 B6B2     		uxth	r6, r6
 434 00e4 BAE7     		b	.L17
 435              	.LVL26:
 436              	.L18:
  74:Core/Src/cnc_core.c **** 
 437              		.loc 1 74 9 is_stmt 1 view .LVU136
  74:Core/Src/cnc_core.c **** 
 438              		.loc 1 74 25 is_stmt 0 view .LVU137
 439 00e6 F101     		lsls	r1, r6, #7
 440 00e8 89B2     		uxth	r1, r1
 441 00ea E801     		lsls	r0, r5, #7
 442 00ec 80B2     		uxth	r0, r0
 443 00ee FFF7FEFF 		bl	ihyp
 444              	.LVL27:
  74:Core/Src/cnc_core.c **** 
 445              		.loc 1 74 13 view .LVU138
 446 00f2 C0EBC013 		rsb	r3, r0, r0, lsl #7
 447 00f6 00EB8307 		add	r7, r0, r3, lsl #2
 448              	.LVL28:
  74:Core/Src/cnc_core.c **** 
 449              		.loc 1 74 13 view .LVU139
 450 00fa C7E7     		b	.L19
 451              	.L23:
 452              		.align	2
 453              	.L22:
 454 00fc 000C0048 		.word	1207962624
 455              		.cfi_endproc
 456              	.LFE290:
 458              		.section	.text.CNC_Jog,"ax",%progbits
 459              		.align	1
 460              		.global	CNC_Jog
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 465              	CNC_Jog:
 466              	.LVL29:
 467              	.LFB291:
  84:Core/Src/cnc_core.c **** 
  85:Core/Src/cnc_core.c **** void CNC_Jog(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 468              		.loc 1 85 83 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 16
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		.loc 1 85 83 is_stmt 0 view .LVU141
 473 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 474              		.cfi_def_cfa_offset 20
 475              		.cfi_offset 4, -20
 476              		.cfi_offset 5, -16
 477              		.cfi_offset 6, -12
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
ARM GAS  /tmp/ccf6dNNL.s 			page 11


 480 0002 87B0     		sub	sp, sp, #28
 481              		.cfi_def_cfa_offset 48
 482 0004 0446     		mov	r4, r0
 483 0006 0D46     		mov	r5, r1
 484 0008 1646     		mov	r6, r2
  86:Core/Src/cnc_core.c **** 
  87:Core/Src/cnc_core.c ****     info->dir.x = (info->commanded.speed.x > 0);
 485              		.loc 1 87 5 is_stmt 1 view .LVU142
 486              		.loc 1 87 41 is_stmt 0 view .LVU143
 487 000a B0F91200 		ldrsh	r0, [r0, #18]
 488              	.LVL30:
 489              		.loc 1 87 44 view .LVU144
 490 000e 0028     		cmp	r0, #0
 491 0010 D4BF     		ite	le
 492 0012 0022     		movle	r2, #0
 493              	.LVL31:
 494              		.loc 1 87 44 view .LVU145
 495 0014 0122     		movgt	r2, #1
 496              		.loc 1 87 17 view .LVU146
 497 0016 2274     		strb	r2, [r4, #16]
  88:Core/Src/cnc_core.c ****     info->dir.y = (info->commanded.speed.y > 0);
 498              		.loc 1 88 5 is_stmt 1 view .LVU147
 499              		.loc 1 88 41 is_stmt 0 view .LVU148
 500 0018 B4F91430 		ldrsh	r3, [r4, #20]
 501              		.loc 1 88 44 view .LVU149
 502 001c 002B     		cmp	r3, #0
 503 001e D4BF     		ite	le
 504 0020 0023     		movle	r3, #0
 505 0022 0123     		movgt	r3, #1
 506              		.loc 1 88 17 view .LVU150
 507 0024 6374     		strb	r3, [r4, #17]
  89:Core/Src/cnc_core.c **** 
  90:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirX_Port, dirX_Pin, info->dir.x);
 508              		.loc 1 90 5 is_stmt 1 view .LVU151
 509 0026 1C4F     		ldr	r7, .L26
 510 0028 4FF48071 		mov	r1, #256
 511              	.LVL32:
 512              		.loc 1 90 5 is_stmt 0 view .LVU152
 513 002c 3846     		mov	r0, r7
 514 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 515              	.LVL33:
  91:Core/Src/cnc_core.c ****     HAL_GPIO_WritePin(dirY_Port, dirY_Pin, info->dir.y);
 516              		.loc 1 91 5 is_stmt 1 view .LVU153
 517 0032 627C     		ldrb	r2, [r4, #17]	@ zero_extendqisi2
 518 0034 4FF40071 		mov	r1, #512
 519 0038 3846     		mov	r0, r7
 520 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 521              	.LVL34:
  92:Core/Src/cnc_core.c **** 
  93:Core/Src/cnc_core.c ****     info->pulseLenght.x = (uint16_t) div(freqX_1mm_min, abs(info->commanded.speed.x)).quot;
 522              		.loc 1 93 5 view .LVU154
 523              		.loc 1 93 82 is_stmt 0 view .LVU155
 524 003e B4F91220 		ldrsh	r2, [r4, #18]
 525              		.loc 1 93 57 view .LVU156
 526 0042 002A     		cmp	r2, #0
 527 0044 B8BF     		it	lt
 528 0046 5242     		rsblt	r2, r2, #0
ARM GAS  /tmp/ccf6dNNL.s 			page 12


 529              		.loc 1 93 38 view .LVU157
 530 0048 92B2     		uxth	r2, r2
 531 004a 4FF6C161 		movw	r1, #65217
 532 004e 02A8     		add	r0, sp, #8
 533 0050 FFF7FEFF 		bl	div
 534              	.LVL35:
 535              		.loc 1 93 27 view .LVU158
 536 0054 BDF90830 		ldrsh	r3, [sp, #8]
 537              		.loc 1 93 25 view .LVU159
 538 0058 2381     		strh	r3, [r4, #8]	@ movhi
  94:Core/Src/cnc_core.c ****     info->pulseLenght.y = (uint16_t) div(freqY_1mm_min, abs(info->commanded.speed.y)).quot;
 539              		.loc 1 94 5 is_stmt 1 view .LVU160
 540              		.loc 1 94 82 is_stmt 0 view .LVU161
 541 005a B4F91420 		ldrsh	r2, [r4, #20]
 542              		.loc 1 94 57 view .LVU162
 543 005e 002A     		cmp	r2, #0
 544 0060 B8BF     		it	lt
 545 0062 5242     		rsblt	r2, r2, #0
 546              		.loc 1 94 38 view .LVU163
 547 0064 92B2     		uxth	r2, r2
 548 0066 4FF6C161 		movw	r1, #65217
 549 006a 04A8     		add	r0, sp, #16
 550 006c FFF7FEFF 		bl	div
 551              	.LVL36:
 552              		.loc 1 94 27 view .LVU164
 553 0070 BDF91030 		ldrsh	r3, [sp, #16]
 554              		.loc 1 94 25 view .LVU165
 555 0074 6381     		strh	r3, [r4, #10]	@ movhi
  95:Core/Src/cnc_core.c **** 
  96:Core/Src/cnc_core.c ****     CNC_Stepper(info, info->commanded.speed.x != 0, info->commanded.speed.y != 0, htimX, htimY); 
 556              		.loc 1 96 5 is_stmt 1 view .LVU166
 557              		.loc 1 96 44 is_stmt 0 view .LVU167
 558 0076 B4F91210 		ldrsh	r1, [r4, #18]
 559              		.loc 1 96 74 view .LVU168
 560 007a B4F91420 		ldrsh	r2, [r4, #20]
 561              		.loc 1 96 5 view .LVU169
 562 007e 0096     		str	r6, [sp]
 563 0080 2B46     		mov	r3, r5
 564 0082 003A     		subs	r2, r2, #0
 565 0084 18BF     		it	ne
 566 0086 0122     		movne	r2, #1
 567 0088 0039     		subs	r1, r1, #0
 568 008a 18BF     		it	ne
 569 008c 0121     		movne	r1, #1
 570 008e 2046     		mov	r0, r4
 571 0090 FFF7FEFF 		bl	CNC_Stepper
 572              	.LVL37:
  97:Core/Src/cnc_core.c **** }
 573              		.loc 1 97 1 view .LVU170
 574 0094 07B0     		add	sp, sp, #28
 575              		.cfi_def_cfa_offset 20
 576              		@ sp needed
 577 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 578              	.LVL38:
 579              	.L27:
 580              		.loc 1 97 1 view .LVU171
 581              		.align	2
ARM GAS  /tmp/ccf6dNNL.s 			page 13


 582              	.L26:
 583 0098 000C0048 		.word	1207962624
 584              		.cfi_endproc
 585              	.LFE291:
 587              		.section	.text.CNC_TIM_Callback_X,"ax",%progbits
 588              		.align	1
 589              		.global	CNC_TIM_Callback_X
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	CNC_TIM_Callback_X:
 595              	.LVL39:
 596              	.LFB292:
  98:Core/Src/cnc_core.c **** 
  99:Core/Src/cnc_core.c **** void CNC_TIM_Callback_X(HMI_info_t* info, TIM_HandleTypeDef *htimX){
 597              		.loc 1 99 68 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 100:Core/Src/cnc_core.c ****     htimX->Instance->ARR = info->pulseLenght.x;
 602              		.loc 1 100 5 view .LVU173
 603              		.loc 1 100 10 is_stmt 0 view .LVU174
 604 0000 0B68     		ldr	r3, [r1]
 605              		.loc 1 100 45 view .LVU175
 606 0002 B0F90820 		ldrsh	r2, [r0, #8]
 607              		.loc 1 100 26 view .LVU176
 608 0006 DA62     		str	r2, [r3, #44]
 101:Core/Src/cnc_core.c ****     htimX->Instance->CCR3 = ((info->pulseLenght.x)>>1);
 609              		.loc 1 101 5 is_stmt 1 view .LVU177
 610              		.loc 1 101 48 is_stmt 0 view .LVU178
 611 0008 B0F90830 		ldrsh	r3, [r0, #8]
 612              		.loc 1 101 10 view .LVU179
 613 000c 0A68     		ldr	r2, [r1]
 614              		.loc 1 101 51 view .LVU180
 615 000e 5B10     		asrs	r3, r3, #1
 616              		.loc 1 101 27 view .LVU181
 617 0010 D363     		str	r3, [r2, #60]
 102:Core/Src/cnc_core.c **** 
 103:Core/Src/cnc_core.c ****     if(info->dir.x){
 618              		.loc 1 103 5 is_stmt 1 view .LVU182
 619              		.loc 1 103 17 is_stmt 0 view .LVU183
 620 0012 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 621              		.loc 1 103 7 view .LVU184
 622 0014 8BB1     		cbz	r3, .L29
 104:Core/Src/cnc_core.c ****         if(info->pulsesCnt.x == stepX_01mm-1){
 623              		.loc 1 104 9 is_stmt 1 view .LVU185
 624              		.loc 1 104 27 is_stmt 0 view .LVU186
 625 0016 8389     		ldrh	r3, [r0, #12]
 626              		.loc 1 104 11 view .LVU187
 627 0018 032B     		cmp	r3, #3
 628 001a 02D0     		beq	.L35
 105:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
 106:Core/Src/cnc_core.c ****             if(info->pos.x < max_limX)
 107:Core/Src/cnc_core.c ****                 info->pos.x++;
 108:Core/Src/cnc_core.c ****             info->update = true;
 109:Core/Src/cnc_core.c ****         }
ARM GAS  /tmp/ccf6dNNL.s 			page 14


 110:Core/Src/cnc_core.c ****         else
 111:Core/Src/cnc_core.c ****             info->pulsesCnt.x++;
 629              		.loc 1 111 13 is_stmt 1 view .LVU188
 630              		.loc 1 111 30 is_stmt 0 view .LVU189
 631 001c 0133     		adds	r3, r3, #1
 632 001e 8381     		strh	r3, [r0, #12]	@ movhi
 633 0020 7047     		bx	lr
 634              	.L35:
 105:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
 635              		.loc 1 105 13 is_stmt 1 view .LVU190
 105:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 0;
 636              		.loc 1 105 31 is_stmt 0 view .LVU191
 637 0022 0023     		movs	r3, #0
 638 0024 8381     		strh	r3, [r0, #12]	@ movhi
 106:Core/Src/cnc_core.c ****                 info->pos.x++;
 639              		.loc 1 106 13 is_stmt 1 view .LVU192
 106:Core/Src/cnc_core.c ****                 info->pos.x++;
 640              		.loc 1 106 25 is_stmt 0 view .LVU193
 641 0026 8388     		ldrh	r3, [r0, #4]
 106:Core/Src/cnc_core.c ****                 info->pos.x++;
 642              		.loc 1 106 15 view .LVU194
 643 0028 4CF61F32 		movw	r2, #51999
 644 002c 9342     		cmp	r3, r2
 645 002e 01D8     		bhi	.L31
 107:Core/Src/cnc_core.c ****             info->update = true;
 646              		.loc 1 107 17 is_stmt 1 view .LVU195
 107:Core/Src/cnc_core.c ****             info->update = true;
 647              		.loc 1 107 28 is_stmt 0 view .LVU196
 648 0030 0133     		adds	r3, r3, #1
 649 0032 8380     		strh	r3, [r0, #4]	@ movhi
 650              	.L31:
 108:Core/Src/cnc_core.c ****         }
 651              		.loc 1 108 13 is_stmt 1 view .LVU197
 108:Core/Src/cnc_core.c ****         }
 652              		.loc 1 108 26 is_stmt 0 view .LVU198
 653 0034 0123     		movs	r3, #1
 654 0036 8376     		strb	r3, [r0, #26]
 655 0038 7047     		bx	lr
 656              	.L29:
 112:Core/Src/cnc_core.c ****     }
 113:Core/Src/cnc_core.c ****     else{
 114:Core/Src/cnc_core.c ****         if(info->pulsesCnt.x == 0){
 657              		.loc 1 114 9 is_stmt 1 view .LVU199
 658              		.loc 1 114 27 is_stmt 0 view .LVU200
 659 003a 8389     		ldrh	r3, [r0, #12]
 660              		.loc 1 114 11 view .LVU201
 661 003c 43B9     		cbnz	r3, .L33
 115:Core/Src/cnc_core.c ****             info->pulsesCnt.x = 3;
 662              		.loc 1 115 13 is_stmt 1 view .LVU202
 663              		.loc 1 115 31 is_stmt 0 view .LVU203
 664 003e 0323     		movs	r3, #3
 665 0040 8381     		strh	r3, [r0, #12]	@ movhi
 116:Core/Src/cnc_core.c ****             if(info->pos.x > 0)
 666              		.loc 1 116 13 is_stmt 1 view .LVU204
 667              		.loc 1 116 25 is_stmt 0 view .LVU205
 668 0042 8388     		ldrh	r3, [r0, #4]
 669              		.loc 1 116 15 view .LVU206
ARM GAS  /tmp/ccf6dNNL.s 			page 15


 670 0044 0BB1     		cbz	r3, .L34
 117:Core/Src/cnc_core.c ****                 info->pos.x--;
 671              		.loc 1 117 17 is_stmt 1 view .LVU207
 672              		.loc 1 117 28 is_stmt 0 view .LVU208
 673 0046 013B     		subs	r3, r3, #1
 674 0048 8380     		strh	r3, [r0, #4]	@ movhi
 675              	.L34:
 118:Core/Src/cnc_core.c ****             info->update = true;
 676              		.loc 1 118 13 is_stmt 1 view .LVU209
 677              		.loc 1 118 26 is_stmt 0 view .LVU210
 678 004a 0123     		movs	r3, #1
 679 004c 8376     		strb	r3, [r0, #26]
 680 004e 7047     		bx	lr
 681              	.L33:
 119:Core/Src/cnc_core.c ****         }
 120:Core/Src/cnc_core.c ****         else
 121:Core/Src/cnc_core.c ****             info->pulsesCnt.x--;
 682              		.loc 1 121 13 is_stmt 1 view .LVU211
 683              		.loc 1 121 30 is_stmt 0 view .LVU212
 684 0050 013B     		subs	r3, r3, #1
 685 0052 8381     		strh	r3, [r0, #12]	@ movhi
 122:Core/Src/cnc_core.c ****     }
 123:Core/Src/cnc_core.c **** }
 686              		.loc 1 123 1 view .LVU213
 687 0054 7047     		bx	lr
 688              		.cfi_endproc
 689              	.LFE292:
 691              		.section	.text.CNC_TIM_Callback_Y,"ax",%progbits
 692              		.align	1
 693              		.global	CNC_TIM_Callback_Y
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 698              	CNC_TIM_Callback_Y:
 699              	.LVL40:
 700              	.LFB293:
 124:Core/Src/cnc_core.c **** 
 125:Core/Src/cnc_core.c **** void CNC_TIM_Callback_Y(HMI_info_t* info, TIM_HandleTypeDef *htimY){
 701              		.loc 1 125 68 is_stmt 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 126:Core/Src/cnc_core.c ****     htimY->Instance->ARR = info->pulseLenght.y;
 706              		.loc 1 126 5 view .LVU215
 707              		.loc 1 126 10 is_stmt 0 view .LVU216
 708 0000 0B68     		ldr	r3, [r1]
 709              		.loc 1 126 45 view .LVU217
 710 0002 B0F90A20 		ldrsh	r2, [r0, #10]
 711              		.loc 1 126 26 view .LVU218
 712 0006 DA62     		str	r2, [r3, #44]
 127:Core/Src/cnc_core.c ****     htimY->Instance->CCR1 = ((info->pulseLenght.y)>>1);
 713              		.loc 1 127 5 is_stmt 1 view .LVU219
 714              		.loc 1 127 48 is_stmt 0 view .LVU220
 715 0008 B0F90A30 		ldrsh	r3, [r0, #10]
 716              		.loc 1 127 10 view .LVU221
 717 000c 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccf6dNNL.s 			page 16


 718              		.loc 1 127 51 view .LVU222
 719 000e 5B10     		asrs	r3, r3, #1
 720              		.loc 1 127 27 view .LVU223
 721 0010 5363     		str	r3, [r2, #52]
 128:Core/Src/cnc_core.c **** 
 129:Core/Src/cnc_core.c ****     if(info->dir.y){
 722              		.loc 1 129 5 is_stmt 1 view .LVU224
 723              		.loc 1 129 17 is_stmt 0 view .LVU225
 724 0012 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 725              		.loc 1 129 7 view .LVU226
 726 0014 6BB1     		cbz	r3, .L37
 130:Core/Src/cnc_core.c ****         if(info->pulsesCnt.y == stepY_01mm-1){
 727              		.loc 1 130 9 is_stmt 1 view .LVU227
 728              		.loc 1 130 27 is_stmt 0 view .LVU228
 729 0016 C389     		ldrh	r3, [r0, #14]
 730              		.loc 1 130 11 view .LVU229
 731 0018 032B     		cmp	r3, #3
 732 001a 02D0     		beq	.L42
 131:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 132:Core/Src/cnc_core.c ****             if(info->pos.y < max_limY)
 133:Core/Src/cnc_core.c ****                 info->pos.y++;
 134:Core/Src/cnc_core.c ****             info->update = true;
 135:Core/Src/cnc_core.c ****         }
 136:Core/Src/cnc_core.c ****         else
 137:Core/Src/cnc_core.c ****             info->pulsesCnt.y++;
 733              		.loc 1 137 13 is_stmt 1 view .LVU230
 734              		.loc 1 137 30 is_stmt 0 view .LVU231
 735 001c 0133     		adds	r3, r3, #1
 736 001e C381     		strh	r3, [r0, #14]	@ movhi
 737 0020 7047     		bx	lr
 738              	.L42:
 131:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 739              		.loc 1 131 13 is_stmt 1 view .LVU232
 131:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 0;
 740              		.loc 1 131 31 is_stmt 0 view .LVU233
 741 0022 0023     		movs	r3, #0
 742 0024 C381     		strh	r3, [r0, #14]	@ movhi
 132:Core/Src/cnc_core.c ****                 info->pos.y++;
 743              		.loc 1 132 13 is_stmt 1 view .LVU234
 133:Core/Src/cnc_core.c ****             info->update = true;
 744              		.loc 1 133 17 view .LVU235
 133:Core/Src/cnc_core.c ****             info->update = true;
 745              		.loc 1 133 26 is_stmt 0 view .LVU236
 746 0026 C388     		ldrh	r3, [r0, #6]
 133:Core/Src/cnc_core.c ****             info->update = true;
 747              		.loc 1 133 28 view .LVU237
 748 0028 0133     		adds	r3, r3, #1
 749 002a C380     		strh	r3, [r0, #6]	@ movhi
 134:Core/Src/cnc_core.c ****         }
 750              		.loc 1 134 13 is_stmt 1 view .LVU238
 134:Core/Src/cnc_core.c ****         }
 751              		.loc 1 134 26 is_stmt 0 view .LVU239
 752 002c 0123     		movs	r3, #1
 753 002e 8376     		strb	r3, [r0, #26]
 754 0030 7047     		bx	lr
 755              	.L37:
 138:Core/Src/cnc_core.c ****     }
ARM GAS  /tmp/ccf6dNNL.s 			page 17


 139:Core/Src/cnc_core.c ****     else{
 140:Core/Src/cnc_core.c ****         if(info->pulsesCnt.y == 0){
 756              		.loc 1 140 9 is_stmt 1 view .LVU240
 757              		.loc 1 140 27 is_stmt 0 view .LVU241
 758 0032 C389     		ldrh	r3, [r0, #14]
 759              		.loc 1 140 11 view .LVU242
 760 0034 43B9     		cbnz	r3, .L40
 141:Core/Src/cnc_core.c ****             info->pulsesCnt.y = 3;
 761              		.loc 1 141 13 is_stmt 1 view .LVU243
 762              		.loc 1 141 31 is_stmt 0 view .LVU244
 763 0036 0323     		movs	r3, #3
 764 0038 C381     		strh	r3, [r0, #14]	@ movhi
 142:Core/Src/cnc_core.c ****             if(info->pos.y > 0)
 765              		.loc 1 142 13 is_stmt 1 view .LVU245
 766              		.loc 1 142 25 is_stmt 0 view .LVU246
 767 003a C388     		ldrh	r3, [r0, #6]
 768              		.loc 1 142 15 view .LVU247
 769 003c 0BB1     		cbz	r3, .L41
 143:Core/Src/cnc_core.c ****                 info->pos.y--;
 770              		.loc 1 143 17 is_stmt 1 view .LVU248
 771              		.loc 1 143 28 is_stmt 0 view .LVU249
 772 003e 013B     		subs	r3, r3, #1
 773 0040 C380     		strh	r3, [r0, #6]	@ movhi
 774              	.L41:
 144:Core/Src/cnc_core.c ****             info->update = true;
 775              		.loc 1 144 13 is_stmt 1 view .LVU250
 776              		.loc 1 144 26 is_stmt 0 view .LVU251
 777 0042 0123     		movs	r3, #1
 778 0044 8376     		strb	r3, [r0, #26]
 779 0046 7047     		bx	lr
 780              	.L40:
 145:Core/Src/cnc_core.c ****         }
 146:Core/Src/cnc_core.c ****         else
 147:Core/Src/cnc_core.c ****             info->pulsesCnt.y--;
 781              		.loc 1 147 13 is_stmt 1 view .LVU252
 782              		.loc 1 147 30 is_stmt 0 view .LVU253
 783 0048 013B     		subs	r3, r3, #1
 784 004a C381     		strh	r3, [r0, #14]	@ movhi
 148:Core/Src/cnc_core.c ****     }
 149:Core/Src/cnc_core.c **** }
 785              		.loc 1 149 1 view .LVU254
 786 004c 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE293:
 790              		.section	.text.CNC_HL_Control,"ax",%progbits
 791              		.align	1
 792              		.global	CNC_HL_Control
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 797              	CNC_HL_Control:
 798              	.LVL41:
 799              	.LFB294:
 150:Core/Src/cnc_core.c **** 
 151:Core/Src/cnc_core.c **** void CNC_HL_Control(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY, UART_Hand
 800              		.loc 1 151 146 is_stmt 1 view -0
 801              		.cfi_startproc
ARM GAS  /tmp/ccf6dNNL.s 			page 18


 802              		@ args = 4, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		.loc 1 151 146 is_stmt 0 view .LVU256
 805 0000 38B5     		push	{r3, r4, r5, lr}
 806              		.cfi_def_cfa_offset 16
 807              		.cfi_offset 3, -16
 808              		.cfi_offset 4, -12
 809              		.cfi_offset 5, -8
 810              		.cfi_offset 14, -4
 811 0002 0446     		mov	r4, r0
 152:Core/Src/cnc_core.c ****     switch (info->mode) {
 812              		.loc 1 152 5 is_stmt 1 view .LVU257
 813              		.loc 1 152 17 is_stmt 0 view .LVU258
 814 0004 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 815              	.LVL42:
 816              		.loc 1 152 5 view .LVU259
 817 0006 0128     		cmp	r0, #1
 818 0008 11D0     		beq	.L44
 819 000a 1D46     		mov	r5, r3
 820 000c 0328     		cmp	r0, #3
 821 000e 33D0     		beq	.L45
 822 0010 00B1     		cbz	r0, .L59
 823              	.LVL43:
 824              	.L43:
 153:Core/Src/cnc_core.c ****         case  HMI_Mode_Zero:
 154:Core/Src/cnc_core.c ****             if(info->state == HMI_State_Run){
 155:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 156:Core/Src/cnc_core.c ****                     info->move = HMI_Move_Jog;
 157:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 158:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 159:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 160:Core/Src/cnc_core.c ****                 }
 161:Core/Src/cnc_core.c ****             }
 162:Core/Src/cnc_core.c ****         break;
 163:Core/Src/cnc_core.c **** 
 164:Core/Src/cnc_core.c ****         case  HMI_Mode_Man:
 165:Core/Src/cnc_core.c ****             info->move = HMI_Move_Jog;
 166:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 167:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 168:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 169:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 170:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 171:Core/Src/cnc_core.c ****         break;
 172:Core/Src/cnc_core.c **** 
 173:Core/Src/cnc_core.c ****         case  HMI_Mode_Face:
 174:Core/Src/cnc_core.c ****             
 175:Core/Src/cnc_core.c ****         break; 
 176:Core/Src/cnc_core.c **** 
 177:Core/Src/cnc_core.c ****         case  HMI_Mode_Ser:
 178:Core/Src/cnc_core.c ****             if(info->state == HMI_State_Run){
 179:Core/Src/cnc_core.c ****                 switch (info->move) {
 180:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 181:Core/Src/cnc_core.c ****                     if(ReadGcode(huart, info)) 
 182:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 183:Core/Src/cnc_core.c ****                     else
 184:Core/Src/cnc_core.c ****                         WriteACK(huart, false);
 185:Core/Src/cnc_core.c ****                 break;
ARM GAS  /tmp/ccf6dNNL.s 			page 19


 186:Core/Src/cnc_core.c **** 
 187:Core/Src/cnc_core.c ****                 case HMI_Move_Done:
 188:Core/Src/cnc_core.c ****                     info->move = HMI_Move_None;
 189:Core/Src/cnc_core.c ****                     info->update = true;
 190:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 191:Core/Src/cnc_core.c ****                 break;
 192:Core/Src/cnc_core.c **** 
 193:Core/Src/cnc_core.c ****                 case HMI_Move_Absolute:
 194:Core/Src/cnc_core.c ****                     CNC_Absolute(info, htimX, htimY);
 195:Core/Src/cnc_core.c ****                 break;
 196:Core/Src/cnc_core.c **** 
 197:Core/Src/cnc_core.c ****                 case HMI_Move_Jog:
 198:Core/Src/cnc_core.c ****                     info->move = HMI_Move_None;;
 199:Core/Src/cnc_core.c ****                 break;
 200:Core/Src/cnc_core.c ****                 }
 201:Core/Src/cnc_core.c ****             }               
 202:Core/Src/cnc_core.c ****         break;
 203:Core/Src/cnc_core.c ****     }
 204:Core/Src/cnc_core.c **** }
 825              		.loc 1 204 1 view .LVU260
 826 0012 38BD     		pop	{r3, r4, r5, pc}
 827              	.LVL44:
 828              	.L59:
 829              	.LBB2:
 154:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 830              		.loc 1 154 13 is_stmt 1 view .LVU261
 154:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 831              		.loc 1 154 20 is_stmt 0 view .LVU262
 832 0014 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 833              	.LVL45:
 154:Core/Src/cnc_core.c ****                 if(HMI_Move_None){
 834              		.loc 1 154 15 view .LVU263
 835 0016 022B     		cmp	r3, #2
 836 0018 FBD1     		bne	.L43
 155:Core/Src/cnc_core.c ****                     info->move = HMI_Move_Jog;
 837              		.loc 1 155 17 is_stmt 1 view .LVU264
 156:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 838              		.loc 1 156 21 view .LVU265
 156:Core/Src/cnc_core.c ****                     info->commanded.speed.x = -200;  
 839              		.loc 1 156 32 is_stmt 0 view .LVU266
 840 001a 0123     		movs	r3, #1
 841 001c A370     		strb	r3, [r4, #2]
 157:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 842              		.loc 1 157 21 is_stmt 1 view .LVU267
 157:Core/Src/cnc_core.c ****                     info->commanded.speed.y = -200;
 843              		.loc 1 157 45 is_stmt 0 view .LVU268
 844 001e 4FF63873 		movw	r3, #65336
 845 0022 6382     		strh	r3, [r4, #18]	@ movhi
 158:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 846              		.loc 1 158 21 is_stmt 1 view .LVU269
 158:Core/Src/cnc_core.c ****                     CNC_Jog(info, htimX, htimY);
 847              		.loc 1 158 45 is_stmt 0 view .LVU270
 848 0024 A382     		strh	r3, [r4, #20]	@ movhi
 159:Core/Src/cnc_core.c ****                 }
 849              		.loc 1 159 21 is_stmt 1 view .LVU271
 850 0026 2046     		mov	r0, r4
 851 0028 FFF7FEFF 		bl	CNC_Jog
ARM GAS  /tmp/ccf6dNNL.s 			page 20


 852              	.LVL46:
 159:Core/Src/cnc_core.c ****                 }
 853              		.loc 1 159 21 is_stmt 0 view .LVU272
 854 002c F1E7     		b	.L43
 855              	.LVL47:
 856              	.L44:
 165:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 857              		.loc 1 165 13 is_stmt 1 view .LVU273
 165:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 858              		.loc 1 165 24 is_stmt 0 view .LVU274
 859 002e 0123     		movs	r3, #1
 860              	.LVL48:
 165:Core/Src/cnc_core.c ****             int16_t jogX = ((int16_t) (adc_data[6]>>1)) - (1844/2); //subtract center value X
 861              		.loc 1 165 24 view .LVU275
 862 0030 A370     		strb	r3, [r4, #2]
 166:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 863              		.loc 1 166 13 is_stmt 1 view .LVU276
 166:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 864              		.loc 1 166 48 is_stmt 0 view .LVU277
 865 0032 049B     		ldr	r3, [sp, #16]
 866 0034 9889     		ldrh	r0, [r3, #12]
 166:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 867              		.loc 1 166 29 view .LVU278
 868 0036 C0F34E00 		ubfx	r0, r0, #1, #15
 166:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 869              		.loc 1 166 57 view .LVU279
 870 003a A0F29A30 		subw	r0, r0, #922
 166:Core/Src/cnc_core.c ****             int16_t jogY = ((int16_t) (adc_data[7]>>1)) - (1814/2); //subtract center value Y
 871              		.loc 1 166 21 view .LVU280
 872 003e 00B2     		sxth	r0, r0
 873              	.LVL49:
 167:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 874              		.loc 1 167 13 is_stmt 1 view .LVU281
 167:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 875              		.loc 1 167 48 is_stmt 0 view .LVU282
 876 0040 DB89     		ldrh	r3, [r3, #14]
 167:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 877              		.loc 1 167 29 view .LVU283
 878 0042 C3F34E03 		ubfx	r3, r3, #1, #15
 167:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 879              		.loc 1 167 57 view .LVU284
 880 0046 A3F28B33 		subw	r3, r3, #907
 167:Core/Src/cnc_core.c ****             info->commanded.speed.x = (abs(jogX) > 70) ? jogX : 0;  // dead zone near center X
 881              		.loc 1 167 21 view .LVU285
 882 004a 1BB2     		sxth	r3, r3
 883              	.LVL50:
 168:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 884              		.loc 1 168 13 is_stmt 1 view .LVU286
 168:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 885              		.loc 1 168 40 is_stmt 0 view .LVU287
 886 004c 80EAE075 		eor	r5, r0, r0, asr #31
 887 0050 A5EBE075 		sub	r5, r5, r0, asr #31
 888 0054 ADB2     		uxth	r5, r5
 168:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 889              		.loc 1 168 37 view .LVU288
 890 0056 462D     		cmp	r5, #70
 891 0058 00D8     		bhi	.L47
ARM GAS  /tmp/ccf6dNNL.s 			page 21


 892 005a 0020     		movs	r0, #0
 893              	.LVL51:
 894              	.L47:
 168:Core/Src/cnc_core.c ****             info->commanded.speed.y = (abs(jogY) > 70) ? jogY : 0;  // dead zone near center Y
 895              		.loc 1 168 37 discriminator 4 view .LVU289
 896 005c 6082     		strh	r0, [r4, #18]	@ movhi
 169:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 897              		.loc 1 169 13 is_stmt 1 discriminator 4 view .LVU290
 169:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 898              		.loc 1 169 40 is_stmt 0 discriminator 4 view .LVU291
 899 005e 83EAE370 		eor	r0, r3, r3, asr #31
 900 0062 A0EBE370 		sub	r0, r0, r3, asr #31
 901 0066 80B2     		uxth	r0, r0
 169:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 902              		.loc 1 169 37 discriminator 4 view .LVU292
 903 0068 4628     		cmp	r0, #70
 904 006a 00D8     		bhi	.L48
 169:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 905              		.loc 1 169 37 view .LVU293
 906 006c 0023     		movs	r3, #0
 907              	.LVL52:
 908              	.L48:
 169:Core/Src/cnc_core.c ****             CNC_Jog(info, htimX, htimY);
 909              		.loc 1 169 37 discriminator 4 view .LVU294
 910 006e A382     		strh	r3, [r4, #20]	@ movhi
 170:Core/Src/cnc_core.c ****         break;
 911              		.loc 1 170 13 is_stmt 1 discriminator 4 view .LVU295
 912 0070 2046     		mov	r0, r4
 913 0072 FFF7FEFF 		bl	CNC_Jog
 914              	.LVL53:
 171:Core/Src/cnc_core.c **** 
 915              		.loc 1 171 9 discriminator 4 view .LVU296
 916 0076 CCE7     		b	.L43
 917              	.LVL54:
 918              	.L45:
 178:Core/Src/cnc_core.c ****                 switch (info->move) {
 919              		.loc 1 178 13 view .LVU297
 178:Core/Src/cnc_core.c ****                 switch (info->move) {
 920              		.loc 1 178 20 is_stmt 0 view .LVU298
 921 0078 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 922              	.LVL55:
 178:Core/Src/cnc_core.c ****                 switch (info->move) {
 923              		.loc 1 178 15 view .LVU299
 924 007a 022B     		cmp	r3, #2
 925 007c C9D1     		bne	.L43
 179:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 926              		.loc 1 179 17 is_stmt 1 view .LVU300
 179:Core/Src/cnc_core.c ****                 case HMI_Move_None:
 927              		.loc 1 179 29 is_stmt 0 view .LVU301
 928 007e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 929 0080 032B     		cmp	r3, #3
 930 0082 C6D8     		bhi	.L43
 931 0084 DFE803F0 		tbb	[pc, r3]
 932              	.L50:
 933 0088 17       		.byte	(.L53-.L50)/2
 934 0089 1B       		.byte	(.L52-.L50)/2
 935 008a 02       		.byte	(.L51-.L50)/2
ARM GAS  /tmp/ccf6dNNL.s 			page 22


 936 008b 0F       		.byte	(.L49-.L50)/2
 937              		.p2align 1
 938              	.L51:
 181:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 939              		.loc 1 181 21 is_stmt 1 view .LVU302
 181:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 940              		.loc 1 181 24 is_stmt 0 view .LVU303
 941 008c 2146     		mov	r1, r4
 942              	.LVL56:
 181:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 943              		.loc 1 181 24 view .LVU304
 944 008e 2846     		mov	r0, r5
 945 0090 FFF7FEFF 		bl	ReadGcode
 946              	.LVL57:
 181:Core/Src/cnc_core.c ****                         info->move = HMI_Move_Absolute; 
 947              		.loc 1 181 23 view .LVU305
 948 0094 10B1     		cbz	r0, .L54
 182:Core/Src/cnc_core.c ****                     else
 949              		.loc 1 182 25 is_stmt 1 view .LVU306
 182:Core/Src/cnc_core.c ****                     else
 950              		.loc 1 182 36 is_stmt 0 view .LVU307
 951 0096 0023     		movs	r3, #0
 952 0098 A370     		strb	r3, [r4, #2]
 953 009a BAE7     		b	.L43
 954              	.L54:
 184:Core/Src/cnc_core.c ****                 break;
 955              		.loc 1 184 25 is_stmt 1 view .LVU308
 956 009c 0021     		movs	r1, #0
 957 009e 2846     		mov	r0, r5
 958 00a0 FFF7FEFF 		bl	WriteACK
 959              	.LVL58:
 960 00a4 B5E7     		b	.L43
 961              	.LVL59:
 962              	.L49:
 188:Core/Src/cnc_core.c ****                     info->update = true;
 963              		.loc 1 188 21 view .LVU309
 188:Core/Src/cnc_core.c ****                     info->update = true;
 964              		.loc 1 188 32 is_stmt 0 view .LVU310
 965 00a6 0223     		movs	r3, #2
 966 00a8 A370     		strb	r3, [r4, #2]
 189:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 967              		.loc 1 189 21 is_stmt 1 view .LVU311
 189:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 968              		.loc 1 189 34 is_stmt 0 view .LVU312
 969 00aa 0121     		movs	r1, #1
 970              	.LVL60:
 189:Core/Src/cnc_core.c ****                     WriteACK(huart, true);
 971              		.loc 1 189 34 view .LVU313
 972 00ac A176     		strb	r1, [r4, #26]
 190:Core/Src/cnc_core.c ****                 break;
 973              		.loc 1 190 21 is_stmt 1 view .LVU314
 974 00ae 2846     		mov	r0, r5
 975 00b0 FFF7FEFF 		bl	WriteACK
 976              	.LVL61:
 191:Core/Src/cnc_core.c **** 
 977              		.loc 1 191 17 view .LVU315
 978 00b4 ADE7     		b	.L43
ARM GAS  /tmp/ccf6dNNL.s 			page 23


 979              	.LVL62:
 980              	.L53:
 194:Core/Src/cnc_core.c ****                 break;
 981              		.loc 1 194 21 view .LVU316
 982 00b6 2046     		mov	r0, r4
 983 00b8 FFF7FEFF 		bl	CNC_Absolute
 984              	.LVL63:
 195:Core/Src/cnc_core.c **** 
 985              		.loc 1 195 17 view .LVU317
 986 00bc A9E7     		b	.L43
 987              	.LVL64:
 988              	.L52:
 198:Core/Src/cnc_core.c ****                 break;
 989              		.loc 1 198 21 view .LVU318
 198:Core/Src/cnc_core.c ****                 break;
 990              		.loc 1 198 32 is_stmt 0 view .LVU319
 991 00be 0223     		movs	r3, #2
 992 00c0 A370     		strb	r3, [r4, #2]
 198:Core/Src/cnc_core.c ****                 break;
 993              		.loc 1 198 48 is_stmt 1 view .LVU320
 199:Core/Src/cnc_core.c ****                 }
 994              		.loc 1 199 17 view .LVU321
 995              	.LBE2:
 996              		.loc 1 204 1 is_stmt 0 view .LVU322
 997 00c2 A6E7     		b	.L43
 998              		.cfi_endproc
 999              	.LFE294:
 1001              		.section	.text.CNC_Stop,"ax",%progbits
 1002              		.align	1
 1003              		.global	CNC_Stop
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1008              	CNC_Stop:
 1009              	.LVL65:
 1010              	.LFB295:
 205:Core/Src/cnc_core.c **** 
 206:Core/Src/cnc_core.c **** void CNC_Stop(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1011              		.loc 1 206 84 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 207:Core/Src/cnc_core.c ****     htimX->Instance->CR1 |= TIM_CR1_OPM;
 1016              		.loc 1 207 5 view .LVU324
 1017              		.loc 1 207 10 is_stmt 0 view .LVU325
 1018 0000 0968     		ldr	r1, [r1]
 1019              	.LVL66:
 1020              		.loc 1 207 26 view .LVU326
 1021 0002 0B68     		ldr	r3, [r1]
 1022 0004 43F00803 		orr	r3, r3, #8
 1023 0008 0B60     		str	r3, [r1]
 208:Core/Src/cnc_core.c ****     htimY->Instance->CR1 |= TIM_CR1_OPM;
 1024              		.loc 1 208 5 is_stmt 1 view .LVU327
 1025              		.loc 1 208 10 is_stmt 0 view .LVU328
 1026 000a 1268     		ldr	r2, [r2]
 1027              	.LVL67:
ARM GAS  /tmp/ccf6dNNL.s 			page 24


 1028              		.loc 1 208 26 view .LVU329
 1029 000c 1368     		ldr	r3, [r2]
 1030 000e 43F00803 		orr	r3, r3, #8
 1031 0012 1360     		str	r3, [r2]
 209:Core/Src/cnc_core.c **** 
 210:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1032              		.loc 1 210 5 is_stmt 1 view .LVU330
 1033              		.loc 1 210 17 is_stmt 0 view .LVU331
 1034 0014 0023     		movs	r3, #0
 1035 0016 4370     		strb	r3, [r0, #1]
 211:Core/Src/cnc_core.c ****     info->update = true;
 1036              		.loc 1 211 5 is_stmt 1 view .LVU332
 1037              		.loc 1 211 18 is_stmt 0 view .LVU333
 1038 0018 0123     		movs	r3, #1
 1039 001a 8376     		strb	r3, [r0, #26]
 212:Core/Src/cnc_core.c ****     info->cnt2 = 30;
 1040              		.loc 1 212 5 is_stmt 1 view .LVU334
 1041              		.loc 1 212 16 is_stmt 0 view .LVU335
 1042 001c 1E23     		movs	r3, #30
 1043 001e 4376     		strb	r3, [r0, #25]
 213:Core/Src/cnc_core.c **** }
 1044              		.loc 1 213 1 view .LVU336
 1045 0020 7047     		bx	lr
 1046              		.cfi_endproc
 1047              	.LFE295:
 1049              		.section	.text.CNC_Limit_X,"ax",%progbits
 1050              		.align	1
 1051              		.global	CNC_Limit_X
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1056              	CNC_Limit_X:
 1057              	.LVL68:
 1058              	.LFB296:
 214:Core/Src/cnc_core.c **** 
 215:Core/Src/cnc_core.c **** void CNC_Limit_X(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1059              		.loc 1 215 87 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 216:Core/Src/cnc_core.c ****     htimX->Instance->CR1 |= TIM_CR1_OPM;
 1064              		.loc 1 216 5 view .LVU338
 1065              		.loc 1 216 10 is_stmt 0 view .LVU339
 1066 0000 0A68     		ldr	r2, [r1]
 1067              	.LVL69:
 1068              		.loc 1 216 26 view .LVU340
 1069 0002 1368     		ldr	r3, [r2]
 1070 0004 43F00803 		orr	r3, r3, #8
 1071 0008 1360     		str	r3, [r2]
 217:Core/Src/cnc_core.c **** 
 218:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1072              		.loc 1 218 5 is_stmt 1 view .LVU341
 1073              		.loc 1 218 17 is_stmt 0 view .LVU342
 1074 000a 0023     		movs	r3, #0
 1075 000c 4370     		strb	r3, [r0, #1]
 219:Core/Src/cnc_core.c ****     info->pos.x = 0;
ARM GAS  /tmp/ccf6dNNL.s 			page 25


 1076              		.loc 1 219 5 is_stmt 1 view .LVU343
 1077              		.loc 1 219 17 is_stmt 0 view .LVU344
 1078 000e 8380     		strh	r3, [r0, #4]	@ movhi
 220:Core/Src/cnc_core.c ****     info->zeroed.x = true;
 1079              		.loc 1 220 5 is_stmt 1 view .LVU345
 1080              		.loc 1 220 20 is_stmt 0 view .LVU346
 1081 0010 0123     		movs	r3, #1
 1082 0012 C376     		strb	r3, [r0, #27]
 221:Core/Src/cnc_core.c ****     info->update = true;
 1083              		.loc 1 221 5 is_stmt 1 view .LVU347
 1084              		.loc 1 221 18 is_stmt 0 view .LVU348
 1085 0014 8376     		strb	r3, [r0, #26]
 222:Core/Src/cnc_core.c **** }
 1086              		.loc 1 222 1 view .LVU349
 1087 0016 7047     		bx	lr
 1088              		.cfi_endproc
 1089              	.LFE296:
 1091              		.section	.text.CNC_Limit_Y,"ax",%progbits
 1092              		.align	1
 1093              		.global	CNC_Limit_Y
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1098              	CNC_Limit_Y:
 1099              	.LVL70:
 1100              	.LFB297:
 223:Core/Src/cnc_core.c **** 
 224:Core/Src/cnc_core.c **** void CNC_Limit_Y(HMI_info_t* info, TIM_HandleTypeDef *htimX, TIM_HandleTypeDef *htimY){
 1101              		.loc 1 224 87 is_stmt 1 view -0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 225:Core/Src/cnc_core.c ****     htimY->Instance->CR1 |= TIM_CR1_OPM;
 1106              		.loc 1 225 5 view .LVU351
 1107              		.loc 1 225 10 is_stmt 0 view .LVU352
 1108 0000 1268     		ldr	r2, [r2]
 1109              	.LVL71:
 1110              		.loc 1 225 26 view .LVU353
 1111 0002 1368     		ldr	r3, [r2]
 1112 0004 43F00803 		orr	r3, r3, #8
 1113 0008 1360     		str	r3, [r2]
 226:Core/Src/cnc_core.c **** 
 227:Core/Src/cnc_core.c ****     info->state = HMI_State_Stop;
 1114              		.loc 1 227 5 is_stmt 1 view .LVU354
 1115              		.loc 1 227 17 is_stmt 0 view .LVU355
 1116 000a 0023     		movs	r3, #0
 1117 000c 4370     		strb	r3, [r0, #1]
 228:Core/Src/cnc_core.c ****     info->pos.y = 0;
 1118              		.loc 1 228 5 is_stmt 1 view .LVU356
 1119              		.loc 1 228 17 is_stmt 0 view .LVU357
 1120 000e C380     		strh	r3, [r0, #6]	@ movhi
 229:Core/Src/cnc_core.c ****     info->zeroed.y = true;
 1121              		.loc 1 229 5 is_stmt 1 view .LVU358
 1122              		.loc 1 229 20 is_stmt 0 view .LVU359
 1123 0010 0123     		movs	r3, #1
 1124 0012 0377     		strb	r3, [r0, #28]
ARM GAS  /tmp/ccf6dNNL.s 			page 26


 230:Core/Src/cnc_core.c ****     info->update = true;
 1125              		.loc 1 230 5 is_stmt 1 view .LVU360
 1126              		.loc 1 230 18 is_stmt 0 view .LVU361
 1127 0014 8376     		strb	r3, [r0, #26]
 231:Core/Src/cnc_core.c **** }
 1128              		.loc 1 231 1 view .LVU362
 1129 0016 7047     		bx	lr
 1130              		.cfi_endproc
 1131              	.LFE297:
 1133              		.text
 1134              	.Letext0:
 1135              		.file 2 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1136              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1137              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 1138              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1139              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1140              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1141              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1142              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1143              		.file 10 "Core/Inc/cnc_info.h"
 1144              		.file 11 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1145              		.file 12 "Core/Inc/data_parser.h"
ARM GAS  /tmp/ccf6dNNL.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cnc_core.c
     /tmp/ccf6dNNL.s:20     .text.ihyp:0000000000000000 $t
     /tmp/ccf6dNNL.s:26     .text.ihyp:0000000000000000 ihyp
     /tmp/ccf6dNNL.s:65     .text.CNC_Stepper:0000000000000000 $t
     /tmp/ccf6dNNL.s:71     .text.CNC_Stepper:0000000000000000 CNC_Stepper
     /tmp/ccf6dNNL.s:231    .text.CNC_Absolute:0000000000000000 $t
     /tmp/ccf6dNNL.s:237    .text.CNC_Absolute:0000000000000000 CNC_Absolute
     /tmp/ccf6dNNL.s:454    .text.CNC_Absolute:00000000000000fc $d
     /tmp/ccf6dNNL.s:459    .text.CNC_Jog:0000000000000000 $t
     /tmp/ccf6dNNL.s:465    .text.CNC_Jog:0000000000000000 CNC_Jog
     /tmp/ccf6dNNL.s:583    .text.CNC_Jog:0000000000000098 $d
     /tmp/ccf6dNNL.s:588    .text.CNC_TIM_Callback_X:0000000000000000 $t
     /tmp/ccf6dNNL.s:594    .text.CNC_TIM_Callback_X:0000000000000000 CNC_TIM_Callback_X
     /tmp/ccf6dNNL.s:692    .text.CNC_TIM_Callback_Y:0000000000000000 $t
     /tmp/ccf6dNNL.s:698    .text.CNC_TIM_Callback_Y:0000000000000000 CNC_TIM_Callback_Y
     /tmp/ccf6dNNL.s:791    .text.CNC_HL_Control:0000000000000000 $t
     /tmp/ccf6dNNL.s:797    .text.CNC_HL_Control:0000000000000000 CNC_HL_Control
     /tmp/ccf6dNNL.s:933    .text.CNC_HL_Control:0000000000000088 $d
     /tmp/ccf6dNNL.s:937    .text.CNC_HL_Control:000000000000008c $t
     /tmp/ccf6dNNL.s:1002   .text.CNC_Stop:0000000000000000 $t
     /tmp/ccf6dNNL.s:1008   .text.CNC_Stop:0000000000000000 CNC_Stop
     /tmp/ccf6dNNL.s:1050   .text.CNC_Limit_X:0000000000000000 $t
     /tmp/ccf6dNNL.s:1056   .text.CNC_Limit_X:0000000000000000 CNC_Limit_X
     /tmp/ccf6dNNL.s:1092   .text.CNC_Limit_Y:0000000000000000 $t
     /tmp/ccf6dNNL.s:1098   .text.CNC_Limit_Y:0000000000000000 CNC_Limit_Y

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
div
ReadGcode
WriteACK
