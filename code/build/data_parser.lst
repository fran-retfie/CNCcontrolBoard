ARM GAS  /tmp/ccmDdZLl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"data_parser.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CheckSum,"ax",%progbits
  20              		.align	1
  21              		.global	CheckSum
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CheckSum:
  27              	.LVL0:
  28              	.LFB291:
  29              		.file 1 "Core/Src/data_parser.c"
   1:Core/Src/data_parser.c **** 
   2:Core/Src/data_parser.c **** // Francesco Osti 25/12/2022 //
   3:Core/Src/data_parser.c **** 
   4:Core/Src/data_parser.c **** #include "data_parser.h"
   5:Core/Src/data_parser.c **** #include <stdio.h>
   6:Core/Src/data_parser.c **** #include <string.h>
   7:Core/Src/data_parser.c **** 
   8:Core/Src/data_parser.c **** bool CheckSum(uvec32_t* coord, uint16_t sum_value, uint16_t xor_value){
  30              		.loc 1 8 71 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
   9:Core/Src/data_parser.c **** 
  10:Core/Src/data_parser.c ****     // check checksum values
  11:Core/Src/data_parser.c ****     uint16_t sum_check = coord->x + coord->y;
  35              		.loc 1 11 5 view .LVU1
  36              		.loc 1 11 35 is_stmt 0 view .LVU2
  37 0000 0388     		ldrh	r3, [r0]
  38 0002 B0F804C0 		ldrh	ip, [r0, #4]
  39              		.loc 1 11 14 view .LVU3
  40 0006 03EB0C00 		add	r0, r3, ip
  41              	.LVL1:
  42              		.loc 1 11 14 view .LVU4
  43 000a 80B2     		uxth	r0, r0
  44              	.LVL2:
  12:Core/Src/data_parser.c ****     uint16_t xor_check = coord->x ^ coord->y;
  45              		.loc 1 12 5 is_stmt 1 view .LVU5
  46              		.loc 1 12 14 is_stmt 0 view .LVU6
ARM GAS  /tmp/ccmDdZLl.s 			page 2


  47 000c 83EA0C03 		eor	r3, r3, ip
  48              	.LVL3:
  13:Core/Src/data_parser.c **** 
  14:Core/Src/data_parser.c ****     return ((sum_value == sum_check) && (xor_value == xor_check));
  49              		.loc 1 14 5 is_stmt 1 view .LVU7
  50              		.loc 1 14 38 is_stmt 0 view .LVU8
  51 0010 8842     		cmp	r0, r1
  52 0012 01D0     		beq	.L5
  53 0014 0020     		movs	r0, #0
  54              	.LVL4:
  55              		.loc 1 14 38 view .LVU9
  56 0016 7047     		bx	lr
  57              	.LVL5:
  58              	.L5:
  59              		.loc 1 14 38 discriminator 1 view .LVU10
  60 0018 9342     		cmp	r3, r2
  61 001a 01D0     		beq	.L4
  62              		.loc 1 14 38 view .LVU11
  63 001c 0020     		movs	r0, #0
  64              	.LVL6:
  65              		.loc 1 14 38 view .LVU12
  66 001e 7047     		bx	lr
  67              	.LVL7:
  68              	.L4:
  69              		.loc 1 14 38 view .LVU13
  70 0020 0120     		movs	r0, #1
  71              	.LVL8:
  15:Core/Src/data_parser.c **** }
  72              		.loc 1 15 1 view .LVU14
  73 0022 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE291:
  77              		.section	.text.WriteACK,"ax",%progbits
  78              		.align	1
  79              		.global	WriteACK
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	WriteACK:
  85              	.LVL9:
  86              	.LFB292:
  16:Core/Src/data_parser.c **** 
  17:Core/Src/data_parser.c **** void WriteACK(UART_HandleTypeDef *huart, bool status){
  87              		.loc 1 17 54 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 17 54 is_stmt 0 view .LVU16
  92 0000 00B5     		push	{lr}
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 14, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              		.cfi_def_cfa_offset 16
  18:Core/Src/data_parser.c ****     char uartData = status ? 'A' : 'N';
  97              		.loc 1 18 5 is_stmt 1 view .LVU17
  98              		.loc 1 18 10 is_stmt 0 view .LVU18
  99 0004 59B1     		cbz	r1, .L8
ARM GAS  /tmp/ccmDdZLl.s 			page 3


 100 0006 4123     		movs	r3, #65
 101              	.L7:
 102              		.loc 1 18 10 discriminator 4 view .LVU19
 103 0008 8DF80730 		strb	r3, [sp, #7]
  19:Core/Src/data_parser.c ****     HAL_UART_Transmit(huart, (uint8_t*) &uartData, 1, 100);
 104              		.loc 1 19 5 is_stmt 1 discriminator 4 view .LVU20
 105 000c 6423     		movs	r3, #100
 106 000e 0122     		movs	r2, #1
 107 0010 0DF10701 		add	r1, sp, #7
 108              	.LVL10:
 109              		.loc 1 19 5 is_stmt 0 discriminator 4 view .LVU21
 110 0014 FFF7FEFF 		bl	HAL_UART_Transmit
 111              	.LVL11:
  20:Core/Src/data_parser.c **** }
 112              		.loc 1 20 1 discriminator 4 view .LVU22
 113 0018 03B0     		add	sp, sp, #12
 114              		.cfi_remember_state
 115              		.cfi_def_cfa_offset 4
 116              		@ sp needed
 117 001a 5DF804FB 		ldr	pc, [sp], #4
 118              	.LVL12:
 119              	.L8:
 120              		.cfi_restore_state
  18:Core/Src/data_parser.c ****     char uartData = status ? 'A' : 'N';
 121              		.loc 1 18 10 view .LVU23
 122 001e 4E23     		movs	r3, #78
 123 0020 F2E7     		b	.L7
 124              		.cfi_endproc
 125              	.LFE292:
 127              		.section	.text.ReadGcodeDMA,"ax",%progbits
 128              		.align	1
 129              		.global	ReadGcodeDMA
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	ReadGcodeDMA:
 135              	.LVL13:
 136              	.LFB293:
  21:Core/Src/data_parser.c **** 
  22:Core/Src/data_parser.c **** /*
  23:Core/Src/data_parser.c **** bool ReadGcode(UART_HandleTypeDef *huart, HMI_info_t* info){
  24:Core/Src/data_parser.c ****     char uartData[11];
  25:Core/Src/data_parser.c ****     while(1){
  26:Core/Src/data_parser.c ****       HAL_StatusTypeDef status = HAL_UART_Receive(huart, (uint8_t*) uartData, 11, 100);
  27:Core/Src/data_parser.c ****       if(status == HAL_OK){
  28:Core/Src/data_parser.c ****         if(uartData[10] == 0){
  29:Core/Src/data_parser.c ****           break;
  30:Core/Src/data_parser.c ****         }
  31:Core/Src/data_parser.c ****       }
  32:Core/Src/data_parser.c ****       else{
  33:Core/Src/data_parser.c ****         uartData[0] = 'N'; 
  34:Core/Src/data_parser.c ****         HAL_UART_Transmit(huart, (uint8_t*) uartData, 1, 100);
  35:Core/Src/data_parser.c ****       }
  36:Core/Src/data_parser.c ****     }
  37:Core/Src/data_parser.c **** 
  38:Core/Src/data_parser.c ****     uint16_t *g_cmd, *sum_value, *xor_value;
  39:Core/Src/data_parser.c ****     info->commanded.pos.x  = *(uint16_t*) uartData;
ARM GAS  /tmp/ccmDdZLl.s 			page 4


  40:Core/Src/data_parser.c ****     info->commanded.pos.y  = *((uint16_t*) uartData + 1);
  41:Core/Src/data_parser.c ****     g_cmd     = (uint16_t*) (uartData + 4);
  42:Core/Src/data_parser.c ****     sum_value = (uint16_t*) (uartData + 6);
  43:Core/Src/data_parser.c ****     xor_value = (uint16_t*) (uartData + 8);
  44:Core/Src/data_parser.c **** 
  45:Core/Src/data_parser.c ****     bool check = CheckSum(&(info->commanded.pos), *sum_value, *xor_value);
  46:Core/Src/data_parser.c ****     info->commanded.pos.x *= stepX_01mm;
  47:Core/Src/data_parser.c ****     info->commanded.pos.y *= stepX_01mm;
  48:Core/Src/data_parser.c **** 
  49:Core/Src/data_parser.c ****     return check;
  50:Core/Src/data_parser.c **** }
  51:Core/Src/data_parser.c **** */
  52:Core/Src/data_parser.c **** 
  53:Core/Src/data_parser.c **** void ReadGcodeDMA(UART_HandleTypeDef *huart, uint8_t* uartData, HMI_info_t* const info){
 137              		.loc 1 53 88 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 53 88 is_stmt 0 view .LVU25
 142 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 143              		.cfi_def_cfa_offset 24
 144              		.cfi_offset 4, -24
 145              		.cfi_offset 5, -20
 146              		.cfi_offset 6, -16
 147              		.cfi_offset 7, -12
 148              		.cfi_offset 8, -8
 149              		.cfi_offset 14, -4
 150 0004 8046     		mov	r8, r0
 151 0006 1446     		mov	r4, r2
  54:Core/Src/data_parser.c ****   bool check = (uartData[10] == 0);
 152              		.loc 1 54 3 is_stmt 1 view .LVU26
 153              		.loc 1 54 25 is_stmt 0 view .LVU27
 154 0008 8D7A     		ldrb	r5, [r1, #10]	@ zero_extendqisi2
 155              		.loc 1 54 8 view .LVU28
 156 000a B5FA85F5 		clz	r5, r5
 157 000e 6D09     		lsrs	r5, r5, #5
 158              	.LVL14:
  55:Core/Src/data_parser.c ****   
  56:Core/Src/data_parser.c ****   uint16_t *g_cmd, *sum_value, *xor_value;
 159              		.loc 1 56 3 is_stmt 1 view .LVU29
  57:Core/Src/data_parser.c ****   info->commanded.pos.x  = *(uint16_t*) uartData;
 160              		.loc 1 57 3 view .LVU30
 161              		.loc 1 57 28 is_stmt 0 view .LVU31
 162 0010 0F88     		ldrh	r7, [r1]
 163              		.loc 1 57 26 view .LVU32
 164 0012 5761     		str	r7, [r2, #20]
  58:Core/Src/data_parser.c ****   info->commanded.pos.y  = *((uint16_t*) uartData + 1);
 165              		.loc 1 58 3 is_stmt 1 view .LVU33
 166              		.loc 1 58 28 is_stmt 0 view .LVU34
 167 0014 4E88     		ldrh	r6, [r1, #2]
 168              		.loc 1 58 26 view .LVU35
 169 0016 9661     		str	r6, [r2, #24]
  59:Core/Src/data_parser.c ****   g_cmd     = (uint16_t*) (uartData + 4);
 170              		.loc 1 59 3 is_stmt 1 view .LVU36
 171              	.LVL15:
  60:Core/Src/data_parser.c ****   sum_value = (uint16_t*) (uartData + 6);
 172              		.loc 1 60 3 view .LVU37
ARM GAS  /tmp/ccmDdZLl.s 			page 5


  61:Core/Src/data_parser.c ****   xor_value = (uint16_t*) (uartData + 8);
 173              		.loc 1 61 3 view .LVU38
  62:Core/Src/data_parser.c **** 
  63:Core/Src/data_parser.c ****   check &= CheckSum(&(info->commanded.pos), *sum_value, *xor_value);
 174              		.loc 1 63 3 view .LVU39
 175              		.loc 1 63 12 is_stmt 0 view .LVU40
 176 0018 0A89     		ldrh	r2, [r1, #8]
 177              	.LVL16:
 178              		.loc 1 63 12 view .LVU41
 179 001a C988     		ldrh	r1, [r1, #6]
 180              	.LVL17:
 181              		.loc 1 63 12 view .LVU42
 182 001c 04F11400 		add	r0, r4, #20
 183              	.LVL18:
 184              		.loc 1 63 12 view .LVU43
 185 0020 FFF7FEFF 		bl	CheckSum
 186              	.LVL19:
  64:Core/Src/data_parser.c ****   info->commanded.pos.x *= stepX_01mm;
 187              		.loc 1 64 3 is_stmt 1 view .LVU44
 188              		.loc 1 64 25 is_stmt 0 view .LVU45
 189 0024 BF00     		lsls	r7, r7, #2
 190 0026 6761     		str	r7, [r4, #20]
  65:Core/Src/data_parser.c ****   info->commanded.pos.y *= stepX_01mm;
 191              		.loc 1 65 3 is_stmt 1 view .LVU46
 192              		.loc 1 65 25 is_stmt 0 view .LVU47
 193 0028 B600     		lsls	r6, r6, #2
 194 002a A661     		str	r6, [r4, #24]
  66:Core/Src/data_parser.c **** 
  67:Core/Src/data_parser.c ****   if(!check)
 195              		.loc 1 67 3 is_stmt 1 view .LVU48
 196              		.loc 1 67 5 is_stmt 0 view .LVU49
 197 002c 25B1     		cbz	r5, .L14
 198 002e 18B1     		cbz	r0, .L14
  68:Core/Src/data_parser.c ****     WriteACK(huart, false);
  69:Core/Src/data_parser.c ****   else
  70:Core/Src/data_parser.c ****    info->move = HMI_Move_Absolute;
 199              		.loc 1 70 4 is_stmt 1 view .LVU50
 200              		.loc 1 70 15 is_stmt 0 view .LVU51
 201 0030 0023     		movs	r3, #0
 202 0032 A370     		strb	r3, [r4, #2]
 203              	.LVL20:
 204              	.L10:
  71:Core/Src/data_parser.c **** }...
 205              		.loc 1 71 1 view .LVU52
 206 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 207              	.LVL21:
 208              	.L14:
  68:Core/Src/data_parser.c ****     WriteACK(huart, false);
 209              		.loc 1 68 5 is_stmt 1 view .LVU53
 210 0038 0021     		movs	r1, #0
 211 003a 4046     		mov	r0, r8
 212              	.LVL22:
  68:Core/Src/data_parser.c ****     WriteACK(huart, false);
 213              		.loc 1 68 5 is_stmt 0 view .LVU54
 214 003c FFF7FEFF 		bl	WriteACK
 215              	.LVL23:
 216 0040 F8E7     		b	.L10
ARM GAS  /tmp/ccmDdZLl.s 			page 6


 217              		.cfi_endproc
 218              	.LFE293:
 220              		.text
 221              	.Letext0:
 222              		.file 2 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 223              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 224              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 225              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 226              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 227              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 228              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 229              		.file 9 "Core/Inc/cnc_info.h"
ARM GAS  /tmp/ccmDdZLl.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 data_parser.c
     /tmp/ccmDdZLl.s:20     .text.CheckSum:0000000000000000 $t
     /tmp/ccmDdZLl.s:26     .text.CheckSum:0000000000000000 CheckSum
     /tmp/ccmDdZLl.s:78     .text.WriteACK:0000000000000000 $t
     /tmp/ccmDdZLl.s:84     .text.WriteACK:0000000000000000 WriteACK
     /tmp/ccmDdZLl.s:128    .text.ReadGcodeDMA:0000000000000000 $t
     /tmp/ccmDdZLl.s:134    .text.ReadGcodeDMA:0000000000000000 ReadGcodeDMA

UNDEFINED SYMBOLS
HAL_UART_Transmit
