ARM GAS  /tmp/ccKBAikY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"hmi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__Read_Pushbuttons,"ax",%progbits
  20              		.align	1
  21              		.global	__Read_Pushbuttons
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	__Read_Pushbuttons:
  27              	.LFB291:
  28              		.file 1 "Core/Src/hmi.c"
   1:Core/Src/hmi.c **** 
   2:Core/Src/hmi.c **** // Francesco Osti 25/12/2022 //
   3:Core/Src/hmi.c **** 
   4:Core/Src/hmi.c **** #include "hmi.h"
   5:Core/Src/hmi.c **** #include "main.h"
   6:Core/Src/hmi.c **** #include "lcd.h"
   7:Core/Src/hmi.c **** #include "cnc_core.h"
   8:Core/Src/hmi.c **** #include <stdio.h>
   9:Core/Src/hmi.c **** #include <string.h>
  10:Core/Src/hmi.c **** #include <stdlib.h>
  11:Core/Src/hmi.c **** 
  12:Core/Src/hmi.c **** uint8_t __Read_Pushbuttons(){
  29              		.loc 1 12 29 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  13:Core/Src/hmi.c ****     return (PB0_GPIO_Port->IDR & (PB0_Pin | PB1_Pin | PB2_Pin))>>(13-5) | (PB7_GPIO_Port->IDR & (0x
  34              		.loc 1 13 5 view .LVU1
  35              		.loc 1 13 26 is_stmt 0 view .LVU2
  36 0000 054B     		ldr	r3, .L2
  37 0002 1B69     		ldr	r3, [r3, #16]
  38              		.loc 1 13 64 view .LVU3
  39 0004 1B0A     		lsrs	r3, r3, #8
  40 0006 03F0E003 		and	r3, r3, #224
  41              		.loc 1 13 89 view .LVU4
  42 000a 044A     		ldr	r2, .L2+4
  43 000c 1069     		ldr	r0, [r2, #16]
  44              		.loc 1 13 104 view .LVU5
  45 000e C0F38400 		ubfx	r0, r0, #2, #5
ARM GAS  /tmp/ccKBAikY.s 			page 2


  14:Core/Src/hmi.c **** }
  46              		.loc 1 14 1 view .LVU6
  47 0012 1843     		orrs	r0, r0, r3
  48 0014 7047     		bx	lr
  49              	.L3:
  50 0016 00BF     		.align	2
  51              	.L2:
  52 0018 00080048 		.word	1207961600
  53 001c 00100048 		.word	1207963648
  54              		.cfi_endproc
  55              	.LFE291:
  57              		.section	.text.__BP_Control,"ax",%progbits
  58              		.align	1
  59              		.global	__BP_Control
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	__BP_Control:
  65              	.LVL0:
  66              	.LFB292:
  15:Core/Src/hmi.c **** 
  16:Core/Src/hmi.c **** static char ModeNames[4][17]  = {"AZZERAMENTO     ", "MANUALE         ", "SPIANATURA      ", "COMPU
  17:Core/Src/hmi.c **** static char StateNames[4][17] = {"STOP            ", "PAUSE           ", "RUN             "};
  18:Core/Src/hmi.c **** 
  19:Core/Src/hmi.c **** void __BP_Control(HMI_info_t* const info, uint8_t mask, bool pause_mask){
  67              		.loc 1 19 73 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		.loc 1 19 73 is_stmt 0 view .LVU8
  72 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  73              		.cfi_def_cfa_offset 24
  74              		.cfi_offset 4, -24
  75              		.cfi_offset 5, -20
  76              		.cfi_offset 6, -16
  77              		.cfi_offset 7, -12
  78              		.cfi_offset 8, -8
  79              		.cfi_offset 14, -4
  80 0004 0446     		mov	r4, r0
  81 0006 0F46     		mov	r7, r1
  82 0008 9046     		mov	r8, r2
  20:Core/Src/hmi.c ****   uint8_t newPushbuttons = __Read_Pushbuttons();
  83              		.loc 1 20 3 is_stmt 1 view .LVU9
  84              		.loc 1 20 28 is_stmt 0 view .LVU10
  85 000a FFF7FEFF 		bl	__Read_Pushbuttons
  86              	.LVL1:
  87              		.loc 1 20 28 view .LVU11
  88 000e 0646     		mov	r6, r0
  89              	.LVL2:
  21:Core/Src/hmi.c ****   uint8_t PBpressed = ~newPushbuttons & info->pushbuttons & mask;
  90              		.loc 1 21 3 is_stmt 1 view .LVU12
  91              		.loc 1 21 39 is_stmt 0 view .LVU13
  92 0010 C343     		mvns	r3, r0
  93 0012 5BB2     		sxtb	r3, r3
  94              		.loc 1 21 45 view .LVU14
  95 0014 94F83C50 		ldrb	r5, [r4, #60]	@ zero_extendqisi2
  96              		.loc 1 21 11 view .LVU15
ARM GAS  /tmp/ccKBAikY.s 			page 3


  97 0018 1D40     		ands	r5, r5, r3
  98 001a 3D40     		ands	r5, r5, r7
  99              	.LVL3:
  22:Core/Src/hmi.c **** 
  23:Core/Src/hmi.c ****   if((PBpressed & PB_MODE) && info->zeroed.x && info->zeroed.y && (info->state == HMI_State_Stop)){
 100              		.loc 1 23 3 is_stmt 1 view .LVU16
 101              		.loc 1 23 5 is_stmt 0 view .LVU17
 102 001c 15F0100F 		tst	r5, #16
 103 0020 17D0     		beq	.L5
 104              		.loc 1 23 43 discriminator 1 view .LVU18
 105 0022 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 106              		.loc 1 23 28 discriminator 1 view .LVU19
 107 0026 A3B1     		cbz	r3, .L5
 108              		.loc 1 23 61 discriminator 2 view .LVU20
 109 0028 94F83B30 		ldrb	r3, [r4, #59]	@ zero_extendqisi2
 110              		.loc 1 23 46 discriminator 2 view .LVU21
 111 002c 8BB1     		cbz	r3, .L5
 112              		.loc 1 23 72 discriminator 3 view .LVU22
 113 002e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 114              		.loc 1 23 64 discriminator 3 view .LVU23
 115 0030 7BB9     		cbnz	r3, .L5
  24:Core/Src/hmi.c ****     info->mode = (info->mode >= 3) ? HMI_Mode_Zero : info->mode+1;
 116              		.loc 1 24 5 is_stmt 1 view .LVU24
 117              		.loc 1 24 23 is_stmt 0 view .LVU25
 118 0032 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 119              		.loc 1 24 52 view .LVU26
 120 0034 022A     		cmp	r2, #2
 121 0036 01D8     		bhi	.L6
 122              		.loc 1 24 52 discriminator 1 view .LVU27
 123 0038 0132     		adds	r2, r2, #1
 124 003a D3B2     		uxtb	r3, r2
 125              	.L6:
 126              		.loc 1 24 16 discriminator 4 view .LVU28
 127 003c 2370     		strb	r3, [r4]
  25:Core/Src/hmi.c ****     info->state = HMI_State_Stop;
 128              		.loc 1 25 5 is_stmt 1 discriminator 4 view .LVU29
 129              		.loc 1 25 17 is_stmt 0 discriminator 4 view .LVU30
 130 003e 0023     		movs	r3, #0
 131 0040 6370     		strb	r3, [r4, #1]
  26:Core/Src/hmi.c ****     info->move = HMI_Move_None;
 132              		.loc 1 26 5 is_stmt 1 discriminator 4 view .LVU31
 133              		.loc 1 26 16 is_stmt 0 discriminator 4 view .LVU32
 134 0042 0223     		movs	r3, #2
 135 0044 A370     		strb	r3, [r4, #2]
  27:Core/Src/hmi.c ****     info->update = true;
 136              		.loc 1 27 5 is_stmt 1 discriminator 4 view .LVU33
 137              		.loc 1 27 18 is_stmt 0 discriminator 4 view .LVU34
 138 0046 0123     		movs	r3, #1
 139 0048 84F83530 		strb	r3, [r4, #53]
  28:Core/Src/hmi.c ****     info->cnt2 = 10;
 140              		.loc 1 28 5 is_stmt 1 discriminator 4 view .LVU35
 141              		.loc 1 28 16 is_stmt 0 discriminator 4 view .LVU36
 142 004c 0A23     		movs	r3, #10
 143 004e 84F83430 		strb	r3, [r4, #52]
 144              	.L5:
  29:Core/Src/hmi.c ****   }
  30:Core/Src/hmi.c **** 
ARM GAS  /tmp/ccKBAikY.s 			page 4


  31:Core/Src/hmi.c ****   if(PBpressed & PB_STOP){
 145              		.loc 1 31 3 is_stmt 1 view .LVU37
 146              		.loc 1 31 5 is_stmt 0 view .LVU38
 147 0052 15F0020F 		tst	r5, #2
 148 0056 2AD1     		bne	.L16
 149              	.LVL4:
 150              	.L7:
  32:Core/Src/hmi.c ****     CNC_Stop(info);
  33:Core/Src/hmi.c ****   }
  34:Core/Src/hmi.c **** 
  35:Core/Src/hmi.c ****   if(PBpressed & PB_SET){
 151              		.loc 1 35 3 is_stmt 1 view .LVU39
 152              		.loc 1 35 5 is_stmt 0 view .LVU40
 153 0058 15F0080F 		tst	r5, #8
 154 005c 08D0     		beq	.L8
  36:Core/Src/hmi.c ****     info->Psel = !info->Psel;
 155              		.loc 1 36 5 is_stmt 1 view .LVU41
 156              		.loc 1 36 23 is_stmt 0 view .LVU42
 157 005e 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 158              		.loc 1 36 5 view .LVU43
 159 0062 83F00103 		eor	r3, r3, #1
 160              		.loc 1 36 16 view .LVU44
 161 0066 84F83230 		strb	r3, [r4, #50]
  37:Core/Src/hmi.c ****     info->update = true;
 162              		.loc 1 37 5 is_stmt 1 view .LVU45
 163              		.loc 1 37 18 is_stmt 0 view .LVU46
 164 006a 0123     		movs	r3, #1
 165 006c 84F83530 		strb	r3, [r4, #53]
 166              	.L8:
  38:Core/Src/hmi.c ****   }
  39:Core/Src/hmi.c **** 
  40:Core/Src/hmi.c ****   if(PBpressed & PB_JOY){
 167              		.loc 1 40 3 is_stmt 1 view .LVU47
 168              		.loc 1 40 5 is_stmt 0 view .LVU48
 169 0070 15F0010F 		tst	r5, #1
 170 0074 0CD0     		beq	.L9
  41:Core/Src/hmi.c ****     if(info->Psel){
 171              		.loc 1 41 5 is_stmt 1 view .LVU49
 172              		.loc 1 41 12 is_stmt 0 view .LVU50
 173 0076 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 174              		.loc 1 41 7 view .LVU51
 175 007a E3B1     		cbz	r3, .L10
  42:Core/Src/hmi.c ****       info->P1.x = info->pos.x;
 176              		.loc 1 42 7 is_stmt 1 view .LVU52
 177              		.loc 1 42 29 is_stmt 0 view .LVU53
 178 007c 6368     		ldr	r3, [r4, #4]
 179              		.loc 1 42 18 view .LVU54
 180 007e 2362     		str	r3, [r4, #32]
  43:Core/Src/hmi.c ****       info->P1.y = info->pos.y;
 181              		.loc 1 43 7 is_stmt 1 view .LVU55
 182              		.loc 1 43 29 is_stmt 0 view .LVU56
 183 0080 A368     		ldr	r3, [r4, #8]
 184              		.loc 1 43 18 view .LVU57
 185 0082 6362     		str	r3, [r4, #36]
  44:Core/Src/hmi.c ****       info->P1set = true;
 186              		.loc 1 44 7 is_stmt 1 view .LVU58
 187              		.loc 1 44 19 is_stmt 0 view .LVU59
ARM GAS  /tmp/ccKBAikY.s 			page 5


 188 0084 0123     		movs	r3, #1
 189 0086 84F83030 		strb	r3, [r4, #48]
 190              	.L11:
  45:Core/Src/hmi.c ****     }
  46:Core/Src/hmi.c ****     else {
  47:Core/Src/hmi.c ****       info->P2.x = info->pos.x;
  48:Core/Src/hmi.c ****       info->P2.y = info->pos.y;
  49:Core/Src/hmi.c ****       info->P2set = true;
  50:Core/Src/hmi.c ****     }
  51:Core/Src/hmi.c **** 
  52:Core/Src/hmi.c ****     info->update = true;
 191              		.loc 1 52 5 is_stmt 1 view .LVU60
 192              		.loc 1 52 18 is_stmt 0 view .LVU61
 193 008a 0123     		movs	r3, #1
 194 008c 84F83530 		strb	r3, [r4, #53]
 195              	.L9:
  53:Core/Src/hmi.c ****   }
  54:Core/Src/hmi.c **** 
  55:Core/Src/hmi.c ****   if((PBpressed & PB_RUN) && (info->state != HMI_State_Stop)){
 196              		.loc 1 55 3 is_stmt 1 view .LVU62
 197              		.loc 1 55 5 is_stmt 0 view .LVU63
 198 0090 15F0400F 		tst	r5, #64
 199 0094 01D0     		beq	.L12
 200              		.loc 1 55 35 discriminator 1 view .LVU64
 201 0096 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 202              		.loc 1 55 27 discriminator 1 view .LVU65
 203 0098 ABB9     		cbnz	r3, .L17
 204              	.L12:
  56:Core/Src/hmi.c ****     CNC_Stop(info);
  57:Core/Src/hmi.c ****     info->state = pause_mask ? HMI_State_Pause : HMI_State_Stop;
  58:Core/Src/hmi.c ****   }
  59:Core/Src/hmi.c **** 
  60:Core/Src/hmi.c ****   if((~newPushbuttons & PB_RUN) && !HAL_GPIO_ReadPin(SWSTOP_GPIO_Port, SWSTOP_Pin)){
 205              		.loc 1 60 3 is_stmt 1 view .LVU66
 206              		.loc 1 60 5 is_stmt 0 view .LVU67
 207 009a 16F0400F 		tst	r6, #64
 208 009e 18D0     		beq	.L18
 209              	.L13:
  61:Core/Src/hmi.c ****     info->cnt1++;
  62:Core/Src/hmi.c ****     if(info->cnt1 > 20) {
  63:Core/Src/hmi.c ****       info->state = HMI_State_Run;
  64:Core/Src/hmi.c ****       info->update = true;
  65:Core/Src/hmi.c ****       info->cnt2 = 10;
  66:Core/Src/hmi.c ****       info->cnt1 = 0;
  67:Core/Src/hmi.c ****     }
  68:Core/Src/hmi.c ****   } 
  69:Core/Src/hmi.c ****   else {
  70:Core/Src/hmi.c ****   info->cnt1 = 0;
 210              		.loc 1 70 3 is_stmt 1 view .LVU68
 211              		.loc 1 70 14 is_stmt 0 view .LVU69
 212 00a0 0023     		movs	r3, #0
 213 00a2 84F83330 		strb	r3, [r4, #51]
 214              	.L14:
  71:Core/Src/hmi.c ****   }
  72:Core/Src/hmi.c **** 
  73:Core/Src/hmi.c ****   info->pushbuttons = newPushbuttons;
 215              		.loc 1 73 3 is_stmt 1 view .LVU70
ARM GAS  /tmp/ccKBAikY.s 			page 6


 216              		.loc 1 73 21 is_stmt 0 view .LVU71
 217 00a6 84F83C60 		strb	r6, [r4, #60]
  74:Core/Src/hmi.c **** }
 218              		.loc 1 74 1 view .LVU72
 219 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 220              	.LVL5:
 221              	.L16:
  32:Core/Src/hmi.c ****   }
 222              		.loc 1 32 5 is_stmt 1 view .LVU73
 223 00ae 2046     		mov	r0, r4
 224              	.LVL6:
  32:Core/Src/hmi.c ****   }
 225              		.loc 1 32 5 is_stmt 0 view .LVU74
 226 00b0 FFF7FEFF 		bl	CNC_Stop
 227              	.LVL7:
 228 00b4 D0E7     		b	.L7
 229              	.L10:
  47:Core/Src/hmi.c ****       info->P2.y = info->pos.y;
 230              		.loc 1 47 7 is_stmt 1 view .LVU75
  47:Core/Src/hmi.c ****       info->P2.y = info->pos.y;
 231              		.loc 1 47 29 is_stmt 0 view .LVU76
 232 00b6 6368     		ldr	r3, [r4, #4]
  47:Core/Src/hmi.c ****       info->P2.y = info->pos.y;
 233              		.loc 1 47 18 view .LVU77
 234 00b8 A362     		str	r3, [r4, #40]
  48:Core/Src/hmi.c ****       info->P2set = true;
 235              		.loc 1 48 7 is_stmt 1 view .LVU78
  48:Core/Src/hmi.c ****       info->P2set = true;
 236              		.loc 1 48 29 is_stmt 0 view .LVU79
 237 00ba A368     		ldr	r3, [r4, #8]
  48:Core/Src/hmi.c ****       info->P2set = true;
 238              		.loc 1 48 18 view .LVU80
 239 00bc E362     		str	r3, [r4, #44]
  49:Core/Src/hmi.c ****     }
 240              		.loc 1 49 7 is_stmt 1 view .LVU81
  49:Core/Src/hmi.c ****     }
 241              		.loc 1 49 19 is_stmt 0 view .LVU82
 242 00be 0123     		movs	r3, #1
 243 00c0 84F83130 		strb	r3, [r4, #49]
 244 00c4 E1E7     		b	.L11
 245              	.L17:
  56:Core/Src/hmi.c ****     info->state = pause_mask ? HMI_State_Pause : HMI_State_Stop;
 246              		.loc 1 56 5 is_stmt 1 view .LVU83
 247 00c6 2046     		mov	r0, r4
 248 00c8 FFF7FEFF 		bl	CNC_Stop
 249              	.LVL8:
  57:Core/Src/hmi.c ****   }
 250              		.loc 1 57 5 view .LVU84
  57:Core/Src/hmi.c ****   }
 251              		.loc 1 57 17 is_stmt 0 view .LVU85
 252 00cc 84F80180 		strb	r8, [r4, #1]
 253 00d0 E3E7     		b	.L12
 254              	.L18:
  60:Core/Src/hmi.c ****     info->cnt1++;
 255              		.loc 1 60 37 discriminator 1 view .LVU86
 256 00d2 4021     		movs	r1, #64
 257 00d4 4FF09040 		mov	r0, #1207959552
ARM GAS  /tmp/ccKBAikY.s 			page 7


 258 00d8 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 259              	.LVL9:
  60:Core/Src/hmi.c ****     info->cnt1++;
 260              		.loc 1 60 33 discriminator 1 view .LVU87
 261 00dc 0028     		cmp	r0, #0
 262 00de DFD1     		bne	.L13
  61:Core/Src/hmi.c ****     if(info->cnt1 > 20) {
 263              		.loc 1 61 5 is_stmt 1 view .LVU88
  61:Core/Src/hmi.c ****     if(info->cnt1 > 20) {
 264              		.loc 1 61 9 is_stmt 0 view .LVU89
 265 00e0 94F83330 		ldrb	r3, [r4, #51]	@ zero_extendqisi2
  61:Core/Src/hmi.c ****     if(info->cnt1 > 20) {
 266              		.loc 1 61 15 view .LVU90
 267 00e4 0133     		adds	r3, r3, #1
 268 00e6 DBB2     		uxtb	r3, r3
 269 00e8 84F83330 		strb	r3, [r4, #51]
  62:Core/Src/hmi.c ****       info->state = HMI_State_Run;
 270              		.loc 1 62 5 is_stmt 1 view .LVU91
  62:Core/Src/hmi.c ****       info->state = HMI_State_Run;
 271              		.loc 1 62 7 is_stmt 0 view .LVU92
 272 00ec 142B     		cmp	r3, #20
 273 00ee DAD9     		bls	.L14
  63:Core/Src/hmi.c ****       info->update = true;
 274              		.loc 1 63 7 is_stmt 1 view .LVU93
  63:Core/Src/hmi.c ****       info->update = true;
 275              		.loc 1 63 19 is_stmt 0 view .LVU94
 276 00f0 0223     		movs	r3, #2
 277 00f2 6370     		strb	r3, [r4, #1]
  64:Core/Src/hmi.c ****       info->cnt2 = 10;
 278              		.loc 1 64 7 is_stmt 1 view .LVU95
  64:Core/Src/hmi.c ****       info->cnt2 = 10;
 279              		.loc 1 64 20 is_stmt 0 view .LVU96
 280 00f4 0123     		movs	r3, #1
 281 00f6 84F83530 		strb	r3, [r4, #53]
  65:Core/Src/hmi.c ****       info->cnt1 = 0;
 282              		.loc 1 65 7 is_stmt 1 view .LVU97
  65:Core/Src/hmi.c ****       info->cnt1 = 0;
 283              		.loc 1 65 18 is_stmt 0 view .LVU98
 284 00fa 0A23     		movs	r3, #10
 285 00fc 84F83430 		strb	r3, [r4, #52]
  66:Core/Src/hmi.c ****     }
 286              		.loc 1 66 7 is_stmt 1 view .LVU99
  66:Core/Src/hmi.c ****     }
 287              		.loc 1 66 18 is_stmt 0 view .LVU100
 288 0100 0023     		movs	r3, #0
 289 0102 84F83330 		strb	r3, [r4, #51]
 290 0106 CEE7     		b	.L14
 291              		.cfi_endproc
 292              	.LFE292:
 294              		.section	.rodata.HMI_Update.str1.4,"aMS",%progbits,1
 295              		.align	2
 296              	.LC0:
 297 0000 593A2025 		.ascii	"Y: %05lumm   P1\333\000"
 297      30356C75 
 297      6D6D2020 
 297      205031DB 
 297      00
ARM GAS  /tmp/ccKBAikY.s 			page 8


 298 0011 000000   		.align	2
 299              	.LC1:
 300 0014 593A203F 		.ascii	"Y: ???\000"
 300      3F3F00
 301 001b 00       		.align	2
 302              	.LC2:
 303 001c 583A2025 		.ascii	"X: %05lumm   P2\333\000"
 303      30356C75 
 303      6D6D2020 
 303      205032DB 
 303      00
 304 002d 000000   		.align	2
 305              	.LC3:
 306 0030 583A203F 		.ascii	"X: ???\000"
 306      3F3F00
 307              		.section	.text.HMI_Update,"ax",%progbits
 308              		.align	1
 309              		.global	HMI_Update
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	HMI_Update:
 315              	.LVL10:
 316              	.LFB293:
  75:Core/Src/hmi.c **** 
  76:Core/Src/hmi.c **** void HMI_Update(HMI_info_t* const info){
 317              		.loc 1 76 40 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 24
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		.loc 1 76 40 is_stmt 0 view .LVU102
 322 0000 10B5     		push	{r4, lr}
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326 0002 86B0     		sub	sp, sp, #24
 327              		.cfi_def_cfa_offset 32
 328 0004 0446     		mov	r4, r0
  77:Core/Src/hmi.c ****   switch (info->mode) {
 329              		.loc 1 77 3 is_stmt 1 view .LVU103
 330              		.loc 1 77 15 is_stmt 0 view .LVU104
 331 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 332              		.loc 1 77 3 view .LVU105
 333 0008 032B     		cmp	r3, #3
 334 000a 07D8     		bhi	.L20
 335 000c DFE803F0 		tbb	[pc, r3]
 336              	.L22:
 337 0010 02       		.byte	(.L25-.L22)/2
 338 0011 18       		.byte	(.L24-.L22)/2
 339 0012 1D       		.byte	(.L23-.L22)/2
 340 0013 22       		.byte	(.L21-.L22)/2
 341              		.p2align 1
 342              	.L25:
  78:Core/Src/hmi.c ****   case  HMI_Mode_Zero:
  79:Core/Src/hmi.c ****     __BP_Control(info, (PB_STOP | PB_RUN | PB_MODE | PB_SET | PB_JOY), false);
 343              		.loc 1 79 5 is_stmt 1 view .LVU106
 344 0014 0022     		movs	r2, #0
ARM GAS  /tmp/ccKBAikY.s 			page 9


 345 0016 5B21     		movs	r1, #91
 346 0018 FFF7FEFF 		bl	__BP_Control
 347              	.LVL11:
  80:Core/Src/hmi.c ****   break;
 348              		.loc 1 80 3 view .LVU107
 349              	.L20:
  81:Core/Src/hmi.c **** 
  82:Core/Src/hmi.c ****   case  HMI_Mode_Man:
  83:Core/Src/hmi.c ****     __BP_Control(info, (PB_STOP | PB_RUN | PB_MODE | PB_SET | PB_JOY), false);
  84:Core/Src/hmi.c **** 
  85:Core/Src/hmi.c ****   
  86:Core/Src/hmi.c ****   break;
  87:Core/Src/hmi.c **** 
  88:Core/Src/hmi.c ****   case  HMI_Mode_Face:
  89:Core/Src/hmi.c ****     __BP_Control(info, (PB_STOP | PB_RUN | PB_MODE | PB_SET | PB_JOY), true);
  90:Core/Src/hmi.c ****   break; 
  91:Core/Src/hmi.c **** 
  92:Core/Src/hmi.c ****   case  HMI_Mode_Ser:
  93:Core/Src/hmi.c ****     __BP_Control(info, (PB_STOP | PB_RUN | PB_MODE | PB_SET | PB_JOY), true);
  94:Core/Src/hmi.c ****   break;
  95:Core/Src/hmi.c ****   }
  96:Core/Src/hmi.c **** 
  97:Core/Src/hmi.c ****   if(info->cnt2 != 0){
 350              		.loc 1 97 3 view .LVU108
 351              		.loc 1 97 10 is_stmt 0 view .LVU109
 352 001c 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 353              		.loc 1 97 5 view .LVU110
 354 0020 002B     		cmp	r3, #0
 355 0022 3ED0     		beq	.L26
  98:Core/Src/hmi.c ****     info->cnt2--;
 356              		.loc 1 98 5 is_stmt 1 view .LVU111
 357              		.loc 1 98 15 is_stmt 0 view .LVU112
 358 0024 013B     		subs	r3, r3, #1
 359 0026 84F83430 		strb	r3, [r4, #52]
  99:Core/Src/hmi.c ****     if(info->update){
 360              		.loc 1 99 5 is_stmt 1 view .LVU113
 361              		.loc 1 99 12 is_stmt 0 view .LVU114
 362 002a 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 363              		.loc 1 99 7 view .LVU115
 364 002e B3B9     		cbnz	r3, .L41
 365              	.L27:
 100:Core/Src/hmi.c ****       char textStr[17];
 101:Core/Src/hmi.c ****       sprintf(textStr, ModeNames[info->mode]);
 102:Core/Src/hmi.c ****       setCursor(0, 0);
 103:Core/Src/hmi.c ****       writeLCD(textStr);
 104:Core/Src/hmi.c ****       sprintf(textStr, StateNames[info->state]);
 105:Core/Src/hmi.c ****       setCursor(0, 1);
 106:Core/Src/hmi.c ****       writeLCD(textStr);
 107:Core/Src/hmi.c ****       info->update = false;
 108:Core/Src/hmi.c ****     }
 109:Core/Src/hmi.c ****     if(info->cnt2 == 0) info->update = true;
 366              		.loc 1 109 5 is_stmt 1 view .LVU116
 367              		.loc 1 109 12 is_stmt 0 view .LVU117
 368 0030 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 369              		.loc 1 109 7 view .LVU118
 370 0034 13B9     		cbnz	r3, .L19
 371              		.loc 1 109 25 is_stmt 1 discriminator 1 view .LVU119
ARM GAS  /tmp/ccKBAikY.s 			page 10


 372              		.loc 1 109 38 is_stmt 0 discriminator 1 view .LVU120
 373 0036 0123     		movs	r3, #1
 374 0038 84F83530 		strb	r3, [r4, #53]
 375              	.L19:
 110:Core/Src/hmi.c ****   } 
 111:Core/Src/hmi.c ****   else {
 112:Core/Src/hmi.c ****     if(info->update){
 113:Core/Src/hmi.c ****       char textStr[17];
 114:Core/Src/hmi.c **** 
 115:Core/Src/hmi.c ****       if(info->zeroed.y) {
 116:Core/Src/hmi.c ****         sprintf(textStr, "Y: %05lumm   P1\xdb", info->pos.y/stepY_01mm);
 117:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 118:Core/Src/hmi.c ****         if(info->P1set)
 119:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 120:Core/Src/hmi.c ****         if(info->Psel)
 121:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 122:Core/Src/hmi.c ****         textStr[7] = '.';
 123:Core/Src/hmi.c ****       }
 124:Core/Src/hmi.c ****       else
 125:Core/Src/hmi.c ****         sprintf(textStr, "Y: ???");
 126:Core/Src/hmi.c ****       if(!info->runX && !info->runY){
 127:Core/Src/hmi.c ****         setCursor(0, 0);
 128:Core/Src/hmi.c ****         writeLCD(textStr);
 129:Core/Src/hmi.c ****       }
 130:Core/Src/hmi.c **** 
 131:Core/Src/hmi.c ****       if(info->zeroed.x){
 132:Core/Src/hmi.c ****         sprintf(textStr, "X: %05lumm   P2\xdb", info->pos.x/stepY_01mm);
 133:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 134:Core/Src/hmi.c ****         if(info->P2set)
 135:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 136:Core/Src/hmi.c ****         if(!info->Psel)
 137:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 138:Core/Src/hmi.c ****         textStr[7] = '.';
 139:Core/Src/hmi.c ****       }
 140:Core/Src/hmi.c ****       else
 141:Core/Src/hmi.c ****         sprintf(textStr, "X: ???");
 142:Core/Src/hmi.c ****       if(!info->runX && !info->runY){
 143:Core/Src/hmi.c ****         setCursor(0, 1);
 144:Core/Src/hmi.c ****         writeLCD(textStr);
 145:Core/Src/hmi.c ****       }
 146:Core/Src/hmi.c ****       info->update = false;
 147:Core/Src/hmi.c ****     }
 148:Core/Src/hmi.c ****   }
 149:Core/Src/hmi.c **** }
 376              		.loc 1 149 1 view .LVU121
 377 003c 06B0     		add	sp, sp, #24
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 8
 380              		@ sp needed
 381 003e 10BD     		pop	{r4, pc}
 382              	.LVL12:
 383              	.L24:
 384              		.cfi_restore_state
  83:Core/Src/hmi.c **** 
 385              		.loc 1 83 5 is_stmt 1 view .LVU122
 386 0040 0022     		movs	r2, #0
 387 0042 5B21     		movs	r1, #91
ARM GAS  /tmp/ccKBAikY.s 			page 11


 388 0044 FFF7FEFF 		bl	__BP_Control
 389              	.LVL13:
  86:Core/Src/hmi.c **** 
 390              		.loc 1 86 3 view .LVU123
 391 0048 E8E7     		b	.L20
 392              	.LVL14:
 393              	.L23:
  89:Core/Src/hmi.c ****   break; 
 394              		.loc 1 89 5 view .LVU124
 395 004a 0122     		movs	r2, #1
 396 004c 5B21     		movs	r1, #91
 397 004e FFF7FEFF 		bl	__BP_Control
 398              	.LVL15:
  90:Core/Src/hmi.c **** 
 399              		.loc 1 90 3 view .LVU125
 400 0052 E3E7     		b	.L20
 401              	.LVL16:
 402              	.L21:
  93:Core/Src/hmi.c ****   break;
 403              		.loc 1 93 5 view .LVU126
 404 0054 0122     		movs	r2, #1
 405 0056 5B21     		movs	r1, #91
 406 0058 FFF7FEFF 		bl	__BP_Control
 407              	.LVL17:
  94:Core/Src/hmi.c ****   }
 408              		.loc 1 94 3 view .LVU127
 409 005c DEE7     		b	.L20
 410              	.L41:
 411              	.LBB2:
 100:Core/Src/hmi.c ****       sprintf(textStr, ModeNames[info->mode]);
 412              		.loc 1 100 7 view .LVU128
 101:Core/Src/hmi.c ****       setCursor(0, 0);
 413              		.loc 1 101 7 view .LVU129
 101:Core/Src/hmi.c ****       setCursor(0, 0);
 414              		.loc 1 101 38 is_stmt 0 view .LVU130
 415 005e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 101:Core/Src/hmi.c ****       setCursor(0, 0);
 416              		.loc 1 101 33 view .LVU131
 417 0060 01EB0111 		add	r1, r1, r1, lsl #4
 101:Core/Src/hmi.c ****       setCursor(0, 0);
 418              		.loc 1 101 7 view .LVU132
 419 0064 464B     		ldr	r3, .L44
 420 0066 1944     		add	r1, r1, r3
 421 0068 01A8     		add	r0, sp, #4
 422 006a FFF7FEFF 		bl	sprintf
 423              	.LVL18:
 102:Core/Src/hmi.c ****       writeLCD(textStr);
 424              		.loc 1 102 7 is_stmt 1 view .LVU133
 425 006e 0021     		movs	r1, #0
 426 0070 0846     		mov	r0, r1
 427 0072 FFF7FEFF 		bl	setCursor
 428              	.LVL19:
 103:Core/Src/hmi.c ****       sprintf(textStr, StateNames[info->state]);
 429              		.loc 1 103 7 view .LVU134
 430 0076 01A8     		add	r0, sp, #4
 431 0078 FFF7FEFF 		bl	writeLCD
 432              	.LVL20:
ARM GAS  /tmp/ccKBAikY.s 			page 12


 104:Core/Src/hmi.c ****       setCursor(0, 1);
 433              		.loc 1 104 7 view .LVU135
 104:Core/Src/hmi.c ****       setCursor(0, 1);
 434              		.loc 1 104 39 is_stmt 0 view .LVU136
 435 007c 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 104:Core/Src/hmi.c ****       setCursor(0, 1);
 436              		.loc 1 104 34 view .LVU137
 437 007e 01EB0111 		add	r1, r1, r1, lsl #4
 104:Core/Src/hmi.c ****       setCursor(0, 1);
 438              		.loc 1 104 7 view .LVU138
 439 0082 404B     		ldr	r3, .L44+4
 440 0084 1944     		add	r1, r1, r3
 441 0086 01A8     		add	r0, sp, #4
 442 0088 FFF7FEFF 		bl	sprintf
 443              	.LVL21:
 105:Core/Src/hmi.c ****       writeLCD(textStr);
 444              		.loc 1 105 7 is_stmt 1 view .LVU139
 445 008c 0121     		movs	r1, #1
 446 008e 0020     		movs	r0, #0
 447 0090 FFF7FEFF 		bl	setCursor
 448              	.LVL22:
 106:Core/Src/hmi.c ****       info->update = false;
 449              		.loc 1 106 7 view .LVU140
 450 0094 01A8     		add	r0, sp, #4
 451 0096 FFF7FEFF 		bl	writeLCD
 452              	.LVL23:
 107:Core/Src/hmi.c ****     }
 453              		.loc 1 107 7 view .LVU141
 107:Core/Src/hmi.c ****     }
 454              		.loc 1 107 20 is_stmt 0 view .LVU142
 455 009a 0023     		movs	r3, #0
 456 009c 84F83530 		strb	r3, [r4, #53]
 457 00a0 C6E7     		b	.L27
 458              	.L26:
 107:Core/Src/hmi.c ****     }
 459              		.loc 1 107 20 view .LVU143
 460              	.LBE2:
 112:Core/Src/hmi.c ****       char textStr[17];
 461              		.loc 1 112 5 is_stmt 1 view .LVU144
 112:Core/Src/hmi.c ****       char textStr[17];
 462              		.loc 1 112 12 is_stmt 0 view .LVU145
 463 00a2 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 112:Core/Src/hmi.c ****       char textStr[17];
 464              		.loc 1 112 7 view .LVU146
 465 00a6 002B     		cmp	r3, #0
 466 00a8 C8D0     		beq	.L19
 467              	.LBB3:
 113:Core/Src/hmi.c **** 
 468              		.loc 1 113 7 is_stmt 1 view .LVU147
 115:Core/Src/hmi.c ****         sprintf(textStr, "Y: %05lumm   P1\xdb", info->pos.y/stepY_01mm);
 469              		.loc 1 115 7 view .LVU148
 115:Core/Src/hmi.c ****         sprintf(textStr, "Y: %05lumm   P1\xdb", info->pos.y/stepY_01mm);
 470              		.loc 1 115 22 is_stmt 0 view .LVU149
 471 00aa 94F83B30 		ldrb	r3, [r4, #59]	@ zero_extendqisi2
 115:Core/Src/hmi.c ****         sprintf(textStr, "Y: %05lumm   P1\xdb", info->pos.y/stepY_01mm);
 472              		.loc 1 115 9 view .LVU150
 473 00ae 002B     		cmp	r3, #0
ARM GAS  /tmp/ccKBAikY.s 			page 13


 474 00b0 42D0     		beq	.L29
 116:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 475              		.loc 1 116 9 is_stmt 1 view .LVU151
 116:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 476              		.loc 1 116 58 is_stmt 0 view .LVU152
 477 00b2 A268     		ldr	r2, [r4, #8]
 116:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 478              		.loc 1 116 9 view .LVU153
 479 00b4 D208     		lsrs	r2, r2, #3
 480 00b6 3449     		ldr	r1, .L44+8
 481 00b8 01A8     		add	r0, sp, #4
 482 00ba FFF7FEFF 		bl	sprintf
 483              	.LVL24:
 117:Core/Src/hmi.c ****         if(info->P1set)
 484              		.loc 1 117 9 is_stmt 1 view .LVU154
 485 00be DDF80B30 		ldr	r3, [sp, #11]	@ unaligned
 486 00c2 0393     		str	r3, [sp, #12]
 118:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 487              		.loc 1 118 9 view .LVU155
 118:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 488              		.loc 1 118 16 is_stmt 0 view .LVU156
 489 00c4 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 118:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 490              		.loc 1 118 11 view .LVU157
 491 00c8 13B1     		cbz	r3, .L30
 119:Core/Src/hmi.c ****         if(info->Psel)
 492              		.loc 1 119 11 is_stmt 1 view .LVU158
 119:Core/Src/hmi.c ****         if(info->Psel)
 493              		.loc 1 119 23 is_stmt 0 view .LVU159
 494 00ca FF23     		movs	r3, #255
 495 00cc 8DF81330 		strb	r3, [sp, #19]
 496              	.L30:
 120:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 497              		.loc 1 120 9 is_stmt 1 view .LVU160
 120:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 498              		.loc 1 120 16 is_stmt 0 view .LVU161
 499 00d0 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 120:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 500              		.loc 1 120 11 view .LVU162
 501 00d4 13B1     		cbz	r3, .L31
 121:Core/Src/hmi.c ****         textStr[7] = '.';
 502              		.loc 1 121 11 is_stmt 1 view .LVU163
 121:Core/Src/hmi.c ****         textStr[7] = '.';
 503              		.loc 1 121 23 is_stmt 0 view .LVU164
 504 00d6 7E23     		movs	r3, #126
 505 00d8 8DF81030 		strb	r3, [sp, #16]
 506              	.L31:
 122:Core/Src/hmi.c ****       }
 507              		.loc 1 122 9 is_stmt 1 view .LVU165
 122:Core/Src/hmi.c ****       }
 508              		.loc 1 122 20 is_stmt 0 view .LVU166
 509 00dc 2E23     		movs	r3, #46
 510 00de 8DF80B30 		strb	r3, [sp, #11]
 511              	.L32:
 126:Core/Src/hmi.c ****         setCursor(0, 0);
 512              		.loc 1 126 7 is_stmt 1 view .LVU167
 126:Core/Src/hmi.c ****         setCursor(0, 0);
ARM GAS  /tmp/ccKBAikY.s 			page 14


 513              		.loc 1 126 15 is_stmt 0 view .LVU168
 514 00e2 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 126:Core/Src/hmi.c ****         setCursor(0, 0);
 515              		.loc 1 126 9 view .LVU169
 516 00e6 13B9     		cbnz	r3, .L33
 126:Core/Src/hmi.c ****         setCursor(0, 0);
 517              		.loc 1 126 30 discriminator 1 view .LVU170
 518 00e8 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 126:Core/Src/hmi.c ****         setCursor(0, 0);
 519              		.loc 1 126 22 discriminator 1 view .LVU171
 520 00ec 73B3     		cbz	r3, .L42
 521              	.L33:
 131:Core/Src/hmi.c ****         sprintf(textStr, "X: %05lumm   P2\xdb", info->pos.x/stepY_01mm);
 522              		.loc 1 131 7 is_stmt 1 view .LVU172
 131:Core/Src/hmi.c ****         sprintf(textStr, "X: %05lumm   P2\xdb", info->pos.x/stepY_01mm);
 523              		.loc 1 131 22 is_stmt 0 view .LVU173
 524 00ee 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 131:Core/Src/hmi.c ****         sprintf(textStr, "X: %05lumm   P2\xdb", info->pos.x/stepY_01mm);
 525              		.loc 1 131 9 view .LVU174
 526 00f2 9BB3     		cbz	r3, .L34
 132:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 527              		.loc 1 132 9 is_stmt 1 view .LVU175
 132:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 528              		.loc 1 132 58 is_stmt 0 view .LVU176
 529 00f4 6268     		ldr	r2, [r4, #4]
 132:Core/Src/hmi.c ****         memmove(textStr+8, textStr+7, 4);
 530              		.loc 1 132 9 view .LVU177
 531 00f6 D208     		lsrs	r2, r2, #3
 532 00f8 2449     		ldr	r1, .L44+12
 533 00fa 01A8     		add	r0, sp, #4
 534 00fc FFF7FEFF 		bl	sprintf
 535              	.LVL25:
 133:Core/Src/hmi.c ****         if(info->P2set)
 536              		.loc 1 133 9 is_stmt 1 view .LVU178
 537 0100 DDF80B30 		ldr	r3, [sp, #11]	@ unaligned
 538 0104 0393     		str	r3, [sp, #12]
 134:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 539              		.loc 1 134 9 view .LVU179
 134:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 540              		.loc 1 134 16 is_stmt 0 view .LVU180
 541 0106 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 134:Core/Src/hmi.c ****           textStr[15] = 0xffU;
 542              		.loc 1 134 11 view .LVU181
 543 010a 13B1     		cbz	r3, .L35
 135:Core/Src/hmi.c ****         if(!info->Psel)
 544              		.loc 1 135 11 is_stmt 1 view .LVU182
 135:Core/Src/hmi.c ****         if(!info->Psel)
 545              		.loc 1 135 23 is_stmt 0 view .LVU183
 546 010c FF23     		movs	r3, #255
 547 010e 8DF81330 		strb	r3, [sp, #19]
 548              	.L35:
 136:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 549              		.loc 1 136 9 is_stmt 1 view .LVU184
 136:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
 550              		.loc 1 136 17 is_stmt 0 view .LVU185
 551 0112 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 136:Core/Src/hmi.c ****           textStr[12] = 0x7eU;
ARM GAS  /tmp/ccKBAikY.s 			page 15


 552              		.loc 1 136 11 view .LVU186
 553 0116 13B9     		cbnz	r3, .L36
 137:Core/Src/hmi.c ****         textStr[7] = '.';
 554              		.loc 1 137 11 is_stmt 1 view .LVU187
 137:Core/Src/hmi.c ****         textStr[7] = '.';
 555              		.loc 1 137 23 is_stmt 0 view .LVU188
 556 0118 7E23     		movs	r3, #126
 557 011a 8DF81030 		strb	r3, [sp, #16]
 558              	.L36:
 138:Core/Src/hmi.c ****       }
 559              		.loc 1 138 9 is_stmt 1 view .LVU189
 138:Core/Src/hmi.c ****       }
 560              		.loc 1 138 20 is_stmt 0 view .LVU190
 561 011e 2E23     		movs	r3, #46
 562 0120 8DF80B30 		strb	r3, [sp, #11]
 563              	.L37:
 142:Core/Src/hmi.c ****         setCursor(0, 1);
 564              		.loc 1 142 7 is_stmt 1 view .LVU191
 142:Core/Src/hmi.c ****         setCursor(0, 1);
 565              		.loc 1 142 15 is_stmt 0 view .LVU192
 566 0124 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 142:Core/Src/hmi.c ****         setCursor(0, 1);
 567              		.loc 1 142 9 view .LVU193
 568 0128 13B9     		cbnz	r3, .L38
 142:Core/Src/hmi.c ****         setCursor(0, 1);
 569              		.loc 1 142 30 discriminator 1 view .LVU194
 570 012a 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 142:Core/Src/hmi.c ****         setCursor(0, 1);
 571              		.loc 1 142 22 discriminator 1 view .LVU195
 572 012e FBB1     		cbz	r3, .L43
 573              	.L38:
 146:Core/Src/hmi.c ****     }
 574              		.loc 1 146 7 is_stmt 1 view .LVU196
 146:Core/Src/hmi.c ****     }
 575              		.loc 1 146 20 is_stmt 0 view .LVU197
 576 0130 0023     		movs	r3, #0
 577 0132 84F83530 		strb	r3, [r4, #53]
 578              	.LBE3:
 579              		.loc 1 149 1 view .LVU198
 580 0136 81E7     		b	.L19
 581              	.L29:
 582              	.LBB4:
 125:Core/Src/hmi.c ****       if(!info->runX && !info->runY){
 583              		.loc 1 125 9 is_stmt 1 view .LVU199
 584 0138 154B     		ldr	r3, .L44+16
 585 013a 93E80300 		ldm	r3, {r0, r1}
 586 013e 0190     		str	r0, [sp, #4]
 587 0140 ADF80810 		strh	r1, [sp, #8]	@ movhi
 588 0144 090C     		lsrs	r1, r1, #16
 589 0146 8DF80A10 		strb	r1, [sp, #10]
 590 014a CAE7     		b	.L32
 591              	.L42:
 127:Core/Src/hmi.c ****         writeLCD(textStr);
 592              		.loc 1 127 9 view .LVU200
 593 014c 0021     		movs	r1, #0
 594 014e 0846     		mov	r0, r1
 595 0150 FFF7FEFF 		bl	setCursor
ARM GAS  /tmp/ccKBAikY.s 			page 16


 596              	.LVL26:
 128:Core/Src/hmi.c ****       }
 597              		.loc 1 128 9 view .LVU201
 598 0154 01A8     		add	r0, sp, #4
 599 0156 FFF7FEFF 		bl	writeLCD
 600              	.LVL27:
 601 015a C8E7     		b	.L33
 602              	.L34:
 141:Core/Src/hmi.c ****       if(!info->runX && !info->runY){
 603              		.loc 1 141 9 view .LVU202
 604 015c 0D4B     		ldr	r3, .L44+20
 605 015e 93E80300 		ldm	r3, {r0, r1}
 606 0162 0190     		str	r0, [sp, #4]
 607 0164 ADF80810 		strh	r1, [sp, #8]	@ movhi
 608 0168 090C     		lsrs	r1, r1, #16
 609 016a 8DF80A10 		strb	r1, [sp, #10]
 610 016e D9E7     		b	.L37
 611              	.L43:
 143:Core/Src/hmi.c ****         writeLCD(textStr);
 612              		.loc 1 143 9 view .LVU203
 613 0170 0121     		movs	r1, #1
 614 0172 0020     		movs	r0, #0
 615 0174 FFF7FEFF 		bl	setCursor
 616              	.LVL28:
 144:Core/Src/hmi.c ****       }
 617              		.loc 1 144 9 view .LVU204
 618 0178 01A8     		add	r0, sp, #4
 619 017a FFF7FEFF 		bl	writeLCD
 620              	.LVL29:
 621 017e D7E7     		b	.L38
 622              	.L45:
 623              		.align	2
 624              	.L44:
 625 0180 00000000 		.word	.LANCHOR0
 626 0184 00000000 		.word	.LANCHOR1
 627 0188 00000000 		.word	.LC0
 628 018c 1C000000 		.word	.LC2
 629 0190 14000000 		.word	.LC1
 630 0194 30000000 		.word	.LC3
 631              	.LBE4:
 632              		.cfi_endproc
 633              	.LFE293:
 635              		.section	.data.ModeNames,"aw"
 636              		.align	2
 637              		.set	.LANCHOR0,. + 0
 640              	ModeNames:
 641 0000 415A5A45 		.ascii	"AZZERAMENTO     \000"
 641      52414D45 
 641      4E544F20 
 641      20202020 
 641      00
 642 0011 4D414E55 		.ascii	"MANUALE         \000"
 642      414C4520 
 642      20202020 
 642      20202020 
 642      00
 643 0022 53504941 		.ascii	"SPIANATURA      \000"
ARM GAS  /tmp/ccKBAikY.s 			page 17


 643      4E415455 
 643      52412020 
 643      20202020 
 643      00
 644 0033 434F4D50 		.ascii	"COMPUTER        \000"
 644      55544552 
 644      20202020 
 644      20202020 
 644      00
 645              		.section	.data.StateNames,"aw"
 646              		.align	2
 647              		.set	.LANCHOR1,. + 0
 650              	StateNames:
 651 0000 53544F50 		.ascii	"STOP            \000"
 651      20202020 
 651      20202020 
 651      20202020 
 651      00
 652 0011 50415553 		.ascii	"PAUSE           \000"
 652      45202020 
 652      20202020 
 652      20202020 
 652      00
 653 0022 52554E20 		.ascii	"RUN             \000"
 653      20202020 
 653      20202020 
 653      20202020 
 653      00
 654 0033 00000000 		.space	17
 654      00000000 
 654      00000000 
 654      00000000 
 654      00
 655              		.text
 656              	.Letext0:
 657              		.file 2 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 658              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 659              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 660              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 661              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 662              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 663              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 664              		.file 9 "Core/Inc/cnc_info.h"
 665              		.file 10 "Core/Inc/lcd.h"
 666              		.file 11 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 667              		.file 12 "Core/Inc/cnc_core.h"
ARM GAS  /tmp/ccKBAikY.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 hmi.c
     /tmp/ccKBAikY.s:20     .text.__Read_Pushbuttons:0000000000000000 $t
     /tmp/ccKBAikY.s:26     .text.__Read_Pushbuttons:0000000000000000 __Read_Pushbuttons
     /tmp/ccKBAikY.s:52     .text.__Read_Pushbuttons:0000000000000018 $d
     /tmp/ccKBAikY.s:58     .text.__BP_Control:0000000000000000 $t
     /tmp/ccKBAikY.s:64     .text.__BP_Control:0000000000000000 __BP_Control
     /tmp/ccKBAikY.s:295    .rodata.HMI_Update.str1.4:0000000000000000 $d
     /tmp/ccKBAikY.s:308    .text.HMI_Update:0000000000000000 $t
     /tmp/ccKBAikY.s:314    .text.HMI_Update:0000000000000000 HMI_Update
     /tmp/ccKBAikY.s:337    .text.HMI_Update:0000000000000010 $d
     /tmp/ccKBAikY.s:341    .text.HMI_Update:0000000000000014 $t
     /tmp/ccKBAikY.s:625    .text.HMI_Update:0000000000000180 $d
     /tmp/ccKBAikY.s:636    .data.ModeNames:0000000000000000 $d
     /tmp/ccKBAikY.s:640    .data.ModeNames:0000000000000000 ModeNames
     /tmp/ccKBAikY.s:646    .data.StateNames:0000000000000000 $d
     /tmp/ccKBAikY.s:650    .data.StateNames:0000000000000000 StateNames

UNDEFINED SYMBOLS
CNC_Stop
HAL_GPIO_ReadPin
sprintf
setCursor
writeLCD
