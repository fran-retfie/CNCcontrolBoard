ARM GAS  /tmp/cc8mDt8o.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB296:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart1;
  47:Core/Src/main.c **** UART_HandleTypeDef huart2;
  48:Core/Src/main.c **** UART_HandleTypeDef huart3;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_ADC1_Init(void);
  59:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  60:Core/Src/main.c **** static void MX_TIM1_Init(void);
  61:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  62:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Configure the peripherals common clocks */
  95:Core/Src/main.c ****   PeriphCommonClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_ADC1_Init();
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 105:Core/Src/main.c ****   MX_TIM1_Init();
 106:Core/Src/main.c ****   MX_USART2_UART_Init();
 107:Core/Src/main.c ****   MX_USART3_UART_Init();
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END 2 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Infinite loop */
 113:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 114:Core/Src/main.c ****   while (1)
 115:Core/Src/main.c ****   {
 116:Core/Src/main.c ****     /* USER CODE END WHILE */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 119:Core/Src/main.c ****   }
 120:Core/Src/main.c ****   /* USER CODE END 3 */
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /**
 124:Core/Src/main.c ****   * @brief System Clock Configuration
 125:Core/Src/main.c ****   * @retval None
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c **** void SystemClock_Config(void)
 128:Core/Src/main.c **** {
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 145:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
ARM GAS  /tmp/cc8mDt8o.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /**
 168:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 169:Core/Src/main.c ****   * @retval None
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 172:Core/Src/main.c **** {
 173:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the peripherals clock
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_ADC;
 178:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 179:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 180:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 181:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 182:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 183:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 184:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 185:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 186:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 187:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 195:Core/Src/main.c ****   * @param None
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** static void MX_ADC1_Init(void)
 199:Core/Src/main.c **** {
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Common config
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   hadc1.Instance = ADC1;
 214:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 215:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 216:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 217:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 218:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 219:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 220:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 221:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 222:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 223:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 224:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 225:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 226:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 227:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 228:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /** Configure Regular Channel
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 236:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 237:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 238:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 239:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 240:Core/Src/main.c ****   sConfig.Offset = 0;
 241:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 253:Core/Src/main.c ****   * @param None
 254:Core/Src/main.c ****   * @retval None
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** static void MX_TIM1_Init(void)
 257:Core/Src/main.c **** {
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
ARM GAS  /tmp/cc8mDt8o.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 264:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 265:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 266:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 267:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 272:Core/Src/main.c ****   htim1.Instance = TIM1;
 273:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 274:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 275:Core/Src/main.c ****   htim1.Init.Period = 65535;
 276:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 277:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 278:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 279:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 284:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 293:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 294:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 295:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   sBreakInputConfig.Source = TIM_BREAKINPUTSOURCE_BKIN;
 300:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 301:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 302:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 307:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 308:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 310:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 311:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 312:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 313:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  /tmp/cc8mDt8o.s 			page 7


 317:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****     Error_Handler();
 320:Core/Src/main.c ****   }
 321:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 333:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 334:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 335:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 336:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 337:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 338:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 339:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 340:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 347:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /**
 352:Core/Src/main.c ****   * @brief USART1 Initialization Function
 353:Core/Src/main.c ****   * @param None
 354:Core/Src/main.c ****   * @retval None
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 366:Core/Src/main.c ****   huart1.Instance = USART1;
 367:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 368:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 369:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 370:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 371:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 372:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 373:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cc8mDt8o.s 			page 8


 374:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 375:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 376:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** }
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /**
 387:Core/Src/main.c ****   * @brief USART2 Initialization Function
 388:Core/Src/main.c ****   * @param None
 389:Core/Src/main.c ****   * @retval None
 390:Core/Src/main.c ****   */
 391:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 392:Core/Src/main.c **** {
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 401:Core/Src/main.c ****   huart2.Instance = USART2;
 402:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 403:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 404:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 405:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 406:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 407:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 408:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 409:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 410:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 411:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** }
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief USART3 Initialization Function
 423:Core/Src/main.c ****   * @param None
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 427:Core/Src/main.c **** {
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 430:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 436:Core/Src/main.c ****   huart3.Instance = USART3;
 437:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 438:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 439:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 440:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 441:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 442:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 443:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 444:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 445:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 446:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 447:Core/Src/main.c ****   {
 448:Core/Src/main.c ****     Error_Handler();
 449:Core/Src/main.c ****   }
 450:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief GPIO Initialization Function
 458:Core/Src/main.c ****   * @param None
 459:Core/Src/main.c ****   * @retval None
 460:Core/Src/main.c ****   */
 461:Core/Src/main.c **** static void MX_GPIO_Init(void)
 462:Core/Src/main.c **** {
  28              		.loc 1 462 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 8DB0     		sub	sp, sp, #52
  42              		.cfi_def_cfa_offset 80
 463:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 463 3 view .LVU1
  44              		.loc 1 463 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0794     		str	r4, [sp, #28]
  47 000a 0894     		str	r4, [sp, #32]
  48 000c 0994     		str	r4, [sp, #36]
  49 000e 0A94     		str	r4, [sp, #40]
  50 0010 0B94     		str	r4, [sp, #44]
 464:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 10


 465:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 466:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  51              		.loc 1 466 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 466 3 view .LVU4
  54              		.loc 1 466 3 view .LVU5
  55 0012 584B     		ldr	r3, .L3
  56 0014 DA6C     		ldr	r2, [r3, #76]
  57 0016 42F01002 		orr	r2, r2, #16
  58 001a DA64     		str	r2, [r3, #76]
  59              		.loc 1 466 3 view .LVU6
  60 001c DA6C     		ldr	r2, [r3, #76]
  61 001e 02F01002 		and	r2, r2, #16
  62 0022 0192     		str	r2, [sp, #4]
  63              		.loc 1 466 3 view .LVU7
  64 0024 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 466 3 view .LVU8
 467:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  67              		.loc 1 467 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 467 3 view .LVU10
  70              		.loc 1 467 3 view .LVU11
  71 0026 DA6C     		ldr	r2, [r3, #76]
  72 0028 42F00402 		orr	r2, r2, #4
  73 002c DA64     		str	r2, [r3, #76]
  74              		.loc 1 467 3 view .LVU12
  75 002e DA6C     		ldr	r2, [r3, #76]
  76 0030 02F00402 		and	r2, r2, #4
  77 0034 0292     		str	r2, [sp, #8]
  78              		.loc 1 467 3 view .LVU13
  79 0036 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 467 3 view .LVU14
 468:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  82              		.loc 1 468 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 468 3 view .LVU16
  85              		.loc 1 468 3 view .LVU17
  86 0038 DA6C     		ldr	r2, [r3, #76]
  87 003a 42F08002 		orr	r2, r2, #128
  88 003e DA64     		str	r2, [r3, #76]
  89              		.loc 1 468 3 view .LVU18
  90 0040 DA6C     		ldr	r2, [r3, #76]
  91 0042 02F08002 		and	r2, r2, #128
  92 0046 0392     		str	r2, [sp, #12]
  93              		.loc 1 468 3 view .LVU19
  94 0048 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 468 3 view .LVU20
 469:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  97              		.loc 1 469 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 469 3 view .LVU22
 100              		.loc 1 469 3 view .LVU23
 101 004a DA6C     		ldr	r2, [r3, #76]
 102 004c 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cc8mDt8o.s 			page 11


 103 0050 DA64     		str	r2, [r3, #76]
 104              		.loc 1 469 3 view .LVU24
 105 0052 DA6C     		ldr	r2, [r3, #76]
 106 0054 02F00102 		and	r2, r2, #1
 107 0058 0492     		str	r2, [sp, #16]
 108              		.loc 1 469 3 view .LVU25
 109 005a 049A     		ldr	r2, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 469 3 view .LVU26
 470:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 112              		.loc 1 470 3 view .LVU27
 113              	.LBB8:
 114              		.loc 1 470 3 view .LVU28
 115              		.loc 1 470 3 view .LVU29
 116 005c DA6C     		ldr	r2, [r3, #76]
 117 005e 42F00202 		orr	r2, r2, #2
 118 0062 DA64     		str	r2, [r3, #76]
 119              		.loc 1 470 3 view .LVU30
 120 0064 DA6C     		ldr	r2, [r3, #76]
 121 0066 02F00202 		and	r2, r2, #2
 122 006a 0592     		str	r2, [sp, #20]
 123              		.loc 1 470 3 view .LVU31
 124 006c 059A     		ldr	r2, [sp, #20]
 125              	.LBE8:
 126              		.loc 1 470 3 view .LVU32
 471:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 127              		.loc 1 471 3 view .LVU33
 128              	.LBB9:
 129              		.loc 1 471 3 view .LVU34
 130              		.loc 1 471 3 view .LVU35
 131 006e DA6C     		ldr	r2, [r3, #76]
 132 0070 42F00802 		orr	r2, r2, #8
 133 0074 DA64     		str	r2, [r3, #76]
 134              		.loc 1 471 3 view .LVU36
 135 0076 DB6C     		ldr	r3, [r3, #76]
 136 0078 03F00803 		and	r3, r3, #8
 137 007c 0693     		str	r3, [sp, #24]
 138              		.loc 1 471 3 view .LVU37
 139 007e 069B     		ldr	r3, [sp, #24]
 140              	.LBE9:
 141              		.loc 1 471 3 view .LVU38
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 474:Core/Src/main.c ****   HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 142              		.loc 1 474 3 view .LVU39
 143 0080 2246     		mov	r2, r4
 144 0082 0221     		movs	r1, #2
 145 0084 4FF09040 		mov	r0, #1207959552
 146 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 477:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PO0_Pin|SW2_Pin|SW3_Pin, GPIO_PIN_RESET);
 148              		.loc 1 477 3 view .LVU40
 149 008c DFF8F090 		ldr	r9, .L3+12
 150 0090 2246     		mov	r2, r4
 151 0092 E021     		movs	r1, #224
ARM GAS  /tmp/cc8mDt8o.s 			page 12


 152 0094 4846     		mov	r0, r9
 153 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL1:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 480:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, PO1_Pin|PO2_Pin|DIR3_Pin|O8_Pin
 155              		.loc 1 480 3 view .LVU41
 156 009a 374E     		ldr	r6, .L3+4
 157 009c 2246     		mov	r2, r4
 158 009e 4DF2C531 		movw	r1, #54213
 159 00a2 3046     		mov	r0, r6
 160 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL2:
 481:Core/Src/main.c ****                           |O9_Pin|D4_Pin|D5_Pin|D6_Pin
 482:Core/Src/main.c ****                           |D7_Pin, GPIO_PIN_RESET);
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 485:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, PO3_Pin|O0_Pin|O2_Pin|O4_Pin
 162              		.loc 1 485 3 view .LVU42
 163 00a8 DFF8D880 		ldr	r8, .L3+16
 164 00ac 2246     		mov	r2, r4
 165 00ae 49F28351 		movw	r1, #38275
 166 00b2 4046     		mov	r0, r8
 167 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL3:
 486:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin, GPIO_PIN_RESET);
 487:Core/Src/main.c **** 
 488:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 489:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, O10_Pin|O11_Pin|O12_Pin|O13_Pin
 169              		.loc 1 489 3 view .LVU43
 170 00b8 304F     		ldr	r7, .L3+8
 171 00ba 2246     		mov	r2, r4
 172 00bc 4FF47F41 		mov	r1, #65280
 173 00c0 3846     		mov	r0, r7
 174 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL4:
 490:Core/Src/main.c ****                           |O14_Pin|O15_Pin|SW0_Pin|SW1_Pin, GPIO_PIN_RESET);
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /*Configure GPIO pins : PB7_Pin PB6_Pin PB5_Pin PB4_Pin
 493:Core/Src/main.c ****                            PB3_Pin */
 494:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB7_Pin|PB6_Pin|PB5_Pin|PB4_Pin
 176              		.loc 1 494 3 view .LVU44
 177              		.loc 1 494 23 is_stmt 0 view .LVU45
 178 00c6 7C23     		movs	r3, #124
 179 00c8 0793     		str	r3, [sp, #28]
 495:Core/Src/main.c ****                           |PB3_Pin;
 496:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 180              		.loc 1 496 3 is_stmt 1 view .LVU46
 181              		.loc 1 496 24 is_stmt 0 view .LVU47
 182 00ca 0894     		str	r4, [sp, #32]
 497:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 497 3 is_stmt 1 view .LVU48
 184              		.loc 1 497 24 is_stmt 0 view .LVU49
 185 00cc 0994     		str	r4, [sp, #36]
 498:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 186              		.loc 1 498 3 is_stmt 1 view .LVU50
 187 00ce 07A9     		add	r1, sp, #28
ARM GAS  /tmp/cc8mDt8o.s 			page 13


 188 00d0 4046     		mov	r0, r8
 189 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 190              	.LVL5:
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /*Configure GPIO pins : PB2_Pin PB1_Pin PB0_Pin */
 501:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB2_Pin|PB1_Pin|PB0_Pin;
 191              		.loc 1 501 3 view .LVU51
 192              		.loc 1 501 23 is_stmt 0 view .LVU52
 193 00d6 4FF46043 		mov	r3, #57344
 194 00da 0793     		str	r3, [sp, #28]
 502:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 195              		.loc 1 502 3 is_stmt 1 view .LVU53
 196              		.loc 1 502 24 is_stmt 0 view .LVU54
 197 00dc 0894     		str	r4, [sp, #32]
 503:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 503 3 is_stmt 1 view .LVU55
 199              		.loc 1 503 24 is_stmt 0 view .LVU56
 200 00de 0994     		str	r4, [sp, #36]
 504:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 504 3 is_stmt 1 view .LVU57
 202 00e0 07A9     		add	r1, sp, #28
 203 00e2 4846     		mov	r0, r9
 204 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL6:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /*Configure GPIO pin : DIR2_Pin */
 507:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIR2_Pin;
 206              		.loc 1 507 3 view .LVU58
 207              		.loc 1 507 23 is_stmt 0 view .LVU59
 208 00e8 0223     		movs	r3, #2
 209 00ea 0793     		str	r3, [sp, #28]
 508:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 210              		.loc 1 508 3 is_stmt 1 view .LVU60
 211              		.loc 1 508 24 is_stmt 0 view .LVU61
 212 00ec 0125     		movs	r5, #1
 213 00ee 0895     		str	r5, [sp, #32]
 509:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 509 3 is_stmt 1 view .LVU62
 215              		.loc 1 509 24 is_stmt 0 view .LVU63
 216 00f0 0994     		str	r4, [sp, #36]
 510:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 217              		.loc 1 510 3 is_stmt 1 view .LVU64
 218              		.loc 1 510 25 is_stmt 0 view .LVU65
 219 00f2 0A94     		str	r4, [sp, #40]
 511:Core/Src/main.c ****   HAL_GPIO_Init(DIR2_GPIO_Port, &GPIO_InitStruct);
 220              		.loc 1 511 3 is_stmt 1 view .LVU66
 221 00f4 07A9     		add	r1, sp, #28
 222 00f6 4FF09040 		mov	r0, #1207959552
 223 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 224              	.LVL7:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /*Configure GPIO pins : PO0_Pin SW2_Pin SW3_Pin */
 514:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO0_Pin|SW2_Pin|SW3_Pin;
 225              		.loc 1 514 3 view .LVU67
 226              		.loc 1 514 23 is_stmt 0 view .LVU68
 227 00fe E023     		movs	r3, #224
 228 0100 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/cc8mDt8o.s 			page 14


 515:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 229              		.loc 1 515 3 is_stmt 1 view .LVU69
 230              		.loc 1 515 24 is_stmt 0 view .LVU70
 231 0102 0895     		str	r5, [sp, #32]
 516:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 232              		.loc 1 516 3 is_stmt 1 view .LVU71
 233              		.loc 1 516 24 is_stmt 0 view .LVU72
 234 0104 0994     		str	r4, [sp, #36]
 517:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 235              		.loc 1 517 3 is_stmt 1 view .LVU73
 236              		.loc 1 517 25 is_stmt 0 view .LVU74
 237 0106 0A94     		str	r4, [sp, #40]
 518:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 238              		.loc 1 518 3 is_stmt 1 view .LVU75
 239 0108 07A9     		add	r1, sp, #28
 240 010a 4846     		mov	r0, r9
 241 010c FFF7FEFF 		bl	HAL_GPIO_Init
 242              	.LVL8:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /*Configure GPIO pins : PO1_Pin PO2_Pin DIR3_Pin O8_Pin
 521:Core/Src/main.c ****                            O9_Pin D4_Pin D5_Pin D6_Pin
 522:Core/Src/main.c ****                            D7_Pin */
 523:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO1_Pin|PO2_Pin|DIR3_Pin|O8_Pin
 243              		.loc 1 523 3 view .LVU76
 244              		.loc 1 523 23 is_stmt 0 view .LVU77
 245 0110 4DF2C533 		movw	r3, #54213
 246 0114 0793     		str	r3, [sp, #28]
 524:Core/Src/main.c ****                           |O9_Pin|D4_Pin|D5_Pin|D6_Pin
 525:Core/Src/main.c ****                           |D7_Pin;
 526:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 247              		.loc 1 526 3 is_stmt 1 view .LVU78
 248              		.loc 1 526 24 is_stmt 0 view .LVU79
 249 0116 0895     		str	r5, [sp, #32]
 527:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 250              		.loc 1 527 3 is_stmt 1 view .LVU80
 251              		.loc 1 527 24 is_stmt 0 view .LVU81
 252 0118 0994     		str	r4, [sp, #36]
 528:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 253              		.loc 1 528 3 is_stmt 1 view .LVU82
 254              		.loc 1 528 25 is_stmt 0 view .LVU83
 255 011a 0A94     		str	r4, [sp, #40]
 529:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 256              		.loc 1 529 3 is_stmt 1 view .LVU84
 257 011c 07A9     		add	r1, sp, #28
 258 011e 3046     		mov	r0, r6
 259 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 260              	.LVL9:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /*Configure GPIO pins : PO3_Pin O0_Pin O2_Pin O4_Pin
 532:Core/Src/main.c ****                            O7_Pin EN_Pin RS_Pin */
 533:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO3_Pin|O0_Pin|O2_Pin|O4_Pin
 261              		.loc 1 533 3 view .LVU85
 262              		.loc 1 533 23 is_stmt 0 view .LVU86
 263 0124 49F28353 		movw	r3, #38275
 264 0128 0793     		str	r3, [sp, #28]
 534:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin;
 535:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/cc8mDt8o.s 			page 15


 265              		.loc 1 535 3 is_stmt 1 view .LVU87
 266              		.loc 1 535 24 is_stmt 0 view .LVU88
 267 012a 0895     		str	r5, [sp, #32]
 536:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 268              		.loc 1 536 3 is_stmt 1 view .LVU89
 269              		.loc 1 536 24 is_stmt 0 view .LVU90
 270 012c 0994     		str	r4, [sp, #36]
 537:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 271              		.loc 1 537 3 is_stmt 1 view .LVU91
 272              		.loc 1 537 25 is_stmt 0 view .LVU92
 273 012e 0A94     		str	r4, [sp, #40]
 538:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 274              		.loc 1 538 3 is_stmt 1 view .LVU93
 275 0130 07A9     		add	r1, sp, #28
 276 0132 4046     		mov	r0, r8
 277 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 278              	.LVL10:
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /*Configure GPIO pins : O10_Pin O11_Pin O12_Pin O13_Pin
 541:Core/Src/main.c ****                            O14_Pin O15_Pin SW0_Pin SW1_Pin */
 542:Core/Src/main.c ****   GPIO_InitStruct.Pin = O10_Pin|O11_Pin|O12_Pin|O13_Pin
 279              		.loc 1 542 3 view .LVU94
 280              		.loc 1 542 23 is_stmt 0 view .LVU95
 281 0138 4FF47F43 		mov	r3, #65280
 282 013c 0793     		str	r3, [sp, #28]
 543:Core/Src/main.c ****                           |O14_Pin|O15_Pin|SW0_Pin|SW1_Pin;
 544:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 283              		.loc 1 544 3 is_stmt 1 view .LVU96
 284              		.loc 1 544 24 is_stmt 0 view .LVU97
 285 013e 0895     		str	r5, [sp, #32]
 545:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 286              		.loc 1 545 3 is_stmt 1 view .LVU98
 287              		.loc 1 545 24 is_stmt 0 view .LVU99
 288 0140 0994     		str	r4, [sp, #36]
 546:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 289              		.loc 1 546 3 is_stmt 1 view .LVU100
 290              		.loc 1 546 25 is_stmt 0 view .LVU101
 291 0142 0A94     		str	r4, [sp, #40]
 547:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 292              		.loc 1 547 3 is_stmt 1 view .LVU102
 293 0144 07A9     		add	r1, sp, #28
 294 0146 3846     		mov	r0, r7
 295 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 296              	.LVL11:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /*Configure GPIO pins : I0_Pin I1_Pin I2_Pin I3_Pin
 550:Core/Src/main.c ****                            I4_Pin I5_Pin I6_Pin */
 551:Core/Src/main.c ****   GPIO_InitStruct.Pin = I0_Pin|I1_Pin|I2_Pin|I3_Pin
 297              		.loc 1 551 3 view .LVU103
 298              		.loc 1 551 23 is_stmt 0 view .LVU104
 299 014c FB23     		movs	r3, #251
 300 014e 0793     		str	r3, [sp, #28]
 552:Core/Src/main.c ****                           |I4_Pin|I5_Pin|I6_Pin;
 553:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 301              		.loc 1 553 3 is_stmt 1 view .LVU105
 302              		.loc 1 553 24 is_stmt 0 view .LVU106
 303 0150 0894     		str	r4, [sp, #32]
ARM GAS  /tmp/cc8mDt8o.s 			page 16


 554:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 554 3 is_stmt 1 view .LVU107
 305              		.loc 1 554 24 is_stmt 0 view .LVU108
 306 0152 0994     		str	r4, [sp, #36]
 555:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 307              		.loc 1 555 3 is_stmt 1 view .LVU109
 308 0154 07A9     		add	r1, sp, #28
 309 0156 3846     		mov	r0, r7
 310 0158 FFF7FEFF 		bl	HAL_GPIO_Init
 311              	.LVL12:
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /*Configure GPIO pin : I7_Pin */
 558:Core/Src/main.c ****   GPIO_InitStruct.Pin = I7_Pin;
 312              		.loc 1 558 3 view .LVU110
 313              		.loc 1 558 23 is_stmt 0 view .LVU111
 314 015c 0823     		movs	r3, #8
 315 015e 0793     		str	r3, [sp, #28]
 559:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 316              		.loc 1 559 3 is_stmt 1 view .LVU112
 317              		.loc 1 559 24 is_stmt 0 view .LVU113
 318 0160 0894     		str	r4, [sp, #32]
 560:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 560 3 is_stmt 1 view .LVU114
 320              		.loc 1 560 24 is_stmt 0 view .LVU115
 321 0162 0994     		str	r4, [sp, #36]
 561:Core/Src/main.c ****   HAL_GPIO_Init(I7_GPIO_Port, &GPIO_InitStruct);
 322              		.loc 1 561 3 is_stmt 1 view .LVU116
 323 0164 07A9     		add	r1, sp, #28
 324 0166 3046     		mov	r0, r6
 325 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL13:
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** }
 327              		.loc 1 563 1 is_stmt 0 view .LVU117
 328 016c 0DB0     		add	sp, sp, #52
 329              		.cfi_def_cfa_offset 28
 330              		@ sp needed
 331 016e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 332              	.L4:
 333 0172 00BF     		.align	2
 334              	.L3:
 335 0174 00100240 		.word	1073876992
 336 0178 00040048 		.word	1207960576
 337 017c 000C0048 		.word	1207962624
 338 0180 00080048 		.word	1207961600
 339 0184 00100048 		.word	1207963648
 340              		.cfi_endproc
 341              	.LFE296:
 343              		.section	.text.Error_Handler,"ax",%progbits
 344              		.align	1
 345              		.global	Error_Handler
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	Error_Handler:
 351              	.LFB297:
 564:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 17


 565:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** /* USER CODE END 4 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** /**
 570:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 571:Core/Src/main.c ****   * @retval None
 572:Core/Src/main.c ****   */
 573:Core/Src/main.c **** void Error_Handler(void)
 574:Core/Src/main.c **** {
 352              		.loc 1 574 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ Volatile: function does not return.
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 575:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 576:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 577:Core/Src/main.c ****   __disable_irq();
 358              		.loc 1 577 3 view .LVU119
 359              	.LBB10:
 360              	.LBI10:
 361              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  /tmp/cc8mDt8o.s 			page 18


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc8mDt8o.s 			page 19


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  /tmp/cc8mDt8o.s 			page 20


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/cc8mDt8o.s 			page 21


 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 362              		.loc 2 207 27 view .LVU120
 363              	.LBB11:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 364              		.loc 2 209 3 view .LVU121
 365              		.syntax unified
 366              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 367 0000 72B6     		cpsid i
 368              	@ 0 "" 2
 369              		.thumb
 370              		.syntax unified
 371              	.L6:
 372              	.LBE11:
 373              	.LBE10:
 578:Core/Src/main.c ****   while (1)
 374              		.loc 1 578 3 discriminator 1 view .LVU122
 579:Core/Src/main.c ****   {
 580:Core/Src/main.c ****   }
 375              		.loc 1 580 3 discriminator 1 view .LVU123
 578:Core/Src/main.c ****   while (1)
 376              		.loc 1 578 9 discriminator 1 view .LVU124
 377 0002 FEE7     		b	.L6
 378              		.cfi_endproc
 379              	.LFE297:
 381              		.section	.text.MX_ADC1_Init,"ax",%progbits
 382              		.align	1
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 387              	MX_ADC1_Init:
 388              	.LFB291:
 199:Core/Src/main.c **** 
 389              		.loc 1 199 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 24
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393 0000 00B5     		push	{lr}
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 14, -4
 396 0002 87B0     		sub	sp, sp, #28
 397              		.cfi_def_cfa_offset 32
 205:Core/Src/main.c **** 
 398              		.loc 1 205 3 view .LVU126
 205:Core/Src/main.c **** 
 399              		.loc 1 205 26 is_stmt 0 view .LVU127
 400 0004 0023     		movs	r3, #0
 401 0006 0093     		str	r3, [sp]
 402 0008 0193     		str	r3, [sp, #4]
 403 000a 0293     		str	r3, [sp, #8]
 404 000c 0393     		str	r3, [sp, #12]
 405 000e 0493     		str	r3, [sp, #16]
 406 0010 0593     		str	r3, [sp, #20]
 213:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 407              		.loc 1 213 3 is_stmt 1 view .LVU128
 213:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
ARM GAS  /tmp/cc8mDt8o.s 			page 22


 408              		.loc 1 213 18 is_stmt 0 view .LVU129
 409 0012 1848     		ldr	r0, .L13
 410 0014 184A     		ldr	r2, .L13+4
 411 0016 0260     		str	r2, [r0]
 214:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 412              		.loc 1 214 3 is_stmt 1 view .LVU130
 214:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 413              		.loc 1 214 29 is_stmt 0 view .LVU131
 414 0018 4360     		str	r3, [r0, #4]
 215:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 415              		.loc 1 215 3 is_stmt 1 view .LVU132
 215:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 416              		.loc 1 215 25 is_stmt 0 view .LVU133
 417 001a 8360     		str	r3, [r0, #8]
 216:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 418              		.loc 1 216 3 is_stmt 1 view .LVU134
 216:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 419              		.loc 1 216 24 is_stmt 0 view .LVU135
 420 001c C360     		str	r3, [r0, #12]
 217:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 421              		.loc 1 217 3 is_stmt 1 view .LVU136
 217:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 422              		.loc 1 217 27 is_stmt 0 view .LVU137
 423 001e 0361     		str	r3, [r0, #16]
 218:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 424              		.loc 1 218 3 is_stmt 1 view .LVU138
 218:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 425              		.loc 1 218 27 is_stmt 0 view .LVU139
 426 0020 0422     		movs	r2, #4
 427 0022 4261     		str	r2, [r0, #20]
 219:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 428              		.loc 1 219 3 is_stmt 1 view .LVU140
 219:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 429              		.loc 1 219 31 is_stmt 0 view .LVU141
 430 0024 0376     		strb	r3, [r0, #24]
 220:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 431              		.loc 1 220 3 is_stmt 1 view .LVU142
 220:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 432              		.loc 1 220 33 is_stmt 0 view .LVU143
 433 0026 4376     		strb	r3, [r0, #25]
 221:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 434              		.loc 1 221 3 is_stmt 1 view .LVU144
 221:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 435              		.loc 1 221 30 is_stmt 0 view .LVU145
 436 0028 0122     		movs	r2, #1
 437 002a C261     		str	r2, [r0, #28]
 222:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 438              		.loc 1 222 3 is_stmt 1 view .LVU146
 222:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 439              		.loc 1 222 36 is_stmt 0 view .LVU147
 440 002c 80F82030 		strb	r3, [r0, #32]
 223:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 441              		.loc 1 223 3 is_stmt 1 view .LVU148
 223:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 442              		.loc 1 223 31 is_stmt 0 view .LVU149
 443 0030 8362     		str	r3, [r0, #40]
 224:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
ARM GAS  /tmp/cc8mDt8o.s 			page 23


 444              		.loc 1 224 3 is_stmt 1 view .LVU150
 224:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 445              		.loc 1 224 35 is_stmt 0 view .LVU151
 446 0032 C362     		str	r3, [r0, #44]
 225:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 447              		.loc 1 225 3 is_stmt 1 view .LVU152
 225:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 448              		.loc 1 225 36 is_stmt 0 view .LVU153
 449 0034 80F83030 		strb	r3, [r0, #48]
 226:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 450              		.loc 1 226 3 is_stmt 1 view .LVU154
 226:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 451              		.loc 1 226 22 is_stmt 0 view .LVU155
 452 0038 4363     		str	r3, [r0, #52]
 227:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 453              		.loc 1 227 3 is_stmt 1 view .LVU156
 227:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 454              		.loc 1 227 31 is_stmt 0 view .LVU157
 455 003a 80F83830 		strb	r3, [r0, #56]
 228:Core/Src/main.c ****   {
 456              		.loc 1 228 3 is_stmt 1 view .LVU158
 228:Core/Src/main.c ****   {
 457              		.loc 1 228 7 is_stmt 0 view .LVU159
 458 003e FFF7FEFF 		bl	HAL_ADC_Init
 459              	.LVL14:
 228:Core/Src/main.c ****   {
 460              		.loc 1 228 6 view .LVU160
 461 0042 90B9     		cbnz	r0, .L11
 235:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 462              		.loc 1 235 3 is_stmt 1 view .LVU161
 235:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 463              		.loc 1 235 19 is_stmt 0 view .LVU162
 464 0044 0D4B     		ldr	r3, .L13+8
 465 0046 0093     		str	r3, [sp]
 236:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 466              		.loc 1 236 3 is_stmt 1 view .LVU163
 236:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 467              		.loc 1 236 16 is_stmt 0 view .LVU164
 468 0048 0623     		movs	r3, #6
 469 004a 0193     		str	r3, [sp, #4]
 237:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 470              		.loc 1 237 3 is_stmt 1 view .LVU165
 237:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 471              		.loc 1 237 24 is_stmt 0 view .LVU166
 472 004c 0023     		movs	r3, #0
 473 004e 0293     		str	r3, [sp, #8]
 238:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 474              		.loc 1 238 3 is_stmt 1 view .LVU167
 238:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 475              		.loc 1 238 22 is_stmt 0 view .LVU168
 476 0050 7F22     		movs	r2, #127
 477 0052 0392     		str	r2, [sp, #12]
 239:Core/Src/main.c ****   sConfig.Offset = 0;
 478              		.loc 1 239 3 is_stmt 1 view .LVU169
 239:Core/Src/main.c ****   sConfig.Offset = 0;
 479              		.loc 1 239 24 is_stmt 0 view .LVU170
 480 0054 0422     		movs	r2, #4
ARM GAS  /tmp/cc8mDt8o.s 			page 24


 481 0056 0492     		str	r2, [sp, #16]
 240:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 482              		.loc 1 240 3 is_stmt 1 view .LVU171
 240:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 483              		.loc 1 240 18 is_stmt 0 view .LVU172
 484 0058 0593     		str	r3, [sp, #20]
 241:Core/Src/main.c ****   {
 485              		.loc 1 241 3 is_stmt 1 view .LVU173
 241:Core/Src/main.c ****   {
 486              		.loc 1 241 7 is_stmt 0 view .LVU174
 487 005a 6946     		mov	r1, sp
 488 005c 0548     		ldr	r0, .L13
 489 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 490              	.LVL15:
 241:Core/Src/main.c ****   {
 491              		.loc 1 241 6 view .LVU175
 492 0062 20B9     		cbnz	r0, .L12
 249:Core/Src/main.c **** 
 493              		.loc 1 249 1 view .LVU176
 494 0064 07B0     		add	sp, sp, #28
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 4
 497              		@ sp needed
 498 0066 5DF804FB 		ldr	pc, [sp], #4
 499              	.L11:
 500              		.cfi_restore_state
 230:Core/Src/main.c ****   }
 501              		.loc 1 230 5 is_stmt 1 view .LVU177
 502 006a FFF7FEFF 		bl	Error_Handler
 503              	.LVL16:
 504              	.L12:
 243:Core/Src/main.c ****   }
 505              		.loc 1 243 5 view .LVU178
 506 006e FFF7FEFF 		bl	Error_Handler
 507              	.LVL17:
 508              	.L14:
 509 0072 00BF     		.align	2
 510              	.L13:
 511 0074 00000000 		.word	.LANCHOR0
 512 0078 00000450 		.word	1342439424
 513 007c 02003004 		.word	70254594
 514              		.cfi_endproc
 515              	.LFE291:
 517              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 523              	MX_USART1_UART_Init:
 524              	.LFB293:
 357:Core/Src/main.c **** 
 525              		.loc 1 357 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 08B5     		push	{r3, lr}
 530              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8mDt8o.s 			page 25


 531              		.cfi_offset 3, -8
 532              		.cfi_offset 14, -4
 366:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 533              		.loc 1 366 3 view .LVU180
 366:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 534              		.loc 1 366 19 is_stmt 0 view .LVU181
 535 0002 0B48     		ldr	r0, .L19
 536 0004 0B4B     		ldr	r3, .L19+4
 537 0006 0360     		str	r3, [r0]
 367:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 538              		.loc 1 367 3 is_stmt 1 view .LVU182
 367:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 539              		.loc 1 367 24 is_stmt 0 view .LVU183
 540 0008 4FF4E133 		mov	r3, #115200
 541 000c 4360     		str	r3, [r0, #4]
 368:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 542              		.loc 1 368 3 is_stmt 1 view .LVU184
 368:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 543              		.loc 1 368 26 is_stmt 0 view .LVU185
 544 000e 0023     		movs	r3, #0
 545 0010 8360     		str	r3, [r0, #8]
 369:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 546              		.loc 1 369 3 is_stmt 1 view .LVU186
 369:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 547              		.loc 1 369 24 is_stmt 0 view .LVU187
 548 0012 C360     		str	r3, [r0, #12]
 370:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 549              		.loc 1 370 3 is_stmt 1 view .LVU188
 370:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 550              		.loc 1 370 22 is_stmt 0 view .LVU189
 551 0014 0361     		str	r3, [r0, #16]
 371:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 552              		.loc 1 371 3 is_stmt 1 view .LVU190
 371:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 553              		.loc 1 371 20 is_stmt 0 view .LVU191
 554 0016 0C22     		movs	r2, #12
 555 0018 4261     		str	r2, [r0, #20]
 372:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 556              		.loc 1 372 3 is_stmt 1 view .LVU192
 372:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 557              		.loc 1 372 25 is_stmt 0 view .LVU193
 558 001a 8361     		str	r3, [r0, #24]
 373:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 559              		.loc 1 373 3 is_stmt 1 view .LVU194
 373:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 560              		.loc 1 373 28 is_stmt 0 view .LVU195
 561 001c C361     		str	r3, [r0, #28]
 374:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 562              		.loc 1 374 3 is_stmt 1 view .LVU196
 374:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 563              		.loc 1 374 30 is_stmt 0 view .LVU197
 564 001e 0362     		str	r3, [r0, #32]
 375:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 565              		.loc 1 375 3 is_stmt 1 view .LVU198
 375:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 566              		.loc 1 375 38 is_stmt 0 view .LVU199
 567 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/cc8mDt8o.s 			page 26


 376:Core/Src/main.c ****   {
 568              		.loc 1 376 3 is_stmt 1 view .LVU200
 376:Core/Src/main.c ****   {
 569              		.loc 1 376 7 is_stmt 0 view .LVU201
 570 0022 FFF7FEFF 		bl	HAL_UART_Init
 571              	.LVL18:
 376:Core/Src/main.c ****   {
 572              		.loc 1 376 6 view .LVU202
 573 0026 00B9     		cbnz	r0, .L18
 384:Core/Src/main.c **** 
 574              		.loc 1 384 1 view .LVU203
 575 0028 08BD     		pop	{r3, pc}
 576              	.L18:
 378:Core/Src/main.c ****   }
 577              		.loc 1 378 5 is_stmt 1 view .LVU204
 578 002a FFF7FEFF 		bl	Error_Handler
 579              	.LVL19:
 580              	.L20:
 581 002e 00BF     		.align	2
 582              	.L19:
 583 0030 00000000 		.word	.LANCHOR1
 584 0034 00380140 		.word	1073821696
 585              		.cfi_endproc
 586              	.LFE293:
 588              		.section	.text.MX_TIM1_Init,"ax",%progbits
 589              		.align	1
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	MX_TIM1_Init:
 595              	.LFB292:
 257:Core/Src/main.c **** 
 596              		.loc 1 257 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 112
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 10B5     		push	{r4, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 4, -8
 603              		.cfi_offset 14, -4
 604 0002 9CB0     		sub	sp, sp, #112
 605              		.cfi_def_cfa_offset 120
 263:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 606              		.loc 1 263 3 view .LVU206
 263:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 607              		.loc 1 263 26 is_stmt 0 view .LVU207
 608 0004 0024     		movs	r4, #0
 609 0006 1894     		str	r4, [sp, #96]
 610 0008 1994     		str	r4, [sp, #100]
 611 000a 1A94     		str	r4, [sp, #104]
 612 000c 1B94     		str	r4, [sp, #108]
 264:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 613              		.loc 1 264 3 is_stmt 1 view .LVU208
 264:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 614              		.loc 1 264 27 is_stmt 0 view .LVU209
 615 000e 1594     		str	r4, [sp, #84]
 616 0010 1694     		str	r4, [sp, #88]
ARM GAS  /tmp/cc8mDt8o.s 			page 27


 617 0012 1794     		str	r4, [sp, #92]
 265:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 618              		.loc 1 265 3 is_stmt 1 view .LVU210
 265:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 619              		.loc 1 265 33 is_stmt 0 view .LVU211
 620 0014 1294     		str	r4, [sp, #72]
 621 0016 1394     		str	r4, [sp, #76]
 622 0018 1494     		str	r4, [sp, #80]
 266:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 623              		.loc 1 266 3 is_stmt 1 view .LVU212
 266:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 624              		.loc 1 266 22 is_stmt 0 view .LVU213
 625 001a 0B94     		str	r4, [sp, #44]
 626 001c 0C94     		str	r4, [sp, #48]
 627 001e 0D94     		str	r4, [sp, #52]
 628 0020 0E94     		str	r4, [sp, #56]
 629 0022 0F94     		str	r4, [sp, #60]
 630 0024 1094     		str	r4, [sp, #64]
 631 0026 1194     		str	r4, [sp, #68]
 267:Core/Src/main.c **** 
 632              		.loc 1 267 3 is_stmt 1 view .LVU214
 267:Core/Src/main.c **** 
 633              		.loc 1 267 34 is_stmt 0 view .LVU215
 634 0028 2C22     		movs	r2, #44
 635 002a 2146     		mov	r1, r4
 636 002c 6846     		mov	r0, sp
 637 002e FFF7FEFF 		bl	memset
 638              	.LVL20:
 272:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 639              		.loc 1 272 3 is_stmt 1 view .LVU216
 272:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 640              		.loc 1 272 18 is_stmt 0 view .LVU217
 641 0032 4248     		ldr	r0, .L43
 642 0034 424B     		ldr	r3, .L43+4
 643 0036 0360     		str	r3, [r0]
 273:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 644              		.loc 1 273 3 is_stmt 1 view .LVU218
 273:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 645              		.loc 1 273 24 is_stmt 0 view .LVU219
 646 0038 4460     		str	r4, [r0, #4]
 274:Core/Src/main.c ****   htim1.Init.Period = 65535;
 647              		.loc 1 274 3 is_stmt 1 view .LVU220
 274:Core/Src/main.c ****   htim1.Init.Period = 65535;
 648              		.loc 1 274 26 is_stmt 0 view .LVU221
 649 003a 8460     		str	r4, [r0, #8]
 275:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 650              		.loc 1 275 3 is_stmt 1 view .LVU222
 275:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 651              		.loc 1 275 21 is_stmt 0 view .LVU223
 652 003c 4FF6FF73 		movw	r3, #65535
 653 0040 C360     		str	r3, [r0, #12]
 276:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 654              		.loc 1 276 3 is_stmt 1 view .LVU224
 276:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 655              		.loc 1 276 28 is_stmt 0 view .LVU225
 656 0042 0461     		str	r4, [r0, #16]
 277:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/cc8mDt8o.s 			page 28


 657              		.loc 1 277 3 is_stmt 1 view .LVU226
 277:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 658              		.loc 1 277 32 is_stmt 0 view .LVU227
 659 0044 4461     		str	r4, [r0, #20]
 278:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 660              		.loc 1 278 3 is_stmt 1 view .LVU228
 278:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 661              		.loc 1 278 32 is_stmt 0 view .LVU229
 662 0046 8461     		str	r4, [r0, #24]
 279:Core/Src/main.c ****   {
 663              		.loc 1 279 3 is_stmt 1 view .LVU230
 279:Core/Src/main.c ****   {
 664              		.loc 1 279 7 is_stmt 0 view .LVU231
 665 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 666              	.LVL21:
 279:Core/Src/main.c ****   {
 667              		.loc 1 279 6 view .LVU232
 668 004c 0028     		cmp	r0, #0
 669 004e 60D1     		bne	.L33
 283:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 670              		.loc 1 283 3 is_stmt 1 view .LVU233
 283:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 671              		.loc 1 283 34 is_stmt 0 view .LVU234
 672 0050 4FF48053 		mov	r3, #4096
 673 0054 1893     		str	r3, [sp, #96]
 284:Core/Src/main.c ****   {
 674              		.loc 1 284 3 is_stmt 1 view .LVU235
 284:Core/Src/main.c ****   {
 675              		.loc 1 284 7 is_stmt 0 view .LVU236
 676 0056 18A9     		add	r1, sp, #96
 677 0058 3848     		ldr	r0, .L43
 678 005a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 679              	.LVL22:
 284:Core/Src/main.c ****   {
 680              		.loc 1 284 6 view .LVU237
 681 005e 0028     		cmp	r0, #0
 682 0060 59D1     		bne	.L34
 288:Core/Src/main.c ****   {
 683              		.loc 1 288 3 is_stmt 1 view .LVU238
 288:Core/Src/main.c ****   {
 684              		.loc 1 288 7 is_stmt 0 view .LVU239
 685 0062 3648     		ldr	r0, .L43
 686 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 687              	.LVL23:
 288:Core/Src/main.c ****   {
 688              		.loc 1 288 6 view .LVU240
 689 0068 0028     		cmp	r0, #0
 690 006a 56D1     		bne	.L35
 292:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 691              		.loc 1 292 3 is_stmt 1 view .LVU241
 292:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 692              		.loc 1 292 37 is_stmt 0 view .LVU242
 693 006c 0023     		movs	r3, #0
 694 006e 1593     		str	r3, [sp, #84]
 293:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 695              		.loc 1 293 3 is_stmt 1 view .LVU243
 293:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/cc8mDt8o.s 			page 29


 696              		.loc 1 293 38 is_stmt 0 view .LVU244
 697 0070 1693     		str	r3, [sp, #88]
 294:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 698              		.loc 1 294 3 is_stmt 1 view .LVU245
 294:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 699              		.loc 1 294 33 is_stmt 0 view .LVU246
 700 0072 1793     		str	r3, [sp, #92]
 295:Core/Src/main.c ****   {
 701              		.loc 1 295 3 is_stmt 1 view .LVU247
 295:Core/Src/main.c ****   {
 702              		.loc 1 295 7 is_stmt 0 view .LVU248
 703 0074 15A9     		add	r1, sp, #84
 704 0076 3148     		ldr	r0, .L43
 705 0078 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 706              	.LVL24:
 295:Core/Src/main.c ****   {
 707              		.loc 1 295 6 view .LVU249
 708 007c 0028     		cmp	r0, #0
 709 007e 4ED1     		bne	.L36
 299:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 710              		.loc 1 299 3 is_stmt 1 view .LVU250
 299:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 711              		.loc 1 299 28 is_stmt 0 view .LVU251
 712 0080 0121     		movs	r1, #1
 713 0082 1291     		str	r1, [sp, #72]
 300:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 714              		.loc 1 300 3 is_stmt 1 view .LVU252
 300:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 715              		.loc 1 300 28 is_stmt 0 view .LVU253
 716 0084 1391     		str	r1, [sp, #76]
 301:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 717              		.loc 1 301 3 is_stmt 1 view .LVU254
 301:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 718              		.loc 1 301 30 is_stmt 0 view .LVU255
 719 0086 0023     		movs	r3, #0
 720 0088 1493     		str	r3, [sp, #80]
 302:Core/Src/main.c ****   {
 721              		.loc 1 302 3 is_stmt 1 view .LVU256
 302:Core/Src/main.c ****   {
 722              		.loc 1 302 7 is_stmt 0 view .LVU257
 723 008a 12AA     		add	r2, sp, #72
 724 008c 2B48     		ldr	r0, .L43
 725 008e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakInput
 726              	.LVL25:
 302:Core/Src/main.c ****   {
 727              		.loc 1 302 6 view .LVU258
 728 0092 0028     		cmp	r0, #0
 729 0094 45D1     		bne	.L37
 306:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 730              		.loc 1 306 3 is_stmt 1 view .LVU259
 306:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 731              		.loc 1 306 20 is_stmt 0 view .LVU260
 732 0096 6023     		movs	r3, #96
 733 0098 0B93     		str	r3, [sp, #44]
 307:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 734              		.loc 1 307 3 is_stmt 1 view .LVU261
 307:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /tmp/cc8mDt8o.s 			page 30


 735              		.loc 1 307 19 is_stmt 0 view .LVU262
 736 009a 0022     		movs	r2, #0
 737 009c 0C92     		str	r2, [sp, #48]
 308:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 738              		.loc 1 308 3 is_stmt 1 view .LVU263
 308:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 739              		.loc 1 308 24 is_stmt 0 view .LVU264
 740 009e 0D92     		str	r2, [sp, #52]
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 741              		.loc 1 309 3 is_stmt 1 view .LVU265
 309:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 742              		.loc 1 309 25 is_stmt 0 view .LVU266
 743 00a0 0E92     		str	r2, [sp, #56]
 310:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 744              		.loc 1 310 3 is_stmt 1 view .LVU267
 310:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 745              		.loc 1 310 24 is_stmt 0 view .LVU268
 746 00a2 0F92     		str	r2, [sp, #60]
 311:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 747              		.loc 1 311 3 is_stmt 1 view .LVU269
 311:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 748              		.loc 1 311 25 is_stmt 0 view .LVU270
 749 00a4 1092     		str	r2, [sp, #64]
 312:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 750              		.loc 1 312 3 is_stmt 1 view .LVU271
 312:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 751              		.loc 1 312 26 is_stmt 0 view .LVU272
 752 00a6 1192     		str	r2, [sp, #68]
 313:Core/Src/main.c ****   {
 753              		.loc 1 313 3 is_stmt 1 view .LVU273
 313:Core/Src/main.c ****   {
 754              		.loc 1 313 7 is_stmt 0 view .LVU274
 755 00a8 0BA9     		add	r1, sp, #44
 756 00aa 2448     		ldr	r0, .L43
 757 00ac FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 758              	.LVL26:
 313:Core/Src/main.c ****   {
 759              		.loc 1 313 6 view .LVU275
 760 00b0 0028     		cmp	r0, #0
 761 00b2 38D1     		bne	.L38
 317:Core/Src/main.c ****   {
 762              		.loc 1 317 3 is_stmt 1 view .LVU276
 317:Core/Src/main.c ****   {
 763              		.loc 1 317 7 is_stmt 0 view .LVU277
 764 00b4 0422     		movs	r2, #4
 765 00b6 0BA9     		add	r1, sp, #44
 766 00b8 2048     		ldr	r0, .L43
 767 00ba FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 768              	.LVL27:
 317:Core/Src/main.c ****   {
 769              		.loc 1 317 6 view .LVU278
 770 00be 0028     		cmp	r0, #0
 771 00c0 33D1     		bne	.L39
 321:Core/Src/main.c ****   {
 772              		.loc 1 321 3 is_stmt 1 view .LVU279
 321:Core/Src/main.c ****   {
 773              		.loc 1 321 7 is_stmt 0 view .LVU280
ARM GAS  /tmp/cc8mDt8o.s 			page 31


 774 00c2 0822     		movs	r2, #8
 775 00c4 0BA9     		add	r1, sp, #44
 776 00c6 1D48     		ldr	r0, .L43
 777 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 778              	.LVL28:
 321:Core/Src/main.c ****   {
 779              		.loc 1 321 6 view .LVU281
 780 00cc 78BB     		cbnz	r0, .L40
 325:Core/Src/main.c ****   {
 781              		.loc 1 325 3 is_stmt 1 view .LVU282
 325:Core/Src/main.c ****   {
 782              		.loc 1 325 7 is_stmt 0 view .LVU283
 783 00ce 0C22     		movs	r2, #12
 784 00d0 0BA9     		add	r1, sp, #44
 785 00d2 1A48     		ldr	r0, .L43
 786 00d4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 787              	.LVL29:
 325:Core/Src/main.c ****   {
 788              		.loc 1 325 6 view .LVU284
 789 00d8 58BB     		cbnz	r0, .L41
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 790              		.loc 1 329 3 is_stmt 1 view .LVU285
 329:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 791              		.loc 1 329 40 is_stmt 0 view .LVU286
 792 00da 0023     		movs	r3, #0
 793 00dc 0093     		str	r3, [sp]
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 794              		.loc 1 330 3 is_stmt 1 view .LVU287
 330:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 795              		.loc 1 330 41 is_stmt 0 view .LVU288
 796 00de 0193     		str	r3, [sp, #4]
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 797              		.loc 1 331 3 is_stmt 1 view .LVU289
 331:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 798              		.loc 1 331 34 is_stmt 0 view .LVU290
 799 00e0 0293     		str	r3, [sp, #8]
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 800              		.loc 1 332 3 is_stmt 1 view .LVU291
 332:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 801              		.loc 1 332 33 is_stmt 0 view .LVU292
 802 00e2 0393     		str	r3, [sp, #12]
 333:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 803              		.loc 1 333 3 is_stmt 1 view .LVU293
 333:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 804              		.loc 1 333 35 is_stmt 0 view .LVU294
 805 00e4 4FF48052 		mov	r2, #4096
 806 00e8 0492     		str	r2, [sp, #16]
 334:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 807              		.loc 1 334 3 is_stmt 1 view .LVU295
 334:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 808              		.loc 1 334 38 is_stmt 0 view .LVU296
 809 00ea 4FF40052 		mov	r2, #8192
 810 00ee 0592     		str	r2, [sp, #20]
 335:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 811              		.loc 1 335 3 is_stmt 1 view .LVU297
 335:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 812              		.loc 1 335 36 is_stmt 0 view .LVU298
ARM GAS  /tmp/cc8mDt8o.s 			page 32


 813 00f0 0693     		str	r3, [sp, #24]
 336:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 814              		.loc 1 336 3 is_stmt 1 view .LVU299
 336:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 815              		.loc 1 336 36 is_stmt 0 view .LVU300
 816 00f2 0793     		str	r3, [sp, #28]
 337:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 817              		.loc 1 337 3 is_stmt 1 view .LVU301
 337:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 818              		.loc 1 337 39 is_stmt 0 view .LVU302
 819 00f4 4FF00072 		mov	r2, #33554432
 820 00f8 0892     		str	r2, [sp, #32]
 338:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 821              		.loc 1 338 3 is_stmt 1 view .LVU303
 338:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 822              		.loc 1 338 37 is_stmt 0 view .LVU304
 823 00fa 0993     		str	r3, [sp, #36]
 339:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 824              		.loc 1 339 3 is_stmt 1 view .LVU305
 339:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 825              		.loc 1 339 40 is_stmt 0 view .LVU306
 826 00fc 0A93     		str	r3, [sp, #40]
 340:Core/Src/main.c ****   {
 827              		.loc 1 340 3 is_stmt 1 view .LVU307
 340:Core/Src/main.c ****   {
 828              		.loc 1 340 7 is_stmt 0 view .LVU308
 829 00fe 6946     		mov	r1, sp
 830 0100 0E48     		ldr	r0, .L43
 831 0102 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 832              	.LVL30:
 340:Core/Src/main.c ****   {
 833              		.loc 1 340 6 view .LVU309
 834 0106 B0B9     		cbnz	r0, .L42
 347:Core/Src/main.c **** 
 835              		.loc 1 347 3 is_stmt 1 view .LVU310
 836 0108 0C48     		ldr	r0, .L43
 837 010a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 838              	.LVL31:
 349:Core/Src/main.c **** 
 839              		.loc 1 349 1 is_stmt 0 view .LVU311
 840 010e 1CB0     		add	sp, sp, #112
 841              		.cfi_remember_state
 842              		.cfi_def_cfa_offset 8
 843              		@ sp needed
 844 0110 10BD     		pop	{r4, pc}
 845              	.L33:
 846              		.cfi_restore_state
 281:Core/Src/main.c ****   }
 847              		.loc 1 281 5 is_stmt 1 view .LVU312
 848 0112 FFF7FEFF 		bl	Error_Handler
 849              	.LVL32:
 850              	.L34:
 286:Core/Src/main.c ****   }
 851              		.loc 1 286 5 view .LVU313
 852 0116 FFF7FEFF 		bl	Error_Handler
 853              	.LVL33:
 854              	.L35:
ARM GAS  /tmp/cc8mDt8o.s 			page 33


 290:Core/Src/main.c ****   }
 855              		.loc 1 290 5 view .LVU314
 856 011a FFF7FEFF 		bl	Error_Handler
 857              	.LVL34:
 858              	.L36:
 297:Core/Src/main.c ****   }
 859              		.loc 1 297 5 view .LVU315
 860 011e FFF7FEFF 		bl	Error_Handler
 861              	.LVL35:
 862              	.L37:
 304:Core/Src/main.c ****   }
 863              		.loc 1 304 5 view .LVU316
 864 0122 FFF7FEFF 		bl	Error_Handler
 865              	.LVL36:
 866              	.L38:
 315:Core/Src/main.c ****   }
 867              		.loc 1 315 5 view .LVU317
 868 0126 FFF7FEFF 		bl	Error_Handler
 869              	.LVL37:
 870              	.L39:
 319:Core/Src/main.c ****   }
 871              		.loc 1 319 5 view .LVU318
 872 012a FFF7FEFF 		bl	Error_Handler
 873              	.LVL38:
 874              	.L40:
 323:Core/Src/main.c ****   }
 875              		.loc 1 323 5 view .LVU319
 876 012e FFF7FEFF 		bl	Error_Handler
 877              	.LVL39:
 878              	.L41:
 327:Core/Src/main.c ****   }
 879              		.loc 1 327 5 view .LVU320
 880 0132 FFF7FEFF 		bl	Error_Handler
 881              	.LVL40:
 882              	.L42:
 342:Core/Src/main.c ****   }
 883              		.loc 1 342 5 view .LVU321
 884 0136 FFF7FEFF 		bl	Error_Handler
 885              	.LVL41:
 886              	.L44:
 887 013a 00BF     		.align	2
 888              	.L43:
 889 013c 00000000 		.word	.LANCHOR2
 890 0140 002C0140 		.word	1073818624
 891              		.cfi_endproc
 892              	.LFE292:
 894              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 895              		.align	1
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	MX_USART2_UART_Init:
 901              	.LFB294:
 392:Core/Src/main.c **** 
 902              		.loc 1 392 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc8mDt8o.s 			page 34


 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 08B5     		push	{r3, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 3, -8
 909              		.cfi_offset 14, -4
 401:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 910              		.loc 1 401 3 view .LVU323
 401:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 911              		.loc 1 401 19 is_stmt 0 view .LVU324
 912 0002 0B48     		ldr	r0, .L49
 913 0004 0B4B     		ldr	r3, .L49+4
 914 0006 0360     		str	r3, [r0]
 402:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 915              		.loc 1 402 3 is_stmt 1 view .LVU325
 402:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 916              		.loc 1 402 24 is_stmt 0 view .LVU326
 917 0008 4FF4E133 		mov	r3, #115200
 918 000c 4360     		str	r3, [r0, #4]
 403:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 919              		.loc 1 403 3 is_stmt 1 view .LVU327
 403:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 920              		.loc 1 403 26 is_stmt 0 view .LVU328
 921 000e 0023     		movs	r3, #0
 922 0010 8360     		str	r3, [r0, #8]
 404:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 923              		.loc 1 404 3 is_stmt 1 view .LVU329
 404:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 924              		.loc 1 404 24 is_stmt 0 view .LVU330
 925 0012 C360     		str	r3, [r0, #12]
 405:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 926              		.loc 1 405 3 is_stmt 1 view .LVU331
 405:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 927              		.loc 1 405 22 is_stmt 0 view .LVU332
 928 0014 0361     		str	r3, [r0, #16]
 406:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 929              		.loc 1 406 3 is_stmt 1 view .LVU333
 406:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 930              		.loc 1 406 20 is_stmt 0 view .LVU334
 931 0016 0C22     		movs	r2, #12
 932 0018 4261     		str	r2, [r0, #20]
 407:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 933              		.loc 1 407 3 is_stmt 1 view .LVU335
 407:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 934              		.loc 1 407 25 is_stmt 0 view .LVU336
 935 001a 8361     		str	r3, [r0, #24]
 408:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 936              		.loc 1 408 3 is_stmt 1 view .LVU337
 408:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 937              		.loc 1 408 28 is_stmt 0 view .LVU338
 938 001c C361     		str	r3, [r0, #28]
 409:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 939              		.loc 1 409 3 is_stmt 1 view .LVU339
 409:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 940              		.loc 1 409 30 is_stmt 0 view .LVU340
 941 001e 0362     		str	r3, [r0, #32]
 410:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 942              		.loc 1 410 3 is_stmt 1 view .LVU341
ARM GAS  /tmp/cc8mDt8o.s 			page 35


 410:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 943              		.loc 1 410 38 is_stmt 0 view .LVU342
 944 0020 4362     		str	r3, [r0, #36]
 411:Core/Src/main.c ****   {
 945              		.loc 1 411 3 is_stmt 1 view .LVU343
 411:Core/Src/main.c ****   {
 946              		.loc 1 411 7 is_stmt 0 view .LVU344
 947 0022 FFF7FEFF 		bl	HAL_UART_Init
 948              	.LVL42:
 411:Core/Src/main.c ****   {
 949              		.loc 1 411 6 view .LVU345
 950 0026 00B9     		cbnz	r0, .L48
 419:Core/Src/main.c **** 
 951              		.loc 1 419 1 view .LVU346
 952 0028 08BD     		pop	{r3, pc}
 953              	.L48:
 413:Core/Src/main.c ****   }
 954              		.loc 1 413 5 is_stmt 1 view .LVU347
 955 002a FFF7FEFF 		bl	Error_Handler
 956              	.LVL43:
 957              	.L50:
 958 002e 00BF     		.align	2
 959              	.L49:
 960 0030 00000000 		.word	.LANCHOR3
 961 0034 00440040 		.word	1073759232
 962              		.cfi_endproc
 963              	.LFE294:
 965              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 966              		.align	1
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 971              	MX_USART3_UART_Init:
 972              	.LFB295:
 427:Core/Src/main.c **** 
 973              		.loc 1 427 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977 0000 08B5     		push	{r3, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 3, -8
 980              		.cfi_offset 14, -4
 436:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 981              		.loc 1 436 3 view .LVU349
 436:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 982              		.loc 1 436 19 is_stmt 0 view .LVU350
 983 0002 0B48     		ldr	r0, .L55
 984 0004 0B4B     		ldr	r3, .L55+4
 985 0006 0360     		str	r3, [r0]
 437:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 986              		.loc 1 437 3 is_stmt 1 view .LVU351
 437:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 987              		.loc 1 437 24 is_stmt 0 view .LVU352
 988 0008 4FF4E133 		mov	r3, #115200
 989 000c 4360     		str	r3, [r0, #4]
 438:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/cc8mDt8o.s 			page 36


 990              		.loc 1 438 3 is_stmt 1 view .LVU353
 438:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 991              		.loc 1 438 26 is_stmt 0 view .LVU354
 992 000e 0023     		movs	r3, #0
 993 0010 8360     		str	r3, [r0, #8]
 439:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 994              		.loc 1 439 3 is_stmt 1 view .LVU355
 439:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 995              		.loc 1 439 24 is_stmt 0 view .LVU356
 996 0012 C360     		str	r3, [r0, #12]
 440:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 997              		.loc 1 440 3 is_stmt 1 view .LVU357
 440:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 998              		.loc 1 440 22 is_stmt 0 view .LVU358
 999 0014 0361     		str	r3, [r0, #16]
 441:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1000              		.loc 1 441 3 is_stmt 1 view .LVU359
 441:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1001              		.loc 1 441 20 is_stmt 0 view .LVU360
 1002 0016 0C22     		movs	r2, #12
 1003 0018 4261     		str	r2, [r0, #20]
 442:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1004              		.loc 1 442 3 is_stmt 1 view .LVU361
 442:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1005              		.loc 1 442 25 is_stmt 0 view .LVU362
 1006 001a 8361     		str	r3, [r0, #24]
 443:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1007              		.loc 1 443 3 is_stmt 1 view .LVU363
 443:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1008              		.loc 1 443 28 is_stmt 0 view .LVU364
 1009 001c C361     		str	r3, [r0, #28]
 444:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1010              		.loc 1 444 3 is_stmt 1 view .LVU365
 444:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1011              		.loc 1 444 30 is_stmt 0 view .LVU366
 1012 001e 0362     		str	r3, [r0, #32]
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1013              		.loc 1 445 3 is_stmt 1 view .LVU367
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1014              		.loc 1 445 38 is_stmt 0 view .LVU368
 1015 0020 4362     		str	r3, [r0, #36]
 446:Core/Src/main.c ****   {
 1016              		.loc 1 446 3 is_stmt 1 view .LVU369
 446:Core/Src/main.c ****   {
 1017              		.loc 1 446 7 is_stmt 0 view .LVU370
 1018 0022 FFF7FEFF 		bl	HAL_UART_Init
 1019              	.LVL44:
 446:Core/Src/main.c ****   {
 1020              		.loc 1 446 6 view .LVU371
 1021 0026 00B9     		cbnz	r0, .L54
 454:Core/Src/main.c **** 
 1022              		.loc 1 454 1 view .LVU372
 1023 0028 08BD     		pop	{r3, pc}
 1024              	.L54:
 448:Core/Src/main.c ****   }
 1025              		.loc 1 448 5 is_stmt 1 view .LVU373
 1026 002a FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc8mDt8o.s 			page 37


 1027              	.LVL45:
 1028              	.L56:
 1029 002e 00BF     		.align	2
 1030              	.L55:
 1031 0030 00000000 		.word	.LANCHOR4
 1032 0034 00480040 		.word	1073760256
 1033              		.cfi_endproc
 1034              	.LFE295:
 1036              		.section	.text.SystemClock_Config,"ax",%progbits
 1037              		.align	1
 1038              		.global	SystemClock_Config
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1043              	SystemClock_Config:
 1044              	.LFB289:
 128:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1045              		.loc 1 128 1 view -0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 88
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049 0000 00B5     		push	{lr}
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 14, -4
 1052 0002 97B0     		sub	sp, sp, #92
 1053              		.cfi_def_cfa_offset 96
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1054              		.loc 1 129 3 view .LVU375
 129:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1055              		.loc 1 129 22 is_stmt 0 view .LVU376
 1056 0004 4422     		movs	r2, #68
 1057 0006 0021     		movs	r1, #0
 1058 0008 05A8     		add	r0, sp, #20
 1059 000a FFF7FEFF 		bl	memset
 1060              	.LVL46:
 130:Core/Src/main.c **** 
 1061              		.loc 1 130 3 is_stmt 1 view .LVU377
 130:Core/Src/main.c **** 
 1062              		.loc 1 130 22 is_stmt 0 view .LVU378
 1063 000e 0023     		movs	r3, #0
 1064 0010 0093     		str	r3, [sp]
 1065 0012 0193     		str	r3, [sp, #4]
 1066 0014 0293     		str	r3, [sp, #8]
 1067 0016 0393     		str	r3, [sp, #12]
 1068 0018 0493     		str	r3, [sp, #16]
 134:Core/Src/main.c ****   {
 1069              		.loc 1 134 3 is_stmt 1 view .LVU379
 134:Core/Src/main.c ****   {
 1070              		.loc 1 134 7 is_stmt 0 view .LVU380
 1071 001a 4FF40070 		mov	r0, #512
 1072 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1073              	.LVL47:
 134:Core/Src/main.c ****   {
 1074              		.loc 1 134 6 view .LVU381
 1075 0022 D0B9     		cbnz	r0, .L62
 142:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1076              		.loc 1 142 3 is_stmt 1 view .LVU382
ARM GAS  /tmp/cc8mDt8o.s 			page 38


 142:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1077              		.loc 1 142 36 is_stmt 0 view .LVU383
 1078 0024 1023     		movs	r3, #16
 1079 0026 0593     		str	r3, [sp, #20]
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1080              		.loc 1 143 3 is_stmt 1 view .LVU384
 143:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1081              		.loc 1 143 30 is_stmt 0 view .LVU385
 1082 0028 0123     		movs	r3, #1
 1083 002a 0B93     		str	r3, [sp, #44]
 144:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1084              		.loc 1 144 3 is_stmt 1 view .LVU386
 144:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1085              		.loc 1 144 41 is_stmt 0 view .LVU387
 1086 002c 0023     		movs	r3, #0
 1087 002e 0C93     		str	r3, [sp, #48]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1088              		.loc 1 145 3 is_stmt 1 view .LVU388
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1089              		.loc 1 145 35 is_stmt 0 view .LVU389
 1090 0030 6022     		movs	r2, #96
 1091 0032 0D92     		str	r2, [sp, #52]
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1092              		.loc 1 146 3 is_stmt 1 view .LVU390
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1093              		.loc 1 146 34 is_stmt 0 view .LVU391
 1094 0034 0F93     		str	r3, [sp, #60]
 147:Core/Src/main.c ****   {
 1095              		.loc 1 147 3 is_stmt 1 view .LVU392
 147:Core/Src/main.c ****   {
 1096              		.loc 1 147 7 is_stmt 0 view .LVU393
 1097 0036 05A8     		add	r0, sp, #20
 1098 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1099              	.LVL48:
 147:Core/Src/main.c ****   {
 1100              		.loc 1 147 6 view .LVU394
 1101 003c 78B9     		cbnz	r0, .L63
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1102              		.loc 1 154 3 is_stmt 1 view .LVU395
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1103              		.loc 1 154 31 is_stmt 0 view .LVU396
 1104 003e 0F23     		movs	r3, #15
 1105 0040 0093     		str	r3, [sp]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1106              		.loc 1 156 3 is_stmt 1 view .LVU397
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1107              		.loc 1 156 34 is_stmt 0 view .LVU398
 1108 0042 0021     		movs	r1, #0
 1109 0044 0191     		str	r1, [sp, #4]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1110              		.loc 1 157 3 is_stmt 1 view .LVU399
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1111              		.loc 1 157 35 is_stmt 0 view .LVU400
 1112 0046 0291     		str	r1, [sp, #8]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1113              		.loc 1 158 3 is_stmt 1 view .LVU401
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/cc8mDt8o.s 			page 39


 1114              		.loc 1 158 36 is_stmt 0 view .LVU402
 1115 0048 0391     		str	r1, [sp, #12]
 159:Core/Src/main.c **** 
 1116              		.loc 1 159 3 is_stmt 1 view .LVU403
 159:Core/Src/main.c **** 
 1117              		.loc 1 159 36 is_stmt 0 view .LVU404
 1118 004a 0491     		str	r1, [sp, #16]
 161:Core/Src/main.c ****   {
 1119              		.loc 1 161 3 is_stmt 1 view .LVU405
 161:Core/Src/main.c ****   {
 1120              		.loc 1 161 7 is_stmt 0 view .LVU406
 1121 004c 6846     		mov	r0, sp
 1122 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1123              	.LVL49:
 161:Core/Src/main.c ****   {
 1124              		.loc 1 161 6 view .LVU407
 1125 0052 30B9     		cbnz	r0, .L64
 165:Core/Src/main.c **** 
 1126              		.loc 1 165 1 view .LVU408
 1127 0054 17B0     		add	sp, sp, #92
 1128              		.cfi_remember_state
 1129              		.cfi_def_cfa_offset 4
 1130              		@ sp needed
 1131 0056 5DF804FB 		ldr	pc, [sp], #4
 1132              	.L62:
 1133              		.cfi_restore_state
 136:Core/Src/main.c ****   }
 1134              		.loc 1 136 5 is_stmt 1 view .LVU409
 1135 005a FFF7FEFF 		bl	Error_Handler
 1136              	.LVL50:
 1137              	.L63:
 149:Core/Src/main.c ****   }
 1138              		.loc 1 149 5 view .LVU410
 1139 005e FFF7FEFF 		bl	Error_Handler
 1140              	.LVL51:
 1141              	.L64:
 163:Core/Src/main.c ****   }
 1142              		.loc 1 163 5 view .LVU411
 1143 0062 FFF7FEFF 		bl	Error_Handler
 1144              	.LVL52:
 1145              		.cfi_endproc
 1146              	.LFE289:
 1148              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 1149              		.align	1
 1150              		.global	PeriphCommonClock_Config
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1155              	PeriphCommonClock_Config:
 1156              	.LFB290:
 172:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1157              		.loc 1 172 1 view -0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 96
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161 0000 00B5     		push	{lr}
 1162              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc8mDt8o.s 			page 40


 1163              		.cfi_offset 14, -4
 1164 0002 99B0     		sub	sp, sp, #100
 1165              		.cfi_def_cfa_offset 104
 173:Core/Src/main.c **** 
 1166              		.loc 1 173 3 view .LVU413
 173:Core/Src/main.c **** 
 1167              		.loc 1 173 28 is_stmt 0 view .LVU414
 1168 0004 5C22     		movs	r2, #92
 1169 0006 0021     		movs	r1, #0
 1170 0008 01A8     		add	r0, sp, #4
 1171 000a FFF7FEFF 		bl	memset
 1172              	.LVL53:
 177:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1173              		.loc 1 177 3 is_stmt 1 view .LVU415
 177:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1174              		.loc 1 177 38 is_stmt 0 view .LVU416
 1175 000e 4FF40423 		mov	r3, #540672
 1176 0012 0193     		str	r3, [sp, #4]
 178:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1177              		.loc 1 178 3 is_stmt 1 view .LVU417
 178:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1178              		.loc 1 178 35 is_stmt 0 view .LVU418
 1179 0014 4FF08053 		mov	r3, #268435456
 1180 0018 1593     		str	r3, [sp, #84]
 179:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1181              		.loc 1 179 3 is_stmt 1 view .LVU419
 179:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1182              		.loc 1 179 38 is_stmt 0 view .LVU420
 1183 001a 4FF08063 		mov	r3, #67108864
 1184 001e 1393     		str	r3, [sp, #76]
 180:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1185              		.loc 1 180 3 is_stmt 1 view .LVU421
 180:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1186              		.loc 1 180 39 is_stmt 0 view .LVU422
 1187 0020 0123     		movs	r3, #1
 1188 0022 0293     		str	r3, [sp, #8]
 181:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1189              		.loc 1 181 3 is_stmt 1 view .LVU423
 181:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1190              		.loc 1 181 34 is_stmt 0 view .LVU424
 1191 0024 0393     		str	r3, [sp, #12]
 182:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1192              		.loc 1 182 3 is_stmt 1 view .LVU425
 182:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1193              		.loc 1 182 34 is_stmt 0 view .LVU426
 1194 0026 1023     		movs	r3, #16
 1195 0028 0493     		str	r3, [sp, #16]
 183:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1196              		.loc 1 183 3 is_stmt 1 view .LVU427
 183:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1197              		.loc 1 183 34 is_stmt 0 view .LVU428
 1198 002a 0723     		movs	r3, #7
 1199 002c 0593     		str	r3, [sp, #20]
 184:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1200              		.loc 1 184 3 is_stmt 1 view .LVU429
 184:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1201              		.loc 1 184 34 is_stmt 0 view .LVU430
ARM GAS  /tmp/cc8mDt8o.s 			page 41


 1202 002e 0223     		movs	r3, #2
 1203 0030 0693     		str	r3, [sp, #24]
 185:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1204              		.loc 1 185 3 is_stmt 1 view .LVU431
 185:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1205              		.loc 1 185 34 is_stmt 0 view .LVU432
 1206 0032 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1207              		.loc 1 186 3 is_stmt 1 view .LVU433
 186:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1208              		.loc 1 186 41 is_stmt 0 view .LVU434
 1209 0034 4FF08873 		mov	r3, #17825792
 1210 0038 0893     		str	r3, [sp, #32]
 187:Core/Src/main.c ****   {
 1211              		.loc 1 187 3 is_stmt 1 view .LVU435
 187:Core/Src/main.c ****   {
 1212              		.loc 1 187 7 is_stmt 0 view .LVU436
 1213 003a 01A8     		add	r0, sp, #4
 1214 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1215              	.LVL54:
 187:Core/Src/main.c ****   {
 1216              		.loc 1 187 6 view .LVU437
 1217 0040 10B9     		cbnz	r0, .L68
 191:Core/Src/main.c **** 
 1218              		.loc 1 191 1 view .LVU438
 1219 0042 19B0     		add	sp, sp, #100
 1220              		.cfi_remember_state
 1221              		.cfi_def_cfa_offset 4
 1222              		@ sp needed
 1223 0044 5DF804FB 		ldr	pc, [sp], #4
 1224              	.L68:
 1225              		.cfi_restore_state
 189:Core/Src/main.c ****   }
 1226              		.loc 1 189 5 is_stmt 1 view .LVU439
 1227 0048 FFF7FEFF 		bl	Error_Handler
 1228              	.LVL55:
 1229              		.cfi_endproc
 1230              	.LFE290:
 1232              		.section	.text.main,"ax",%progbits
 1233              		.align	1
 1234              		.global	main
 1235              		.syntax unified
 1236              		.thumb
 1237              		.thumb_func
 1239              	main:
 1240              	.LFB288:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1241              		.loc 1 77 1 view -0
 1242              		.cfi_startproc
 1243              		@ Volatile: function does not return.
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246 0000 08B5     		push	{r3, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 3, -8
 1249              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
ARM GAS  /tmp/cc8mDt8o.s 			page 42


 1250              		.loc 1 85 3 view .LVU441
 1251 0002 FFF7FEFF 		bl	HAL_Init
 1252              	.LVL56:
  92:Core/Src/main.c **** 
 1253              		.loc 1 92 3 view .LVU442
 1254 0006 FFF7FEFF 		bl	SystemClock_Config
 1255              	.LVL57:
  95:Core/Src/main.c **** 
 1256              		.loc 1 95 3 view .LVU443
 1257 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 1258              	.LVL58:
 102:Core/Src/main.c ****   MX_ADC1_Init();
 1259              		.loc 1 102 3 view .LVU444
 1260 000e FFF7FEFF 		bl	MX_GPIO_Init
 1261              	.LVL59:
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 1262              		.loc 1 103 3 view .LVU445
 1263 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1264              	.LVL60:
 104:Core/Src/main.c ****   MX_TIM1_Init();
 1265              		.loc 1 104 3 view .LVU446
 1266 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1267              	.LVL61:
 105:Core/Src/main.c ****   MX_USART2_UART_Init();
 1268              		.loc 1 105 3 view .LVU447
 1269 001a FFF7FEFF 		bl	MX_TIM1_Init
 1270              	.LVL62:
 106:Core/Src/main.c ****   MX_USART3_UART_Init();
 1271              		.loc 1 106 3 view .LVU448
 1272 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 1273              	.LVL63:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1274              		.loc 1 107 3 view .LVU449
 1275 0022 FFF7FEFF 		bl	MX_USART3_UART_Init
 1276              	.LVL64:
 1277              	.L70:
 114:Core/Src/main.c ****   {
 1278              		.loc 1 114 3 discriminator 1 view .LVU450
 119:Core/Src/main.c ****   /* USER CODE END 3 */
 1279              		.loc 1 119 3 discriminator 1 view .LVU451
 114:Core/Src/main.c ****   {
 1280              		.loc 1 114 9 discriminator 1 view .LVU452
 1281 0026 FEE7     		b	.L70
 1282              		.cfi_endproc
 1283              	.LFE288:
 1285              		.global	huart3
 1286              		.global	huart2
 1287              		.global	huart1
 1288              		.global	htim1
 1289              		.global	hadc1
 1290              		.section	.bss.hadc1,"aw",%nobits
 1291              		.align	2
 1292              		.set	.LANCHOR0,. + 0
 1295              	hadc1:
 1296 0000 00000000 		.space	100
 1296      00000000 
 1296      00000000 
ARM GAS  /tmp/cc8mDt8o.s 			page 43


 1296      00000000 
 1296      00000000 
 1297              		.section	.bss.htim1,"aw",%nobits
 1298              		.align	2
 1299              		.set	.LANCHOR2,. + 0
 1302              	htim1:
 1303 0000 00000000 		.space	76
 1303      00000000 
 1303      00000000 
 1303      00000000 
 1303      00000000 
 1304              		.section	.bss.huart1,"aw",%nobits
 1305              		.align	2
 1306              		.set	.LANCHOR1,. + 0
 1309              	huart1:
 1310 0000 00000000 		.space	132
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1310      00000000 
 1311              		.section	.bss.huart2,"aw",%nobits
 1312              		.align	2
 1313              		.set	.LANCHOR3,. + 0
 1316              	huart2:
 1317 0000 00000000 		.space	132
 1317      00000000 
 1317      00000000 
 1317      00000000 
 1317      00000000 
 1318              		.section	.bss.huart3,"aw",%nobits
 1319              		.align	2
 1320              		.set	.LANCHOR4,. + 0
 1323              	huart3:
 1324 0000 00000000 		.space	132
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1324      00000000 
 1325              		.text
 1326              	.Letext0:
 1327              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1328              		.file 4 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1329              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 1330              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1331              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1332              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1333              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1334              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1335              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1336              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1337              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1338              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 1339              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1340              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1341              		.file 17 "Core/Inc/main.h"
 1342              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1343              		.file 19 "<built-in>"
ARM GAS  /tmp/cc8mDt8o.s 			page 44


ARM GAS  /tmp/cc8mDt8o.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc8mDt8o.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc8mDt8o.s:335    .text.MX_GPIO_Init:0000000000000174 $d
     /tmp/cc8mDt8o.s:344    .text.Error_Handler:0000000000000000 $t
     /tmp/cc8mDt8o.s:350    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc8mDt8o.s:382    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:387    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc8mDt8o.s:511    .text.MX_ADC1_Init:0000000000000074 $d
     /tmp/cc8mDt8o.s:518    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:523    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc8mDt8o.s:583    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/cc8mDt8o.s:589    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:594    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc8mDt8o.s:889    .text.MX_TIM1_Init:000000000000013c $d
     /tmp/cc8mDt8o.s:895    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:900    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc8mDt8o.s:960    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/cc8mDt8o.s:966    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cc8mDt8o.s:971    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc8mDt8o.s:1031   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cc8mDt8o.s:1037   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc8mDt8o.s:1043   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc8mDt8o.s:1149   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/cc8mDt8o.s:1155   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/cc8mDt8o.s:1233   .text.main:0000000000000000 $t
     /tmp/cc8mDt8o.s:1239   .text.main:0000000000000000 main
     /tmp/cc8mDt8o.s:1323   .bss.huart3:0000000000000000 huart3
     /tmp/cc8mDt8o.s:1316   .bss.huart2:0000000000000000 huart2
     /tmp/cc8mDt8o.s:1309   .bss.huart1:0000000000000000 huart1
     /tmp/cc8mDt8o.s:1302   .bss.htim1:0000000000000000 htim1
     /tmp/cc8mDt8o.s:1295   .bss.hadc1:0000000000000000 hadc1
     /tmp/cc8mDt8o.s:1291   .bss.hadc1:0000000000000000 $d
     /tmp/cc8mDt8o.s:1298   .bss.htim1:0000000000000000 $d
     /tmp/cc8mDt8o.s:1305   .bss.huart1:0000000000000000 $d
     /tmp/cc8mDt8o.s:1312   .bss.huart2:0000000000000000 $d
     /tmp/cc8mDt8o.s:1319   .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIMEx_ConfigBreakInput
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
ARM GAS  /tmp/cc8mDt8o.s 			page 46


HAL_RCCEx_PeriphCLKConfig
HAL_Init
