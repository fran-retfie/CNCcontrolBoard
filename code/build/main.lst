ARM GAS  /tmp/ccoDWd4X.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB303:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdint.h>
  27:Core/Src/main.c **** #include <stdbool.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "hmi.h"
  30:Core/Src/main.c **** #include "cnc_core.h"
  31:Core/Src/main.c **** #include "lcd.h"
ARM GAS  /tmp/ccoDWd4X.s 			page 2


  32:Core/Src/main.c **** #include "cnc_config.h"
  33:Core/Src/main.c **** #include "data_parser.h"
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  52:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim7;
  56:Core/Src/main.c **** TIM_HandleTypeDef htim15;
  57:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** UART_HandleTypeDef huart1;
  60:Core/Src/main.c **** UART_HandleTypeDef huart2;
  61:Core/Src/main.c **** UART_HandleTypeDef huart3;
  62:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_rx;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_DMA_Init(void);
  73:Core/Src/main.c **** static void MX_ADC1_Init(void);
  74:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  75:Core/Src/main.c **** static void MX_TIM1_Init(void);
  76:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  77:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  78:Core/Src/main.c **** static void MX_TIM15_Init(void);
  79:Core/Src/main.c **** static void MX_TIM16_Init(void);
  80:Core/Src/main.c **** static void MX_TIM7_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE END PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  86:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  87:Core/Src/main.c **** HMI_info_t hmi_info = { .mode = HMI_Mode_Zero, 
  88:Core/Src/main.c ****                         .state = HMI_State_Stop, 
ARM GAS  /tmp/ccoDWd4X.s 			page 3


  89:Core/Src/main.c ****                         .move = HMI_Move_None,
  90:Core/Src/main.c ****                         .pos = {3000, 3000},
  91:Core/Src/main.c ****                         .pulseLenght = {1000, 1000},
  92:Core/Src/main.c ****                         .commanded.pos = {0, 0},
  93:Core/Src/main.c ****                         .feed = 1000,
  94:Core/Src/main.c ****                         .P1 = {10,10},
  95:Core/Src/main.c ****                         .P2 = {300,300},
  96:Core/Src/main.c ****                         .P1set = false,
  97:Core/Src/main.c ****                         .P2set = false,
  98:Core/Src/main.c ****                         .cnt1 = 0,
  99:Core/Src/main.c ****                         .cnt2 = 0,
 100:Core/Src/main.c ****                         .update = true,
 101:Core/Src/main.c ****                         .zeroed = {false, false},
 102:Core/Src/main.c ****                         .pushbuttons = 0xFFU,
 103:Core/Src/main.c ****                         .htimX = &enX_tim, 
 104:Core/Src/main.c ****                         .htimY = &enY_tim};
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** volatile uint16_t adc_data[8];
 107:Core/Src/main.c **** uint8_t UART1_rxBuffer[11];
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 123:Core/Src/main.c ****   HAL_Init();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Configure the system clock */
 130:Core/Src/main.c ****   SystemClock_Config();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /* Configure the peripherals common clocks */
 133:Core/Src/main.c ****   PeriphCommonClock_Config();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Initialize all configured peripherals */
 140:Core/Src/main.c ****   MX_GPIO_Init();
 141:Core/Src/main.c ****   MX_DMA_Init();
 142:Core/Src/main.c ****   MX_ADC1_Init();
 143:Core/Src/main.c ****   MX_USART1_UART_Init();
 144:Core/Src/main.c ****   MX_TIM1_Init();
 145:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccoDWd4X.s 			page 4


 146:Core/Src/main.c ****   MX_USART3_UART_Init();
 147:Core/Src/main.c ****   MX_TIM15_Init();
 148:Core/Src/main.c ****   MX_TIM16_Init();
 149:Core/Src/main.c ****   MX_TIM7_Init();
 150:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   initLCD();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   HAL_TIMEx_PWMN_Start_IT(&enX_tim, TIM_CHANNEL_3);
 157:Core/Src/main.c ****   HAL_TIM_PWM_Start_IT(&enY_tim, TIM_CHANNEL_1);
 158:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 159:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 160:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 161:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 8);
 164:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, UART1_rxBuffer, 11);
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE END 2 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Infinite loop */
 169:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 170:Core/Src/main.c ****   while (1)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     /* USER CODE END WHILE */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     CNC_HL_Control(&hmi_info, &huart1, adc_data);
 177:Core/Src/main.c ****     //HAL_Delay(1);
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   /* USER CODE END 3 */
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief System Clock Configuration
 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** void SystemClock_Config(void)
 187:Core/Src/main.c **** {
 188:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 189:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 199:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 202:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
ARM GAS  /tmp/ccoDWd4X.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 204:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 214:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 231:Core/Src/main.c **** {
 232:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /** Initializes the peripherals clock
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_ADC;
 237:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 238:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 239:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 240:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 241:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 242:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 243:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 244:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 245:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 246:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 254:Core/Src/main.c ****   * @param None
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** static void MX_ADC1_Init(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccoDWd4X.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /** Common config
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c ****   hadc1.Instance = ADC1;
 273:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 274:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 275:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 276:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 277:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 278:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 279:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 280:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 281:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 282:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 283:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 284:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 285:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 286:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 287:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /** Configure Regular Channel
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 295:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 296:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 297:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 298:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 299:Core/Src/main.c ****   sConfig.Offset = 0;
 300:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     Error_Handler();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /** Configure Regular Channel
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 308:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 309:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /** Configure Regular Channel
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
ARM GAS  /tmp/ccoDWd4X.s 			page 7


 317:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 318:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /** Configure Regular Channel
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 326:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 327:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /** Configure Regular Channel
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 335:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 336:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /** Configure Regular Channel
 342:Core/Src/main.c ****   */
 343:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_10;
 344:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 345:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Configure Regular Channel
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_12;
 353:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 354:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 355:Core/Src/main.c ****   {
 356:Core/Src/main.c ****     Error_Handler();
 357:Core/Src/main.c ****   }
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /** Configure Regular Channel
 360:Core/Src/main.c ****   */
 361:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_13;
 362:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 363:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 364:Core/Src/main.c ****   {
 365:Core/Src/main.c ****     Error_Handler();
 366:Core/Src/main.c ****   }
 367:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** /**
ARM GAS  /tmp/ccoDWd4X.s 			page 8


 374:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 375:Core/Src/main.c ****   * @param None
 376:Core/Src/main.c ****   * @retval None
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c **** static void MX_TIM1_Init(void)
 379:Core/Src/main.c **** {
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 386:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 387:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 388:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 393:Core/Src/main.c ****   htim1.Instance = TIM1;
 394:Core/Src/main.c ****   htim1.Init.Prescaler = 9;
 395:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 396:Core/Src/main.c ****   htim1.Init.Period = 400;
 397:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 398:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 399:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 400:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 405:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 410:Core/Src/main.c ****   {
 411:Core/Src/main.c ****     Error_Handler();
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 414:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 415:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 416:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 421:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 422:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 423:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 424:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 425:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 426:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 427:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  /tmp/ccoDWd4X.s 			page 9


 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 442:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****     Error_Handler();
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 449:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 455:Core/Src/main.c ****   * @param None
 456:Core/Src/main.c ****   * @retval None
 457:Core/Src/main.c ****   */
 458:Core/Src/main.c **** static void MX_TIM7_Init(void)
 459:Core/Src/main.c **** {
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 470:Core/Src/main.c ****   htim7.Instance = TIM7;
 471:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 472:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 473:Core/Src/main.c ****   htim7.Init.Period = 1200;
 474:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 475:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 476:Core/Src/main.c ****   {
 477:Core/Src/main.c ****     Error_Handler();
 478:Core/Src/main.c ****   }
 479:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 480:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 481:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
ARM GAS  /tmp/ccoDWd4X.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** }
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** /**
 492:Core/Src/main.c ****   * @brief TIM15 Initialization Function
 493:Core/Src/main.c ****   * @param None
 494:Core/Src/main.c ****   * @retval None
 495:Core/Src/main.c ****   */
 496:Core/Src/main.c **** static void MX_TIM15_Init(void)
 497:Core/Src/main.c **** {
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 0 */
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****   /* USER CODE END TIM15_Init 0 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 504:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 505:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 506:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 1 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE END TIM15_Init 1 */
 511:Core/Src/main.c ****   htim15.Instance = TIM15;
 512:Core/Src/main.c ****   htim15.Init.Prescaler = 9;
 513:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 514:Core/Src/main.c ****   htim15.Init.Period = 400;
 515:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 516:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 517:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 518:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 519:Core/Src/main.c ****   {
 520:Core/Src/main.c ****     Error_Handler();
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 523:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 532:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 533:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 534:Core/Src/main.c ****   {
 535:Core/Src/main.c ****     Error_Handler();
 536:Core/Src/main.c ****   }
 537:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 538:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 539:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 540:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 541:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 542:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 543:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 544:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /tmp/ccoDWd4X.s 			page 11


 545:Core/Src/main.c ****   {
 546:Core/Src/main.c ****     Error_Handler();
 547:Core/Src/main.c ****   }
 548:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 549:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 550:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 554:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 555:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END TIM15_Init 2 */
 562:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim15);
 563:Core/Src/main.c **** 
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** /**
 567:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 568:Core/Src/main.c ****   * @param None
 569:Core/Src/main.c ****   * @retval None
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c **** static void MX_TIM16_Init(void)
 572:Core/Src/main.c **** {
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 581:Core/Src/main.c ****   htim16.Instance = TIM16;
 582:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 583:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 584:Core/Src/main.c ****   htim16.Init.Period = 65535;
 585:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 586:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 587:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 588:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 589:Core/Src/main.c ****   {
 590:Core/Src/main.c ****     Error_Handler();
 591:Core/Src/main.c ****   }
 592:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** }
 597:Core/Src/main.c **** 
 598:Core/Src/main.c **** /**
 599:Core/Src/main.c ****   * @brief USART1 Initialization Function
 600:Core/Src/main.c ****   * @param None
 601:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccoDWd4X.s 			page 12


 602:Core/Src/main.c ****   */
 603:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 604:Core/Src/main.c **** {
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 613:Core/Src/main.c ****   huart1.Instance = USART1;
 614:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 615:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 616:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 617:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 618:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 619:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 620:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 621:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 622:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 623:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 624:Core/Src/main.c ****   {
 625:Core/Src/main.c ****     Error_Handler();
 626:Core/Src/main.c ****   }
 627:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c **** }
 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** /**
 634:Core/Src/main.c ****   * @brief USART2 Initialization Function
 635:Core/Src/main.c ****   * @param None
 636:Core/Src/main.c ****   * @retval None
 637:Core/Src/main.c ****   */
 638:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 639:Core/Src/main.c **** {
 640:Core/Src/main.c **** 
 641:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 648:Core/Src/main.c ****   huart2.Instance = USART2;
 649:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 650:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 651:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 652:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 653:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 654:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 655:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 656:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 657:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 658:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
ARM GAS  /tmp/ccoDWd4X.s 			page 13


 659:Core/Src/main.c ****   {
 660:Core/Src/main.c ****     Error_Handler();
 661:Core/Src/main.c ****   }
 662:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 665:Core/Src/main.c **** 
 666:Core/Src/main.c **** }
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** /**
 669:Core/Src/main.c ****   * @brief USART3 Initialization Function
 670:Core/Src/main.c ****   * @param None
 671:Core/Src/main.c ****   * @retval None
 672:Core/Src/main.c ****   */
 673:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 674:Core/Src/main.c **** {
 675:Core/Src/main.c **** 
 676:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 679:Core/Src/main.c **** 
 680:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 681:Core/Src/main.c **** 
 682:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 683:Core/Src/main.c ****   huart3.Instance = USART3;
 684:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 685:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 686:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 687:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 688:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 689:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 690:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 691:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 692:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 693:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 694:Core/Src/main.c ****   {
 695:Core/Src/main.c ****     Error_Handler();
 696:Core/Src/main.c ****   }
 697:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 700:Core/Src/main.c **** 
 701:Core/Src/main.c **** }
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** /**
 704:Core/Src/main.c ****   * Enable DMA controller clock
 705:Core/Src/main.c ****   */
 706:Core/Src/main.c **** static void MX_DMA_Init(void)
 707:Core/Src/main.c **** {
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****   /* DMA controller clock enable */
 710:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* DMA interrupt init */
 713:Core/Src/main.c ****   /* DMA1_Channel5_IRQn interrupt configuration */
 714:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 3, 0);
 715:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
ARM GAS  /tmp/ccoDWd4X.s 			page 14


 716:Core/Src/main.c **** 
 717:Core/Src/main.c **** }
 718:Core/Src/main.c **** 
 719:Core/Src/main.c **** /**
 720:Core/Src/main.c ****   * @brief GPIO Initialization Function
 721:Core/Src/main.c ****   * @param None
 722:Core/Src/main.c ****   * @retval None
 723:Core/Src/main.c ****   */
 724:Core/Src/main.c **** static void MX_GPIO_Init(void)
 725:Core/Src/main.c **** {
  28              		.loc 1 725 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 8DB0     		sub	sp, sp, #52
  42              		.cfi_def_cfa_offset 80
 726:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 726 3 view .LVU1
  44              		.loc 1 726 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0794     		str	r4, [sp, #28]
  47 000a 0894     		str	r4, [sp, #32]
  48 000c 0994     		str	r4, [sp, #36]
  49 000e 0A94     		str	r4, [sp, #40]
  50 0010 0B94     		str	r4, [sp, #44]
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 729:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  51              		.loc 1 729 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 729 3 view .LVU4
  54              		.loc 1 729 3 view .LVU5
  55 0012 6B4B     		ldr	r3, .L3
  56 0014 DA6C     		ldr	r2, [r3, #76]
  57 0016 42F01002 		orr	r2, r2, #16
  58 001a DA64     		str	r2, [r3, #76]
  59              		.loc 1 729 3 view .LVU6
  60 001c DA6C     		ldr	r2, [r3, #76]
  61 001e 02F01002 		and	r2, r2, #16
  62 0022 0192     		str	r2, [sp, #4]
  63              		.loc 1 729 3 view .LVU7
  64 0024 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 729 3 view .LVU8
 730:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  67              		.loc 1 730 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 730 3 view .LVU10
ARM GAS  /tmp/ccoDWd4X.s 			page 15


  70              		.loc 1 730 3 view .LVU11
  71 0026 DA6C     		ldr	r2, [r3, #76]
  72 0028 42F00402 		orr	r2, r2, #4
  73 002c DA64     		str	r2, [r3, #76]
  74              		.loc 1 730 3 view .LVU12
  75 002e DA6C     		ldr	r2, [r3, #76]
  76 0030 02F00402 		and	r2, r2, #4
  77 0034 0292     		str	r2, [sp, #8]
  78              		.loc 1 730 3 view .LVU13
  79 0036 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 730 3 view .LVU14
 731:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  82              		.loc 1 731 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 731 3 view .LVU16
  85              		.loc 1 731 3 view .LVU17
  86 0038 DA6C     		ldr	r2, [r3, #76]
  87 003a 42F08002 		orr	r2, r2, #128
  88 003e DA64     		str	r2, [r3, #76]
  89              		.loc 1 731 3 view .LVU18
  90 0040 DA6C     		ldr	r2, [r3, #76]
  91 0042 02F08002 		and	r2, r2, #128
  92 0046 0392     		str	r2, [sp, #12]
  93              		.loc 1 731 3 view .LVU19
  94 0048 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 731 3 view .LVU20
 732:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  97              		.loc 1 732 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 732 3 view .LVU22
 100              		.loc 1 732 3 view .LVU23
 101 004a DA6C     		ldr	r2, [r3, #76]
 102 004c 42F00102 		orr	r2, r2, #1
 103 0050 DA64     		str	r2, [r3, #76]
 104              		.loc 1 732 3 view .LVU24
 105 0052 DA6C     		ldr	r2, [r3, #76]
 106 0054 02F00102 		and	r2, r2, #1
 107 0058 0492     		str	r2, [sp, #16]
 108              		.loc 1 732 3 view .LVU25
 109 005a 049A     		ldr	r2, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 732 3 view .LVU26
 733:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 112              		.loc 1 733 3 view .LVU27
 113              	.LBB8:
 114              		.loc 1 733 3 view .LVU28
 115              		.loc 1 733 3 view .LVU29
 116 005c DA6C     		ldr	r2, [r3, #76]
 117 005e 42F00202 		orr	r2, r2, #2
 118 0062 DA64     		str	r2, [r3, #76]
 119              		.loc 1 733 3 view .LVU30
 120 0064 DA6C     		ldr	r2, [r3, #76]
 121 0066 02F00202 		and	r2, r2, #2
 122 006a 0592     		str	r2, [sp, #20]
 123              		.loc 1 733 3 view .LVU31
ARM GAS  /tmp/ccoDWd4X.s 			page 16


 124 006c 059A     		ldr	r2, [sp, #20]
 125              	.LBE8:
 126              		.loc 1 733 3 view .LVU32
 734:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 127              		.loc 1 734 3 view .LVU33
 128              	.LBB9:
 129              		.loc 1 734 3 view .LVU34
 130              		.loc 1 734 3 view .LVU35
 131 006e DA6C     		ldr	r2, [r3, #76]
 132 0070 42F00802 		orr	r2, r2, #8
 133 0074 DA64     		str	r2, [r3, #76]
 134              		.loc 1 734 3 view .LVU36
 135 0076 DB6C     		ldr	r3, [r3, #76]
 136 0078 03F00803 		and	r3, r3, #8
 137 007c 0693     		str	r3, [sp, #24]
 138              		.loc 1 734 3 view .LVU37
 139 007e 069B     		ldr	r3, [sp, #24]
 140              	.LBE9:
 141              		.loc 1 734 3 view .LVU38
 735:Core/Src/main.c **** 
 736:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 737:Core/Src/main.c ****   HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 142              		.loc 1 737 3 view .LVU39
 143 0080 2246     		mov	r2, r4
 144 0082 0221     		movs	r1, #2
 145 0084 4FF09040 		mov	r0, #1207959552
 146 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 738:Core/Src/main.c **** 
 739:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 740:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PO0_Pin|SW2_Pin, GPIO_PIN_RESET);
 148              		.loc 1 740 3 view .LVU40
 149 008c DFF83C91 		ldr	r9, .L3+12
 150 0090 2246     		mov	r2, r4
 151 0092 6021     		movs	r1, #96
 152 0094 4846     		mov	r0, r9
 153 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL1:
 741:Core/Src/main.c **** 
 742:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 743:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, PO1_Pin|PO2_Pin|DIR3_Pin|D4_Pin
 155              		.loc 1 743 3 view .LVU41
 156 009a 4A4F     		ldr	r7, .L3+4
 157 009c 2246     		mov	r2, r4
 158 009e 41F2C531 		movw	r1, #5061
 159 00a2 3846     		mov	r0, r7
 160 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 161              	.LVL2:
 744:Core/Src/main.c ****                           |D5_Pin|D6_Pin|D7_Pin, GPIO_PIN_RESET);
 745:Core/Src/main.c **** 
 746:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 747:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, PO3_Pin|O0_Pin|O1_Pin|O2_Pin
 162              		.loc 1 747 3 view .LVU42
 163 00a8 DFF82481 		ldr	r8, .L3+16
 164 00ac 2246     		mov	r2, r4
 165 00ae 4FF68371 		movw	r1, #65411
 166 00b2 4046     		mov	r0, r8
ARM GAS  /tmp/ccoDWd4X.s 			page 17


 167 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 168              	.LVL3:
 748:Core/Src/main.c ****                           |O3_Pin|O4_Pin|O5_Pin|O6_Pin
 749:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin, GPIO_PIN_RESET);
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 752:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, O10_Pin|O11_Pin|O12_Pin|O13_Pin
 169              		.loc 1 752 3 view .LVU43
 170 00b8 434E     		ldr	r6, .L3+8
 171 00ba 2246     		mov	r2, r4
 172 00bc 4FF47C51 		mov	r1, #16128
 173 00c0 3046     		mov	r0, r6
 174 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL4:
 753:Core/Src/main.c ****                           |O14_Pin|O15_Pin, GPIO_PIN_RESET);
 754:Core/Src/main.c **** 
 755:Core/Src/main.c ****   /*Configure GPIO pins : PB7_Pin PB6_Pin PB5_Pin PB4_Pin
 756:Core/Src/main.c ****                            PB3_Pin */
 757:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB7_Pin|PB6_Pin|PB5_Pin|PB4_Pin
 176              		.loc 1 757 3 view .LVU44
 177              		.loc 1 757 23 is_stmt 0 view .LVU45
 178 00c6 7C23     		movs	r3, #124
 179 00c8 0793     		str	r3, [sp, #28]
 758:Core/Src/main.c ****                           |PB3_Pin;
 759:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 180              		.loc 1 759 3 is_stmt 1 view .LVU46
 181              		.loc 1 759 24 is_stmt 0 view .LVU47
 182 00ca 0894     		str	r4, [sp, #32]
 760:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 760 3 is_stmt 1 view .LVU48
 184              		.loc 1 760 24 is_stmt 0 view .LVU49
 185 00cc 0994     		str	r4, [sp, #36]
 761:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 186              		.loc 1 761 3 is_stmt 1 view .LVU50
 187 00ce 07A9     		add	r1, sp, #28
 188 00d0 4046     		mov	r0, r8
 189 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 190              	.LVL5:
 762:Core/Src/main.c **** 
 763:Core/Src/main.c ****   /*Configure GPIO pins : PB2_Pin PB1_Pin PB0_Pin */
 764:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB2_Pin|PB1_Pin|PB0_Pin;
 191              		.loc 1 764 3 view .LVU51
 192              		.loc 1 764 23 is_stmt 0 view .LVU52
 193 00d6 4FF46043 		mov	r3, #57344
 194 00da 0793     		str	r3, [sp, #28]
 765:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 195              		.loc 1 765 3 is_stmt 1 view .LVU53
 196              		.loc 1 765 24 is_stmt 0 view .LVU54
 197 00dc 0894     		str	r4, [sp, #32]
 766:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 766 3 is_stmt 1 view .LVU55
 199              		.loc 1 766 24 is_stmt 0 view .LVU56
 200 00de 0994     		str	r4, [sp, #36]
 767:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 767 3 is_stmt 1 view .LVU57
 202 00e0 07A9     		add	r1, sp, #28
 203 00e2 4846     		mov	r0, r9
ARM GAS  /tmp/ccoDWd4X.s 			page 18


 204 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL6:
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   /*Configure GPIO pin : DIR2_Pin */
 770:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIR2_Pin;
 206              		.loc 1 770 3 view .LVU58
 207              		.loc 1 770 23 is_stmt 0 view .LVU59
 208 00e8 0223     		movs	r3, #2
 209 00ea 0793     		str	r3, [sp, #28]
 771:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 210              		.loc 1 771 3 is_stmt 1 view .LVU60
 211              		.loc 1 771 24 is_stmt 0 view .LVU61
 212 00ec 0125     		movs	r5, #1
 213 00ee 0895     		str	r5, [sp, #32]
 772:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 772 3 is_stmt 1 view .LVU62
 215              		.loc 1 772 24 is_stmt 0 view .LVU63
 216 00f0 0994     		str	r4, [sp, #36]
 773:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 217              		.loc 1 773 3 is_stmt 1 view .LVU64
 218              		.loc 1 773 25 is_stmt 0 view .LVU65
 219 00f2 0A94     		str	r4, [sp, #40]
 774:Core/Src/main.c ****   HAL_GPIO_Init(DIR2_GPIO_Port, &GPIO_InitStruct);
 220              		.loc 1 774 3 is_stmt 1 view .LVU66
 221 00f4 07A9     		add	r1, sp, #28
 222 00f6 4FF09040 		mov	r0, #1207959552
 223 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 224              	.LVL7:
 775:Core/Src/main.c **** 
 776:Core/Src/main.c ****   /*Configure GPIO pin : SWSTOP_Pin */
 777:Core/Src/main.c ****   GPIO_InitStruct.Pin = SWSTOP_Pin;
 225              		.loc 1 777 3 view .LVU67
 226              		.loc 1 777 23 is_stmt 0 view .LVU68
 227 00fe 4023     		movs	r3, #64
 228 0100 0793     		str	r3, [sp, #28]
 778:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 229              		.loc 1 778 3 is_stmt 1 view .LVU69
 230              		.loc 1 778 24 is_stmt 0 view .LVU70
 231 0102 4FF48813 		mov	r3, #1114112
 232 0106 0893     		str	r3, [sp, #32]
 779:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 233              		.loc 1 779 3 is_stmt 1 view .LVU71
 234              		.loc 1 779 24 is_stmt 0 view .LVU72
 235 0108 0994     		str	r4, [sp, #36]
 780:Core/Src/main.c ****   HAL_GPIO_Init(SWSTOP_GPIO_Port, &GPIO_InitStruct);
 236              		.loc 1 780 3 is_stmt 1 view .LVU73
 237 010a 07A9     		add	r1, sp, #28
 238 010c 4FF09040 		mov	r0, #1207959552
 239 0110 FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL8:
 781:Core/Src/main.c **** 
 782:Core/Src/main.c ****   /*Configure GPIO pins : PO0_Pin SW2_Pin */
 783:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO0_Pin|SW2_Pin;
 241              		.loc 1 783 3 view .LVU74
 242              		.loc 1 783 23 is_stmt 0 view .LVU75
 243 0114 6023     		movs	r3, #96
 244 0116 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccoDWd4X.s 			page 19


 784:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 245              		.loc 1 784 3 is_stmt 1 view .LVU76
 246              		.loc 1 784 24 is_stmt 0 view .LVU77
 247 0118 0895     		str	r5, [sp, #32]
 785:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 248              		.loc 1 785 3 is_stmt 1 view .LVU78
 249              		.loc 1 785 24 is_stmt 0 view .LVU79
 250 011a 0994     		str	r4, [sp, #36]
 786:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 251              		.loc 1 786 3 is_stmt 1 view .LVU80
 252              		.loc 1 786 25 is_stmt 0 view .LVU81
 253 011c 0A94     		str	r4, [sp, #40]
 787:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 254              		.loc 1 787 3 is_stmt 1 view .LVU82
 255 011e 07A9     		add	r1, sp, #28
 256 0120 4846     		mov	r0, r9
 257 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL9:
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****   /*Configure GPIO pins : PO1_Pin PO2_Pin DIR3_Pin D4_Pin
 790:Core/Src/main.c ****                            D5_Pin D6_Pin D7_Pin */
 791:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO1_Pin|PO2_Pin|DIR3_Pin|D4_Pin
 259              		.loc 1 791 3 view .LVU83
 260              		.loc 1 791 23 is_stmt 0 view .LVU84
 261 0126 41F2C533 		movw	r3, #5061
 262 012a 0793     		str	r3, [sp, #28]
 792:Core/Src/main.c ****                           |D5_Pin|D6_Pin|D7_Pin;
 793:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 263              		.loc 1 793 3 is_stmt 1 view .LVU85
 264              		.loc 1 793 24 is_stmt 0 view .LVU86
 265 012c 0895     		str	r5, [sp, #32]
 794:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 266              		.loc 1 794 3 is_stmt 1 view .LVU87
 267              		.loc 1 794 24 is_stmt 0 view .LVU88
 268 012e 0994     		str	r4, [sp, #36]
 795:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 269              		.loc 1 795 3 is_stmt 1 view .LVU89
 270              		.loc 1 795 25 is_stmt 0 view .LVU90
 271 0130 0A94     		str	r4, [sp, #40]
 796:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 272              		.loc 1 796 3 is_stmt 1 view .LVU91
 273 0132 07A9     		add	r1, sp, #28
 274 0134 3846     		mov	r0, r7
 275 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 276              	.LVL10:
 797:Core/Src/main.c **** 
 798:Core/Src/main.c ****   /*Configure GPIO pins : PO3_Pin O0_Pin O1_Pin O2_Pin
 799:Core/Src/main.c ****                            O3_Pin O4_Pin O5_Pin O6_Pin
 800:Core/Src/main.c ****                            O7_Pin EN_Pin RS_Pin */
 801:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO3_Pin|O0_Pin|O1_Pin|O2_Pin
 277              		.loc 1 801 3 view .LVU92
 278              		.loc 1 801 23 is_stmt 0 view .LVU93
 279 013a 4FF68373 		movw	r3, #65411
 280 013e 0793     		str	r3, [sp, #28]
 802:Core/Src/main.c ****                           |O3_Pin|O4_Pin|O5_Pin|O6_Pin
 803:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin;
 804:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccoDWd4X.s 			page 20


 281              		.loc 1 804 3 is_stmt 1 view .LVU94
 282              		.loc 1 804 24 is_stmt 0 view .LVU95
 283 0140 0895     		str	r5, [sp, #32]
 805:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 284              		.loc 1 805 3 is_stmt 1 view .LVU96
 285              		.loc 1 805 24 is_stmt 0 view .LVU97
 286 0142 0994     		str	r4, [sp, #36]
 806:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 287              		.loc 1 806 3 is_stmt 1 view .LVU98
 288              		.loc 1 806 25 is_stmt 0 view .LVU99
 289 0144 0A94     		str	r4, [sp, #40]
 807:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 290              		.loc 1 807 3 is_stmt 1 view .LVU100
 291 0146 07A9     		add	r1, sp, #28
 292 0148 4046     		mov	r0, r8
 293 014a FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL11:
 808:Core/Src/main.c **** 
 809:Core/Src/main.c ****   /*Configure GPIO pins : O10_Pin O11_Pin O12_Pin O13_Pin
 810:Core/Src/main.c ****                            O14_Pin O15_Pin */
 811:Core/Src/main.c ****   GPIO_InitStruct.Pin = O10_Pin|O11_Pin|O12_Pin|O13_Pin
 295              		.loc 1 811 3 view .LVU101
 296              		.loc 1 811 23 is_stmt 0 view .LVU102
 297 014e 4FF47C53 		mov	r3, #16128
 298 0152 0793     		str	r3, [sp, #28]
 812:Core/Src/main.c ****                           |O14_Pin|O15_Pin;
 813:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 299              		.loc 1 813 3 is_stmt 1 view .LVU103
 300              		.loc 1 813 24 is_stmt 0 view .LVU104
 301 0154 0895     		str	r5, [sp, #32]
 814:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 302              		.loc 1 814 3 is_stmt 1 view .LVU105
 303              		.loc 1 814 24 is_stmt 0 view .LVU106
 304 0156 0994     		str	r4, [sp, #36]
 815:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 305              		.loc 1 815 3 is_stmt 1 view .LVU107
 306              		.loc 1 815 25 is_stmt 0 view .LVU108
 307 0158 0A94     		str	r4, [sp, #40]
 816:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 308              		.loc 1 816 3 is_stmt 1 view .LVU109
 309 015a 07A9     		add	r1, sp, #28
 310 015c 3046     		mov	r0, r6
 311 015e FFF7FEFF 		bl	HAL_GPIO_Init
 312              	.LVL12:
 817:Core/Src/main.c **** 
 818:Core/Src/main.c ****   /*Configure GPIO pins : SW0_Pin SW1_Pin */
 819:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW0_Pin|SW1_Pin;
 313              		.loc 1 819 3 view .LVU110
 314              		.loc 1 819 23 is_stmt 0 view .LVU111
 315 0162 4FF44043 		mov	r3, #49152
 316 0166 0793     		str	r3, [sp, #28]
 820:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 317              		.loc 1 820 3 is_stmt 1 view .LVU112
 318              		.loc 1 820 24 is_stmt 0 view .LVU113
 319 0168 4FF40413 		mov	r3, #2162688
 320 016c 0893     		str	r3, [sp, #32]
 821:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccoDWd4X.s 			page 21


 321              		.loc 1 821 3 is_stmt 1 view .LVU114
 322              		.loc 1 821 24 is_stmt 0 view .LVU115
 323 016e 0994     		str	r4, [sp, #36]
 822:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 324              		.loc 1 822 3 is_stmt 1 view .LVU116
 325 0170 07A9     		add	r1, sp, #28
 326 0172 3046     		mov	r0, r6
 327 0174 FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL13:
 823:Core/Src/main.c **** 
 824:Core/Src/main.c ****   /*Configure GPIO pins : I0_Pin I1_Pin I2_Pin I3_Pin
 825:Core/Src/main.c ****                            I4_Pin I5_Pin I6_Pin */
 826:Core/Src/main.c ****   GPIO_InitStruct.Pin = I0_Pin|I1_Pin|I2_Pin|I3_Pin
 329              		.loc 1 826 3 view .LVU117
 330              		.loc 1 826 23 is_stmt 0 view .LVU118
 331 0178 FB23     		movs	r3, #251
 332 017a 0793     		str	r3, [sp, #28]
 827:Core/Src/main.c ****                           |I4_Pin|I5_Pin|I6_Pin;
 828:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 333              		.loc 1 828 3 is_stmt 1 view .LVU119
 334              		.loc 1 828 24 is_stmt 0 view .LVU120
 335 017c 0894     		str	r4, [sp, #32]
 829:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 336              		.loc 1 829 3 is_stmt 1 view .LVU121
 337              		.loc 1 829 24 is_stmt 0 view .LVU122
 338 017e 0994     		str	r4, [sp, #36]
 830:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 339              		.loc 1 830 3 is_stmt 1 view .LVU123
 340 0180 07A9     		add	r1, sp, #28
 341 0182 3046     		mov	r0, r6
 342 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 343              	.LVL14:
 831:Core/Src/main.c **** 
 832:Core/Src/main.c ****   /*Configure GPIO pin : I7_Pin */
 833:Core/Src/main.c ****   GPIO_InitStruct.Pin = I7_Pin;
 344              		.loc 1 833 3 view .LVU124
 345              		.loc 1 833 23 is_stmt 0 view .LVU125
 346 0188 0823     		movs	r3, #8
 347 018a 0793     		str	r3, [sp, #28]
 834:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 348              		.loc 1 834 3 is_stmt 1 view .LVU126
 349              		.loc 1 834 24 is_stmt 0 view .LVU127
 350 018c 0894     		str	r4, [sp, #32]
 835:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 351              		.loc 1 835 3 is_stmt 1 view .LVU128
 352              		.loc 1 835 24 is_stmt 0 view .LVU129
 353 018e 0994     		str	r4, [sp, #36]
 836:Core/Src/main.c ****   HAL_GPIO_Init(I7_GPIO_Port, &GPIO_InitStruct);
 354              		.loc 1 836 3 is_stmt 1 view .LVU130
 355 0190 07A9     		add	r1, sp, #28
 356 0192 3846     		mov	r0, r7
 357 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 358              	.LVL15:
 837:Core/Src/main.c **** 
 838:Core/Src/main.c ****   /* EXTI interrupt init*/
 839:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 15, 0);
 359              		.loc 1 839 3 view .LVU131
ARM GAS  /tmp/ccoDWd4X.s 			page 22


 360 0198 2246     		mov	r2, r4
 361 019a 0F21     		movs	r1, #15
 362 019c 1720     		movs	r0, #23
 363 019e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 364              	.LVL16:
 840:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 365              		.loc 1 840 3 view .LVU132
 366 01a2 1720     		movs	r0, #23
 367 01a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 368              	.LVL17:
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 14, 0);
 369              		.loc 1 842 3 view .LVU133
 370 01a8 2246     		mov	r2, r4
 371 01aa 0E21     		movs	r1, #14
 372 01ac 2820     		movs	r0, #40
 373 01ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 374              	.LVL18:
 843:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 375              		.loc 1 843 3 view .LVU134
 376 01b2 2820     		movs	r0, #40
 377 01b4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 378              	.LVL19:
 844:Core/Src/main.c **** 
 845:Core/Src/main.c **** }
 379              		.loc 1 845 1 is_stmt 0 view .LVU135
 380 01b8 0DB0     		add	sp, sp, #52
 381              		.cfi_def_cfa_offset 28
 382              		@ sp needed
 383 01ba BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 384              	.L4:
 385 01be 00BF     		.align	2
 386              	.L3:
 387 01c0 00100240 		.word	1073876992
 388 01c4 00040048 		.word	1207960576
 389 01c8 000C0048 		.word	1207962624
 390 01cc 00080048 		.word	1207961600
 391 01d0 00100048 		.word	1207963648
 392              		.cfi_endproc
 393              	.LFE303:
 395              		.section	.text.MX_DMA_Init,"ax",%progbits
 396              		.align	1
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	MX_DMA_Init:
 402              	.LFB302:
 707:Core/Src/main.c **** 
 403              		.loc 1 707 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 00B5     		push	{lr}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 14, -4
 410 0002 83B0     		sub	sp, sp, #12
 411              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccoDWd4X.s 			page 23


 710:Core/Src/main.c **** 
 412              		.loc 1 710 3 view .LVU137
 413              	.LBB10:
 710:Core/Src/main.c **** 
 414              		.loc 1 710 3 view .LVU138
 710:Core/Src/main.c **** 
 415              		.loc 1 710 3 view .LVU139
 416 0004 0A4B     		ldr	r3, .L7
 417 0006 9A6C     		ldr	r2, [r3, #72]
 418 0008 42F00102 		orr	r2, r2, #1
 419 000c 9A64     		str	r2, [r3, #72]
 710:Core/Src/main.c **** 
 420              		.loc 1 710 3 view .LVU140
 421 000e 9B6C     		ldr	r3, [r3, #72]
 422 0010 03F00103 		and	r3, r3, #1
 423 0014 0193     		str	r3, [sp, #4]
 710:Core/Src/main.c **** 
 424              		.loc 1 710 3 view .LVU141
 425 0016 019B     		ldr	r3, [sp, #4]
 426              	.LBE10:
 710:Core/Src/main.c **** 
 427              		.loc 1 710 3 view .LVU142
 714:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 428              		.loc 1 714 3 view .LVU143
 429 0018 0022     		movs	r2, #0
 430 001a 0321     		movs	r1, #3
 431 001c 0F20     		movs	r0, #15
 432 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 433              	.LVL20:
 715:Core/Src/main.c **** 
 434              		.loc 1 715 3 view .LVU144
 435 0022 0F20     		movs	r0, #15
 436 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 437              	.LVL21:
 717:Core/Src/main.c **** 
 438              		.loc 1 717 1 is_stmt 0 view .LVU145
 439 0028 03B0     		add	sp, sp, #12
 440              		.cfi_def_cfa_offset 4
 441              		@ sp needed
 442 002a 5DF804FB 		ldr	pc, [sp], #4
 443              	.L8:
 444 002e 00BF     		.align	2
 445              	.L7:
 446 0030 00100240 		.word	1073876992
 447              		.cfi_endproc
 448              	.LFE302:
 450              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 451              		.align	1
 452              		.global	HAL_UART_RxCpltCallback
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	HAL_UART_RxCpltCallback:
 458              	.LVL22:
 459              	.LFB304:
 846:Core/Src/main.c **** 
 847:Core/Src/main.c **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/ccoDWd4X.s 			page 24


 848:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 460              		.loc 1 848 56 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		.loc 1 848 56 is_stmt 0 view .LVU147
 465 0000 10B5     		push	{r4, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 4, -8
 468              		.cfi_offset 14, -4
 849:Core/Src/main.c ****   ReadGcodeDMA(huart, UART1_rxBuffer, &hmi_info);
 469              		.loc 1 849 3 is_stmt 1 view .LVU148
 470 0002 054C     		ldr	r4, .L11
 471 0004 054A     		ldr	r2, .L11+4
 472 0006 2146     		mov	r1, r4
 473 0008 FFF7FEFF 		bl	ReadGcodeDMA
 474              	.LVL23:
 850:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, UART1_rxBuffer, 11);
 475              		.loc 1 850 3 view .LVU149
 476 000c 0B22     		movs	r2, #11
 477 000e 2146     		mov	r1, r4
 478 0010 0348     		ldr	r0, .L11+8
 479 0012 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 480              	.LVL24:
 851:Core/Src/main.c **** }
 481              		.loc 1 851 1 is_stmt 0 view .LVU150
 482 0016 10BD     		pop	{r4, pc}
 483              	.L12:
 484              		.align	2
 485              	.L11:
 486 0018 00000000 		.word	.LANCHOR1
 487 001c 00000000 		.word	.LANCHOR0
 488 0020 00000000 		.word	.LANCHOR2
 489              		.cfi_endproc
 490              	.LFE304:
 492              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 493              		.align	1
 494              		.global	TIM1_CC_IRQHandler
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	TIM1_CC_IRQHandler:
 500              	.LFB305:
 852:Core/Src/main.c **** 
 853:Core/Src/main.c **** void TIM1_CC_IRQHandler(void)
 854:Core/Src/main.c **** {
 501              		.loc 1 854 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 3, -8
 508              		.cfi_offset 14, -4
 855:Core/Src/main.c ****   htim1.Instance->SR = 0x00000000U;
 509              		.loc 1 855 3 view .LVU152
 510              		.loc 1 855 8 is_stmt 0 view .LVU153
ARM GAS  /tmp/ccoDWd4X.s 			page 25


 511 0002 044B     		ldr	r3, .L15
 512 0004 1B68     		ldr	r3, [r3]
 513              		.loc 1 855 22 view .LVU154
 514 0006 0022     		movs	r2, #0
 515 0008 1A61     		str	r2, [r3, #16]
 856:Core/Src/main.c ****   CNC_TIM_Callback_X(&hmi_info);
 516              		.loc 1 856 3 is_stmt 1 view .LVU155
 517 000a 0348     		ldr	r0, .L15+4
 518 000c FFF7FEFF 		bl	CNC_TIM_Callback_X
 519              	.LVL25:
 857:Core/Src/main.c **** }
 520              		.loc 1 857 1 is_stmt 0 view .LVU156
 521 0010 08BD     		pop	{r3, pc}
 522              	.L16:
 523 0012 00BF     		.align	2
 524              	.L15:
 525 0014 00000000 		.word	.LANCHOR3
 526 0018 00000000 		.word	.LANCHOR0
 527              		.cfi_endproc
 528              	.LFE305:
 530              		.section	.text.TIM1_BRK_TIM15_IRQHandler,"ax",%progbits
 531              		.align	1
 532              		.global	TIM1_BRK_TIM15_IRQHandler
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	TIM1_BRK_TIM15_IRQHandler:
 538              	.LFB306:
 858:Core/Src/main.c **** 
 859:Core/Src/main.c **** void TIM1_BRK_TIM15_IRQHandler(void)
 860:Core/Src/main.c **** {
 539              		.loc 1 860 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 08B5     		push	{r3, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 3, -8
 546              		.cfi_offset 14, -4
 861:Core/Src/main.c ****   htim15.Instance->SR = 0x00000000U;
 547              		.loc 1 861 3 view .LVU158
 548              		.loc 1 861 9 is_stmt 0 view .LVU159
 549 0002 044B     		ldr	r3, .L19
 550 0004 1B68     		ldr	r3, [r3]
 551              		.loc 1 861 23 view .LVU160
 552 0006 0022     		movs	r2, #0
 553 0008 1A61     		str	r2, [r3, #16]
 862:Core/Src/main.c ****   CNC_TIM_Callback_Y(&hmi_info);
 554              		.loc 1 862 3 is_stmt 1 view .LVU161
 555 000a 0348     		ldr	r0, .L19+4
 556 000c FFF7FEFF 		bl	CNC_TIM_Callback_Y
 557              	.LVL26:
 863:Core/Src/main.c **** }
 558              		.loc 1 863 1 is_stmt 0 view .LVU162
 559 0010 08BD     		pop	{r3, pc}
 560              	.L20:
 561 0012 00BF     		.align	2
ARM GAS  /tmp/ccoDWd4X.s 			page 26


 562              	.L19:
 563 0014 00000000 		.word	.LANCHOR4
 564 0018 00000000 		.word	.LANCHOR0
 565              		.cfi_endproc
 566              	.LFE306:
 568              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 569              		.align	1
 570              		.global	TIM7_IRQHandler
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	TIM7_IRQHandler:
 576              	.LFB307:
 864:Core/Src/main.c **** 
 865:Core/Src/main.c **** void TIM7_IRQHandler(void)
 866:Core/Src/main.c **** {
 577              		.loc 1 866 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 08B5     		push	{r3, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 867:Core/Src/main.c ****   htim7.Instance->SR = 0x00000000U;
 585              		.loc 1 867 3 view .LVU164
 586              		.loc 1 867 8 is_stmt 0 view .LVU165
 587 0002 044B     		ldr	r3, .L23
 588 0004 1B68     		ldr	r3, [r3]
 589              		.loc 1 867 22 view .LVU166
 590 0006 0022     		movs	r2, #0
 591 0008 1A61     		str	r2, [r3, #16]
 868:Core/Src/main.c ****   HMI_Update(&hmi_info);
 592              		.loc 1 868 3 is_stmt 1 view .LVU167
 593 000a 0348     		ldr	r0, .L23+4
 594 000c FFF7FEFF 		bl	HMI_Update
 595              	.LVL27:
 869:Core/Src/main.c **** }
 596              		.loc 1 869 1 is_stmt 0 view .LVU168
 597 0010 08BD     		pop	{r3, pc}
 598              	.L24:
 599 0012 00BF     		.align	2
 600              	.L23:
 601 0014 00000000 		.word	.LANCHOR5
 602 0018 00000000 		.word	.LANCHOR0
 603              		.cfi_endproc
 604              	.LFE307:
 606              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 607              		.align	1
 608              		.global	HAL_GPIO_EXTI_Callback
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 613              	HAL_GPIO_EXTI_Callback:
 614              	.LVL28:
 615              	.LFB308:
 870:Core/Src/main.c **** 
ARM GAS  /tmp/ccoDWd4X.s 			page 27


 871:Core/Src/main.c **** 
 872:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 873:Core/Src/main.c **** {
 616              		.loc 1 873 1 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		.loc 1 873 1 is_stmt 0 view .LVU170
 621 0000 10B5     		push	{r4, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 4, -8
 624              		.cfi_offset 14, -4
 625 0002 0446     		mov	r4, r0
 874:Core/Src/main.c ****   //STOP pressed halt motors and go to STOP mode
 875:Core/Src/main.c ****   if(GPIO_Pin == SWSTOP_Pin) {
 626              		.loc 1 875 3 is_stmt 1 view .LVU171
 627              		.loc 1 875 5 is_stmt 0 view .LVU172
 628 0004 4028     		cmp	r0, #64
 629 0006 06D0     		beq	.L30
 630              	.LVL29:
 631              	.L26:
 876:Core/Src/main.c ****     CNC_Stop(&hmi_info);
 877:Core/Src/main.c ****   }
 878:Core/Src/main.c **** 
 879:Core/Src/main.c ****   if(GPIO_Pin == limitX_Pin) {
 632              		.loc 1 879 3 is_stmt 1 view .LVU173
 633              		.loc 1 879 5 is_stmt 0 view .LVU174
 634 0008 B4F5804F 		cmp	r4, #16384
 635 000c 07D0     		beq	.L31
 636              	.L27:
 880:Core/Src/main.c ****     CNC_Limit_X(&hmi_info);
 881:Core/Src/main.c ****   }
 882:Core/Src/main.c **** 
 883:Core/Src/main.c ****   if(GPIO_Pin == limitY_Pin) {
 637              		.loc 1 883 3 is_stmt 1 view .LVU175
 638              		.loc 1 883 5 is_stmt 0 view .LVU176
 639 000e B4F5004F 		cmp	r4, #32768
 640 0012 08D0     		beq	.L32
 641              	.L25:
 884:Core/Src/main.c ****     CNC_Limit_Y(&hmi_info);
 885:Core/Src/main.c ****   }
 886:Core/Src/main.c **** }
 642              		.loc 1 886 1 view .LVU177
 643 0014 10BD     		pop	{r4, pc}
 644              	.LVL30:
 645              	.L30:
 876:Core/Src/main.c ****   }
 646              		.loc 1 876 5 is_stmt 1 view .LVU178
 647 0016 0648     		ldr	r0, .L33
 648              	.LVL31:
 876:Core/Src/main.c ****   }
 649              		.loc 1 876 5 is_stmt 0 view .LVU179
 650 0018 FFF7FEFF 		bl	CNC_Stop
 651              	.LVL32:
 652 001c F4E7     		b	.L26
 653              	.L31:
 880:Core/Src/main.c ****     CNC_Limit_X(&hmi_info);
ARM GAS  /tmp/ccoDWd4X.s 			page 28


 654              		.loc 1 880 5 is_stmt 1 view .LVU180
 655 001e 0448     		ldr	r0, .L33
 656 0020 FFF7FEFF 		bl	CNC_Limit_X
 657              	.LVL33:
 658 0024 F3E7     		b	.L27
 659              	.L32:
 884:Core/Src/main.c ****     CNC_Limit_Y(&hmi_info);
 660              		.loc 1 884 5 view .LVU181
 661 0026 0248     		ldr	r0, .L33
 662 0028 FFF7FEFF 		bl	CNC_Limit_Y
 663              	.LVL34:
 664              		.loc 1 886 1 is_stmt 0 view .LVU182
 665 002c F2E7     		b	.L25
 666              	.L34:
 667 002e 00BF     		.align	2
 668              	.L33:
 669 0030 00000000 		.word	.LANCHOR0
 670              		.cfi_endproc
 671              	.LFE308:
 673              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 674              		.align	2
 675              	.LC0:
 676 0000 71756920 		.ascii	"qui si \303\250\012rotto tutto\000"
 676      736920C3 
 676      A80A726F 
 676      74746F20 
 676      74757474 
 677              		.section	.text.Error_Handler,"ax",%progbits
 678              		.align	1
 679              		.global	Error_Handler
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	Error_Handler:
 685              	.LFB309:
 887:Core/Src/main.c **** /* USER CODE END 4 */
 888:Core/Src/main.c **** 
 889:Core/Src/main.c **** /**
 890:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 891:Core/Src/main.c ****   * @retval None
 892:Core/Src/main.c ****   */
 893:Core/Src/main.c **** void Error_Handler(void)
 894:Core/Src/main.c **** {
 686              		.loc 1 894 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ Volatile: function does not return.
 689              		@ args = 0, pretend = 0, frame = 24
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 00B5     		push	{lr}
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 14, -4
 694 0002 87B0     		sub	sp, sp, #28
 695              		.cfi_def_cfa_offset 32
 895:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 896:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 897:Core/Src/main.c ****   __disable_irq();
 696              		.loc 1 897 3 view .LVU184
ARM GAS  /tmp/ccoDWd4X.s 			page 29


 697              	.LBB11:
 698              	.LBI11:
 699              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccoDWd4X.s 			page 30


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccoDWd4X.s 			page 31


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccoDWd4X.s 			page 32


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 700              		.loc 2 207 27 view .LVU185
 701              	.LBB12:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 702              		.loc 2 209 3 view .LVU186
 703              		.syntax unified
 704              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 705 0004 72B6     		cpsid i
 706              	@ 0 "" 2
 707              		.thumb
 708              		.syntax unified
 709              	.LBE12:
 710              	.LBE11:
 898:Core/Src/main.c ****   char textStr[] = "qui si è\nrotto tutto";
 711              		.loc 1 898 3 view .LVU187
 712              		.loc 1 898 8 is_stmt 0 view .LVU188
 713 0006 EC46     		mov	ip, sp
 714 0008 094C     		ldr	r4, .L38
ARM GAS  /tmp/ccoDWd4X.s 			page 33


 715 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 716 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 717 0010 94E80300 		ldm	r4, {r0, r1}
 718 0014 4CF8040B 		str	r0, [ip], #4
 719 0018 ACF80010 		strh	r1, [ip]	@ movhi
 899:Core/Src/main.c ****   clearLCD();
 720              		.loc 1 899 3 is_stmt 1 view .LVU189
 721 001c FFF7FEFF 		bl	clearLCD
 722              	.LVL35:
 900:Core/Src/main.c ****   setCursor(0,  0);
 723              		.loc 1 900 3 view .LVU190
 724 0020 0021     		movs	r1, #0
 725 0022 0846     		mov	r0, r1
 726 0024 FFF7FEFF 		bl	setCursor
 727              	.LVL36:
 901:Core/Src/main.c ****   writeLCD(textStr);
 728              		.loc 1 901 3 view .LVU191
 729 0028 6846     		mov	r0, sp
 730 002a FFF7FEFF 		bl	writeLCD
 731              	.LVL37:
 732              	.L36:
 902:Core/Src/main.c ****   while (1)
 733              		.loc 1 902 3 discriminator 1 view .LVU192
 903:Core/Src/main.c ****   {
 904:Core/Src/main.c ****   }
 734              		.loc 1 904 3 discriminator 1 view .LVU193
 902:Core/Src/main.c ****   while (1)
 735              		.loc 1 902 9 discriminator 1 view .LVU194
 736 002e FEE7     		b	.L36
 737              	.L39:
 738              		.align	2
 739              	.L38:
 740 0030 00000000 		.word	.LC0
 741              		.cfi_endproc
 742              	.LFE309:
 744              		.section	.text.MX_ADC1_Init,"ax",%progbits
 745              		.align	1
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 750              	MX_ADC1_Init:
 751              	.LFB294:
 258:Core/Src/main.c **** 
 752              		.loc 1 258 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 24
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 00B5     		push	{lr}
 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 14, -4
 759 0002 87B0     		sub	sp, sp, #28
 760              		.cfi_def_cfa_offset 32
 264:Core/Src/main.c **** 
 761              		.loc 1 264 3 view .LVU196
 264:Core/Src/main.c **** 
 762              		.loc 1 264 26 is_stmt 0 view .LVU197
 763 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccoDWd4X.s 			page 34


 764 0006 0093     		str	r3, [sp]
 765 0008 0193     		str	r3, [sp, #4]
 766 000a 0293     		str	r3, [sp, #8]
 767 000c 0393     		str	r3, [sp, #12]
 768 000e 0493     		str	r3, [sp, #16]
 769 0010 0593     		str	r3, [sp, #20]
 272:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 770              		.loc 1 272 3 is_stmt 1 view .LVU198
 272:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 771              		.loc 1 272 18 is_stmt 0 view .LVU199
 772 0012 4448     		ldr	r0, .L60
 773 0014 444A     		ldr	r2, .L60+4
 774 0016 0260     		str	r2, [r0]
 273:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 775              		.loc 1 273 3 is_stmt 1 view .LVU200
 273:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 776              		.loc 1 273 29 is_stmt 0 view .LVU201
 777 0018 4360     		str	r3, [r0, #4]
 274:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 778              		.loc 1 274 3 is_stmt 1 view .LVU202
 274:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 779              		.loc 1 274 25 is_stmt 0 view .LVU203
 780 001a 8360     		str	r3, [r0, #8]
 275:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 781              		.loc 1 275 3 is_stmt 1 view .LVU204
 275:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 782              		.loc 1 275 24 is_stmt 0 view .LVU205
 783 001c C360     		str	r3, [r0, #12]
 276:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 784              		.loc 1 276 3 is_stmt 1 view .LVU206
 276:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 785              		.loc 1 276 27 is_stmt 0 view .LVU207
 786 001e 0122     		movs	r2, #1
 787 0020 0261     		str	r2, [r0, #16]
 277:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 788              		.loc 1 277 3 is_stmt 1 view .LVU208
 277:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 789              		.loc 1 277 27 is_stmt 0 view .LVU209
 790 0022 0821     		movs	r1, #8
 791 0024 4161     		str	r1, [r0, #20]
 278:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 792              		.loc 1 278 3 is_stmt 1 view .LVU210
 278:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 793              		.loc 1 278 31 is_stmt 0 view .LVU211
 794 0026 0376     		strb	r3, [r0, #24]
 279:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 795              		.loc 1 279 3 is_stmt 1 view .LVU212
 279:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 796              		.loc 1 279 33 is_stmt 0 view .LVU213
 797 0028 4276     		strb	r2, [r0, #25]
 280:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 798              		.loc 1 280 3 is_stmt 1 view .LVU214
 280:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 799              		.loc 1 280 30 is_stmt 0 view .LVU215
 800 002a C161     		str	r1, [r0, #28]
 281:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 801              		.loc 1 281 3 is_stmt 1 view .LVU216
ARM GAS  /tmp/ccoDWd4X.s 			page 35


 281:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 802              		.loc 1 281 36 is_stmt 0 view .LVU217
 803 002c 80F82030 		strb	r3, [r0, #32]
 282:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 804              		.loc 1 282 3 is_stmt 1 view .LVU218
 282:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 805              		.loc 1 282 31 is_stmt 0 view .LVU219
 806 0030 8362     		str	r3, [r0, #40]
 283:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 807              		.loc 1 283 3 is_stmt 1 view .LVU220
 283:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 808              		.loc 1 283 35 is_stmt 0 view .LVU221
 809 0032 C362     		str	r3, [r0, #44]
 284:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 810              		.loc 1 284 3 is_stmt 1 view .LVU222
 284:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 811              		.loc 1 284 36 is_stmt 0 view .LVU223
 812 0034 80F83020 		strb	r2, [r0, #48]
 285:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 813              		.loc 1 285 3 is_stmt 1 view .LVU224
 285:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 814              		.loc 1 285 22 is_stmt 0 view .LVU225
 815 0038 4FF48052 		mov	r2, #4096
 816 003c 4263     		str	r2, [r0, #52]
 286:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 817              		.loc 1 286 3 is_stmt 1 view .LVU226
 286:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 818              		.loc 1 286 31 is_stmt 0 view .LVU227
 819 003e 80F83830 		strb	r3, [r0, #56]
 287:Core/Src/main.c ****   {
 820              		.loc 1 287 3 is_stmt 1 view .LVU228
 287:Core/Src/main.c ****   {
 821              		.loc 1 287 7 is_stmt 0 view .LVU229
 822 0042 FFF7FEFF 		bl	HAL_ADC_Init
 823              	.LVL38:
 287:Core/Src/main.c ****   {
 824              		.loc 1 287 6 view .LVU230
 825 0046 0028     		cmp	r0, #0
 826 0048 5AD1     		bne	.L51
 294:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 827              		.loc 1 294 3 is_stmt 1 view .LVU231
 294:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 828              		.loc 1 294 19 is_stmt 0 view .LVU232
 829 004a 384B     		ldr	r3, .L60+8
 830 004c 0093     		str	r3, [sp]
 295:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 831              		.loc 1 295 3 is_stmt 1 view .LVU233
 295:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 832              		.loc 1 295 16 is_stmt 0 view .LVU234
 833 004e 0623     		movs	r3, #6
 834 0050 0193     		str	r3, [sp, #4]
 296:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 835              		.loc 1 296 3 is_stmt 1 view .LVU235
 296:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 836              		.loc 1 296 24 is_stmt 0 view .LVU236
 837 0052 0723     		movs	r3, #7
 838 0054 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccoDWd4X.s 			page 36


 297:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 839              		.loc 1 297 3 is_stmt 1 view .LVU237
 297:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 840              		.loc 1 297 22 is_stmt 0 view .LVU238
 841 0056 7F23     		movs	r3, #127
 842 0058 0393     		str	r3, [sp, #12]
 298:Core/Src/main.c ****   sConfig.Offset = 0;
 843              		.loc 1 298 3 is_stmt 1 view .LVU239
 298:Core/Src/main.c ****   sConfig.Offset = 0;
 844              		.loc 1 298 24 is_stmt 0 view .LVU240
 845 005a 0423     		movs	r3, #4
 846 005c 0493     		str	r3, [sp, #16]
 299:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 847              		.loc 1 299 3 is_stmt 1 view .LVU241
 299:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 848              		.loc 1 299 18 is_stmt 0 view .LVU242
 849 005e 0023     		movs	r3, #0
 850 0060 0593     		str	r3, [sp, #20]
 300:Core/Src/main.c ****   {
 851              		.loc 1 300 3 is_stmt 1 view .LVU243
 300:Core/Src/main.c ****   {
 852              		.loc 1 300 7 is_stmt 0 view .LVU244
 853 0062 6946     		mov	r1, sp
 854 0064 2F48     		ldr	r0, .L60
 855 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 856              	.LVL39:
 300:Core/Src/main.c ****   {
 857              		.loc 1 300 6 view .LVU245
 858 006a 0028     		cmp	r0, #0
 859 006c 4AD1     		bne	.L52
 307:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 860              		.loc 1 307 3 is_stmt 1 view .LVU246
 307:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 861              		.loc 1 307 19 is_stmt 0 view .LVU247
 862 006e 304B     		ldr	r3, .L60+12
 863 0070 0093     		str	r3, [sp]
 308:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 864              		.loc 1 308 3 is_stmt 1 view .LVU248
 308:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 865              		.loc 1 308 16 is_stmt 0 view .LVU249
 866 0072 0C23     		movs	r3, #12
 867 0074 0193     		str	r3, [sp, #4]
 309:Core/Src/main.c ****   {
 868              		.loc 1 309 3 is_stmt 1 view .LVU250
 309:Core/Src/main.c ****   {
 869              		.loc 1 309 7 is_stmt 0 view .LVU251
 870 0076 6946     		mov	r1, sp
 871 0078 2A48     		ldr	r0, .L60
 872 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 873              	.LVL40:
 309:Core/Src/main.c ****   {
 874              		.loc 1 309 6 view .LVU252
 875 007e 0028     		cmp	r0, #0
 876 0080 42D1     		bne	.L53
 316:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 877              		.loc 1 316 3 is_stmt 1 view .LVU253
 316:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
ARM GAS  /tmp/ccoDWd4X.s 			page 37


 878              		.loc 1 316 19 is_stmt 0 view .LVU254
 879 0082 2C4B     		ldr	r3, .L60+16
 880 0084 0093     		str	r3, [sp]
 317:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 881              		.loc 1 317 3 is_stmt 1 view .LVU255
 317:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 882              		.loc 1 317 16 is_stmt 0 view .LVU256
 883 0086 1223     		movs	r3, #18
 884 0088 0193     		str	r3, [sp, #4]
 318:Core/Src/main.c ****   {
 885              		.loc 1 318 3 is_stmt 1 view .LVU257
 318:Core/Src/main.c ****   {
 886              		.loc 1 318 7 is_stmt 0 view .LVU258
 887 008a 6946     		mov	r1, sp
 888 008c 2548     		ldr	r0, .L60
 889 008e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 890              	.LVL41:
 318:Core/Src/main.c ****   {
 891              		.loc 1 318 6 view .LVU259
 892 0092 0028     		cmp	r0, #0
 893 0094 3AD1     		bne	.L54
 325:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 894              		.loc 1 325 3 is_stmt 1 view .LVU260
 325:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 895              		.loc 1 325 19 is_stmt 0 view .LVU261
 896 0096 284B     		ldr	r3, .L60+20
 897 0098 0093     		str	r3, [sp]
 326:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 898              		.loc 1 326 3 is_stmt 1 view .LVU262
 326:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 899              		.loc 1 326 16 is_stmt 0 view .LVU263
 900 009a 1823     		movs	r3, #24
 901 009c 0193     		str	r3, [sp, #4]
 327:Core/Src/main.c ****   {
 902              		.loc 1 327 3 is_stmt 1 view .LVU264
 327:Core/Src/main.c ****   {
 903              		.loc 1 327 7 is_stmt 0 view .LVU265
 904 009e 6946     		mov	r1, sp
 905 00a0 2048     		ldr	r0, .L60
 906 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 907              	.LVL42:
 327:Core/Src/main.c ****   {
 908              		.loc 1 327 6 view .LVU266
 909 00a6 0028     		cmp	r0, #0
 910 00a8 32D1     		bne	.L55
 334:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 911              		.loc 1 334 3 is_stmt 1 view .LVU267
 334:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 912              		.loc 1 334 19 is_stmt 0 view .LVU268
 913 00aa 244B     		ldr	r3, .L60+24
 914 00ac 0093     		str	r3, [sp]
 335:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 915              		.loc 1 335 3 is_stmt 1 view .LVU269
 335:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 916              		.loc 1 335 16 is_stmt 0 view .LVU270
 917 00ae 4FF48073 		mov	r3, #256
 918 00b2 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccoDWd4X.s 			page 38


 336:Core/Src/main.c ****   {
 919              		.loc 1 336 3 is_stmt 1 view .LVU271
 336:Core/Src/main.c ****   {
 920              		.loc 1 336 7 is_stmt 0 view .LVU272
 921 00b4 6946     		mov	r1, sp
 922 00b6 1B48     		ldr	r0, .L60
 923 00b8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 924              	.LVL43:
 336:Core/Src/main.c ****   {
 925              		.loc 1 336 6 view .LVU273
 926 00bc 50BB     		cbnz	r0, .L56
 343:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 927              		.loc 1 343 3 is_stmt 1 view .LVU274
 343:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 928              		.loc 1 343 19 is_stmt 0 view .LVU275
 929 00be 204B     		ldr	r3, .L60+28
 930 00c0 0093     		str	r3, [sp]
 344:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 931              		.loc 1 344 3 is_stmt 1 view .LVU276
 344:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 932              		.loc 1 344 16 is_stmt 0 view .LVU277
 933 00c2 4FF48373 		mov	r3, #262
 934 00c6 0193     		str	r3, [sp, #4]
 345:Core/Src/main.c ****   {
 935              		.loc 1 345 3 is_stmt 1 view .LVU278
 345:Core/Src/main.c ****   {
 936              		.loc 1 345 7 is_stmt 0 view .LVU279
 937 00c8 6946     		mov	r1, sp
 938 00ca 1648     		ldr	r0, .L60
 939 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 940              	.LVL44:
 345:Core/Src/main.c ****   {
 941              		.loc 1 345 6 view .LVU280
 942 00d0 10BB     		cbnz	r0, .L57
 352:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 943              		.loc 1 352 3 is_stmt 1 view .LVU281
 352:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 944              		.loc 1 352 19 is_stmt 0 view .LVU282
 945 00d2 1C4B     		ldr	r3, .L60+32
 946 00d4 0093     		str	r3, [sp]
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 947              		.loc 1 353 3 is_stmt 1 view .LVU283
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 948              		.loc 1 353 16 is_stmt 0 view .LVU284
 949 00d6 4FF48673 		mov	r3, #268
 950 00da 0193     		str	r3, [sp, #4]
 354:Core/Src/main.c ****   {
 951              		.loc 1 354 3 is_stmt 1 view .LVU285
 354:Core/Src/main.c ****   {
 952              		.loc 1 354 7 is_stmt 0 view .LVU286
 953 00dc 6946     		mov	r1, sp
 954 00de 1148     		ldr	r0, .L60
 955 00e0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 956              	.LVL45:
 354:Core/Src/main.c ****   {
 957              		.loc 1 354 6 view .LVU287
 958 00e4 D0B9     		cbnz	r0, .L58
ARM GAS  /tmp/ccoDWd4X.s 			page 39


 361:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 959              		.loc 1 361 3 is_stmt 1 view .LVU288
 361:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 960              		.loc 1 361 19 is_stmt 0 view .LVU289
 961 00e6 184B     		ldr	r3, .L60+36
 962 00e8 0093     		str	r3, [sp]
 362:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 963              		.loc 1 362 3 is_stmt 1 view .LVU290
 362:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 964              		.loc 1 362 16 is_stmt 0 view .LVU291
 965 00ea 4FF48973 		mov	r3, #274
 966 00ee 0193     		str	r3, [sp, #4]
 363:Core/Src/main.c ****   {
 967              		.loc 1 363 3 is_stmt 1 view .LVU292
 363:Core/Src/main.c ****   {
 968              		.loc 1 363 7 is_stmt 0 view .LVU293
 969 00f0 6946     		mov	r1, sp
 970 00f2 0C48     		ldr	r0, .L60
 971 00f4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 972              	.LVL46:
 363:Core/Src/main.c ****   {
 973              		.loc 1 363 6 view .LVU294
 974 00f8 90B9     		cbnz	r0, .L59
 371:Core/Src/main.c **** 
 975              		.loc 1 371 1 view .LVU295
 976 00fa 07B0     		add	sp, sp, #28
 977              		.cfi_remember_state
 978              		.cfi_def_cfa_offset 4
 979              		@ sp needed
 980 00fc 5DF804FB 		ldr	pc, [sp], #4
 981              	.L51:
 982              		.cfi_restore_state
 289:Core/Src/main.c ****   }
 983              		.loc 1 289 5 is_stmt 1 view .LVU296
 984 0100 FFF7FEFF 		bl	Error_Handler
 985              	.LVL47:
 986              	.L52:
 302:Core/Src/main.c ****   }
 987              		.loc 1 302 5 view .LVU297
 988 0104 FFF7FEFF 		bl	Error_Handler
 989              	.LVL48:
 990              	.L53:
 311:Core/Src/main.c ****   }
 991              		.loc 1 311 5 view .LVU298
 992 0108 FFF7FEFF 		bl	Error_Handler
 993              	.LVL49:
 994              	.L54:
 320:Core/Src/main.c ****   }
 995              		.loc 1 320 5 view .LVU299
 996 010c FFF7FEFF 		bl	Error_Handler
 997              	.LVL50:
 998              	.L55:
 329:Core/Src/main.c ****   }
 999              		.loc 1 329 5 view .LVU300
 1000 0110 FFF7FEFF 		bl	Error_Handler
 1001              	.LVL51:
 1002              	.L56:
ARM GAS  /tmp/ccoDWd4X.s 			page 40


 338:Core/Src/main.c ****   }
 1003              		.loc 1 338 5 view .LVU301
 1004 0114 FFF7FEFF 		bl	Error_Handler
 1005              	.LVL52:
 1006              	.L57:
 347:Core/Src/main.c ****   }
 1007              		.loc 1 347 5 view .LVU302
 1008 0118 FFF7FEFF 		bl	Error_Handler
 1009              	.LVL53:
 1010              	.L58:
 356:Core/Src/main.c ****   }
 1011              		.loc 1 356 5 view .LVU303
 1012 011c FFF7FEFF 		bl	Error_Handler
 1013              	.LVL54:
 1014              	.L59:
 365:Core/Src/main.c ****   }
 1015              		.loc 1 365 5 view .LVU304
 1016 0120 FFF7FEFF 		bl	Error_Handler
 1017              	.LVL55:
 1018              	.L61:
 1019              		.align	2
 1020              	.L60:
 1021 0124 00000000 		.word	.LANCHOR6
 1022 0128 00000450 		.word	1342439424
 1023 012c 02003004 		.word	70254594
 1024 0130 04006008 		.word	140509188
 1025 0134 0800900C 		.word	210763784
 1026 0138 1000C010 		.word	281018384
 1027 013c 0002B025 		.word	632291840
 1028 0140 0004002A 		.word	704644096
 1029 0144 00106032 		.word	845156352
 1030 0148 00209036 		.word	915415040
 1031              		.cfi_endproc
 1032              	.LFE294:
 1034              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1035              		.align	1
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1040              	MX_USART1_UART_Init:
 1041              	.LFB299:
 604:Core/Src/main.c **** 
 1042              		.loc 1 604 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046 0000 08B5     		push	{r3, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 3, -8
 1049              		.cfi_offset 14, -4
 613:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1050              		.loc 1 613 3 view .LVU306
 613:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1051              		.loc 1 613 19 is_stmt 0 view .LVU307
 1052 0002 0B48     		ldr	r0, .L66
 1053 0004 0B4B     		ldr	r3, .L66+4
 1054 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccoDWd4X.s 			page 41


 614:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1055              		.loc 1 614 3 is_stmt 1 view .LVU308
 614:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1056              		.loc 1 614 24 is_stmt 0 view .LVU309
 1057 0008 4FF4E133 		mov	r3, #115200
 1058 000c 4360     		str	r3, [r0, #4]
 615:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1059              		.loc 1 615 3 is_stmt 1 view .LVU310
 615:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1060              		.loc 1 615 26 is_stmt 0 view .LVU311
 1061 000e 0023     		movs	r3, #0
 1062 0010 8360     		str	r3, [r0, #8]
 616:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1063              		.loc 1 616 3 is_stmt 1 view .LVU312
 616:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1064              		.loc 1 616 24 is_stmt 0 view .LVU313
 1065 0012 C360     		str	r3, [r0, #12]
 617:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1066              		.loc 1 617 3 is_stmt 1 view .LVU314
 617:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1067              		.loc 1 617 22 is_stmt 0 view .LVU315
 1068 0014 0361     		str	r3, [r0, #16]
 618:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1069              		.loc 1 618 3 is_stmt 1 view .LVU316
 618:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1070              		.loc 1 618 20 is_stmt 0 view .LVU317
 1071 0016 0C22     		movs	r2, #12
 1072 0018 4261     		str	r2, [r0, #20]
 619:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1073              		.loc 1 619 3 is_stmt 1 view .LVU318
 619:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1074              		.loc 1 619 25 is_stmt 0 view .LVU319
 1075 001a 8361     		str	r3, [r0, #24]
 620:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1076              		.loc 1 620 3 is_stmt 1 view .LVU320
 620:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1077              		.loc 1 620 28 is_stmt 0 view .LVU321
 1078 001c C361     		str	r3, [r0, #28]
 621:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1079              		.loc 1 621 3 is_stmt 1 view .LVU322
 621:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1080              		.loc 1 621 30 is_stmt 0 view .LVU323
 1081 001e 0362     		str	r3, [r0, #32]
 622:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1082              		.loc 1 622 3 is_stmt 1 view .LVU324
 622:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1083              		.loc 1 622 38 is_stmt 0 view .LVU325
 1084 0020 4362     		str	r3, [r0, #36]
 623:Core/Src/main.c ****   {
 1085              		.loc 1 623 3 is_stmt 1 view .LVU326
 623:Core/Src/main.c ****   {
 1086              		.loc 1 623 7 is_stmt 0 view .LVU327
 1087 0022 FFF7FEFF 		bl	HAL_UART_Init
 1088              	.LVL56:
 623:Core/Src/main.c ****   {
 1089              		.loc 1 623 6 view .LVU328
 1090 0026 00B9     		cbnz	r0, .L65
ARM GAS  /tmp/ccoDWd4X.s 			page 42


 631:Core/Src/main.c **** 
 1091              		.loc 1 631 1 view .LVU329
 1092 0028 08BD     		pop	{r3, pc}
 1093              	.L65:
 625:Core/Src/main.c ****   }
 1094              		.loc 1 625 5 is_stmt 1 view .LVU330
 1095 002a FFF7FEFF 		bl	Error_Handler
 1096              	.LVL57:
 1097              	.L67:
 1098 002e 00BF     		.align	2
 1099              	.L66:
 1100 0030 00000000 		.word	.LANCHOR2
 1101 0034 00380140 		.word	1073821696
 1102              		.cfi_endproc
 1103              	.LFE299:
 1105              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1106              		.align	1
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1111              	MX_TIM1_Init:
 1112              	.LFB295:
 379:Core/Src/main.c **** 
 1113              		.loc 1 379 1 view -0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 104
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117 0000 10B5     		push	{r4, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 4, -8
 1120              		.cfi_offset 14, -4
 1121 0002 9AB0     		sub	sp, sp, #104
 1122              		.cfi_def_cfa_offset 112
 385:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1123              		.loc 1 385 3 view .LVU332
 385:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1124              		.loc 1 385 26 is_stmt 0 view .LVU333
 1125 0004 0024     		movs	r4, #0
 1126 0006 1694     		str	r4, [sp, #88]
 1127 0008 1794     		str	r4, [sp, #92]
 1128 000a 1894     		str	r4, [sp, #96]
 1129 000c 1994     		str	r4, [sp, #100]
 386:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1130              		.loc 1 386 3 is_stmt 1 view .LVU334
 386:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1131              		.loc 1 386 27 is_stmt 0 view .LVU335
 1132 000e 1394     		str	r4, [sp, #76]
 1133 0010 1494     		str	r4, [sp, #80]
 1134 0012 1594     		str	r4, [sp, #84]
 387:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1135              		.loc 1 387 3 is_stmt 1 view .LVU336
 387:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1136              		.loc 1 387 22 is_stmt 0 view .LVU337
 1137 0014 0C94     		str	r4, [sp, #48]
 1138 0016 0D94     		str	r4, [sp, #52]
 1139 0018 0E94     		str	r4, [sp, #56]
 1140 001a 0F94     		str	r4, [sp, #60]
ARM GAS  /tmp/ccoDWd4X.s 			page 43


 1141 001c 1094     		str	r4, [sp, #64]
 1142 001e 1194     		str	r4, [sp, #68]
 1143 0020 1294     		str	r4, [sp, #72]
 388:Core/Src/main.c **** 
 1144              		.loc 1 388 3 is_stmt 1 view .LVU338
 388:Core/Src/main.c **** 
 1145              		.loc 1 388 34 is_stmt 0 view .LVU339
 1146 0022 2C22     		movs	r2, #44
 1147 0024 2146     		mov	r1, r4
 1148 0026 01A8     		add	r0, sp, #4
 1149 0028 FFF7FEFF 		bl	memset
 1150              	.LVL58:
 393:Core/Src/main.c ****   htim1.Init.Prescaler = 9;
 1151              		.loc 1 393 3 is_stmt 1 view .LVU340
 393:Core/Src/main.c ****   htim1.Init.Prescaler = 9;
 1152              		.loc 1 393 18 is_stmt 0 view .LVU341
 1153 002c 3148     		ldr	r0, .L82
 1154 002e 324B     		ldr	r3, .L82+4
 1155 0030 0360     		str	r3, [r0]
 394:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1156              		.loc 1 394 3 is_stmt 1 view .LVU342
 394:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1157              		.loc 1 394 24 is_stmt 0 view .LVU343
 1158 0032 0923     		movs	r3, #9
 1159 0034 4360     		str	r3, [r0, #4]
 395:Core/Src/main.c ****   htim1.Init.Period = 400;
 1160              		.loc 1 395 3 is_stmt 1 view .LVU344
 395:Core/Src/main.c ****   htim1.Init.Period = 400;
 1161              		.loc 1 395 26 is_stmt 0 view .LVU345
 1162 0036 8460     		str	r4, [r0, #8]
 396:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1163              		.loc 1 396 3 is_stmt 1 view .LVU346
 396:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1164              		.loc 1 396 21 is_stmt 0 view .LVU347
 1165 0038 4FF4C873 		mov	r3, #400
 1166 003c C360     		str	r3, [r0, #12]
 397:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1167              		.loc 1 397 3 is_stmt 1 view .LVU348
 397:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1168              		.loc 1 397 28 is_stmt 0 view .LVU349
 1169 003e 0461     		str	r4, [r0, #16]
 398:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1170              		.loc 1 398 3 is_stmt 1 view .LVU350
 398:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1171              		.loc 1 398 32 is_stmt 0 view .LVU351
 1172 0040 4461     		str	r4, [r0, #20]
 399:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1173              		.loc 1 399 3 is_stmt 1 view .LVU352
 399:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1174              		.loc 1 399 32 is_stmt 0 view .LVU353
 1175 0042 8023     		movs	r3, #128
 1176 0044 8361     		str	r3, [r0, #24]
 400:Core/Src/main.c ****   {
 1177              		.loc 1 400 3 is_stmt 1 view .LVU354
 400:Core/Src/main.c ****   {
 1178              		.loc 1 400 7 is_stmt 0 view .LVU355
 1179 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/ccoDWd4X.s 			page 44


 1180              	.LVL59:
 400:Core/Src/main.c ****   {
 1181              		.loc 1 400 6 view .LVU356
 1182 004a 0028     		cmp	r0, #0
 1183 004c 45D1     		bne	.L76
 404:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1184              		.loc 1 404 3 is_stmt 1 view .LVU357
 404:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1185              		.loc 1 404 34 is_stmt 0 view .LVU358
 1186 004e 4FF48053 		mov	r3, #4096
 1187 0052 1693     		str	r3, [sp, #88]
 405:Core/Src/main.c ****   {
 1188              		.loc 1 405 3 is_stmt 1 view .LVU359
 405:Core/Src/main.c ****   {
 1189              		.loc 1 405 7 is_stmt 0 view .LVU360
 1190 0054 16A9     		add	r1, sp, #88
 1191 0056 2748     		ldr	r0, .L82
 1192 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1193              	.LVL60:
 405:Core/Src/main.c ****   {
 1194              		.loc 1 405 6 view .LVU361
 1195 005c 0028     		cmp	r0, #0
 1196 005e 3ED1     		bne	.L77
 409:Core/Src/main.c ****   {
 1197              		.loc 1 409 3 is_stmt 1 view .LVU362
 409:Core/Src/main.c ****   {
 1198              		.loc 1 409 7 is_stmt 0 view .LVU363
 1199 0060 2448     		ldr	r0, .L82
 1200 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1201              	.LVL61:
 409:Core/Src/main.c ****   {
 1202              		.loc 1 409 6 view .LVU364
 1203 0066 0028     		cmp	r0, #0
 1204 0068 3BD1     		bne	.L78
 413:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 1205              		.loc 1 413 3 is_stmt 1 view .LVU365
 413:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 1206              		.loc 1 413 37 is_stmt 0 view .LVU366
 1207 006a 2023     		movs	r3, #32
 1208 006c 1393     		str	r3, [sp, #76]
 414:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1209              		.loc 1 414 3 is_stmt 1 view .LVU367
 414:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1210              		.loc 1 414 38 is_stmt 0 view .LVU368
 1211 006e 4FF40013 		mov	r3, #2097152
 1212 0072 1493     		str	r3, [sp, #80]
 415:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1213              		.loc 1 415 3 is_stmt 1 view .LVU369
 415:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1214              		.loc 1 415 33 is_stmt 0 view .LVU370
 1215 0074 0023     		movs	r3, #0
 1216 0076 1593     		str	r3, [sp, #84]
 416:Core/Src/main.c ****   {
 1217              		.loc 1 416 3 is_stmt 1 view .LVU371
 416:Core/Src/main.c ****   {
 1218              		.loc 1 416 7 is_stmt 0 view .LVU372
 1219 0078 13A9     		add	r1, sp, #76
ARM GAS  /tmp/ccoDWd4X.s 			page 45


 1220 007a 1E48     		ldr	r0, .L82
 1221 007c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1222              	.LVL62:
 416:Core/Src/main.c ****   {
 1223              		.loc 1 416 6 view .LVU373
 1224 0080 0028     		cmp	r0, #0
 1225 0082 30D1     		bne	.L79
 420:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1226              		.loc 1 420 3 is_stmt 1 view .LVU374
 420:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1227              		.loc 1 420 20 is_stmt 0 view .LVU375
 1228 0084 6023     		movs	r3, #96
 1229 0086 0C93     		str	r3, [sp, #48]
 421:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1230              		.loc 1 421 3 is_stmt 1 view .LVU376
 421:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1231              		.loc 1 421 19 is_stmt 0 view .LVU377
 1232 0088 4FF4FA73 		mov	r3, #500
 1233 008c 0D93     		str	r3, [sp, #52]
 422:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 1234              		.loc 1 422 3 is_stmt 1 view .LVU378
 422:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 1235              		.loc 1 422 24 is_stmt 0 view .LVU379
 1236 008e 0023     		movs	r3, #0
 1237 0090 0E93     		str	r3, [sp, #56]
 423:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1238              		.loc 1 423 3 is_stmt 1 view .LVU380
 423:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1239              		.loc 1 423 25 is_stmt 0 view .LVU381
 1240 0092 0822     		movs	r2, #8
 1241 0094 0F92     		str	r2, [sp, #60]
 424:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1242              		.loc 1 424 3 is_stmt 1 view .LVU382
 424:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1243              		.loc 1 424 24 is_stmt 0 view .LVU383
 1244 0096 1093     		str	r3, [sp, #64]
 425:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1245              		.loc 1 425 3 is_stmt 1 view .LVU384
 425:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1246              		.loc 1 425 25 is_stmt 0 view .LVU385
 1247 0098 1193     		str	r3, [sp, #68]
 426:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1248              		.loc 1 426 3 is_stmt 1 view .LVU386
 426:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1249              		.loc 1 426 26 is_stmt 0 view .LVU387
 1250 009a 1293     		str	r3, [sp, #72]
 427:Core/Src/main.c ****   {
 1251              		.loc 1 427 3 is_stmt 1 view .LVU388
 427:Core/Src/main.c ****   {
 1252              		.loc 1 427 7 is_stmt 0 view .LVU389
 1253 009c 0CA9     		add	r1, sp, #48
 1254 009e 1548     		ldr	r0, .L82
 1255 00a0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1256              	.LVL63:
 427:Core/Src/main.c ****   {
 1257              		.loc 1 427 6 view .LVU390
 1258 00a4 08BB     		cbnz	r0, .L80
ARM GAS  /tmp/ccoDWd4X.s 			page 46


 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1259              		.loc 1 431 3 is_stmt 1 view .LVU391
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1260              		.loc 1 431 40 is_stmt 0 view .LVU392
 1261 00a6 0023     		movs	r3, #0
 1262 00a8 0193     		str	r3, [sp, #4]
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1263              		.loc 1 432 3 is_stmt 1 view .LVU393
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1264              		.loc 1 432 41 is_stmt 0 view .LVU394
 1265 00aa 0293     		str	r3, [sp, #8]
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1266              		.loc 1 433 3 is_stmt 1 view .LVU395
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1267              		.loc 1 433 34 is_stmt 0 view .LVU396
 1268 00ac 0393     		str	r3, [sp, #12]
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1269              		.loc 1 434 3 is_stmt 1 view .LVU397
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1270              		.loc 1 434 33 is_stmt 0 view .LVU398
 1271 00ae 0493     		str	r3, [sp, #16]
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1272              		.loc 1 435 3 is_stmt 1 view .LVU399
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1273              		.loc 1 435 35 is_stmt 0 view .LVU400
 1274 00b0 0593     		str	r3, [sp, #20]
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1275              		.loc 1 436 3 is_stmt 1 view .LVU401
 436:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1276              		.loc 1 436 38 is_stmt 0 view .LVU402
 1277 00b2 4FF40052 		mov	r2, #8192
 1278 00b6 0692     		str	r2, [sp, #24]
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1279              		.loc 1 437 3 is_stmt 1 view .LVU403
 437:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1280              		.loc 1 437 36 is_stmt 0 view .LVU404
 1281 00b8 0793     		str	r3, [sp, #28]
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1282              		.loc 1 438 3 is_stmt 1 view .LVU405
 438:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1283              		.loc 1 438 36 is_stmt 0 view .LVU406
 1284 00ba 0893     		str	r3, [sp, #32]
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1285              		.loc 1 439 3 is_stmt 1 view .LVU407
 439:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1286              		.loc 1 439 39 is_stmt 0 view .LVU408
 1287 00bc 4FF00072 		mov	r2, #33554432
 1288 00c0 0992     		str	r2, [sp, #36]
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1289              		.loc 1 440 3 is_stmt 1 view .LVU409
 440:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1290              		.loc 1 440 37 is_stmt 0 view .LVU410
 1291 00c2 0A93     		str	r3, [sp, #40]
 441:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1292              		.loc 1 441 3 is_stmt 1 view .LVU411
 441:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1293              		.loc 1 441 40 is_stmt 0 view .LVU412
ARM GAS  /tmp/ccoDWd4X.s 			page 47


 1294 00c4 0B93     		str	r3, [sp, #44]
 442:Core/Src/main.c ****   {
 1295              		.loc 1 442 3 is_stmt 1 view .LVU413
 442:Core/Src/main.c ****   {
 1296              		.loc 1 442 7 is_stmt 0 view .LVU414
 1297 00c6 01A9     		add	r1, sp, #4
 1298 00c8 0A48     		ldr	r0, .L82
 1299 00ca FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1300              	.LVL64:
 442:Core/Src/main.c ****   {
 1301              		.loc 1 442 6 view .LVU415
 1302 00ce 70B9     		cbnz	r0, .L81
 449:Core/Src/main.c **** 
 1303              		.loc 1 449 3 is_stmt 1 view .LVU416
 1304 00d0 0848     		ldr	r0, .L82
 1305 00d2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1306              	.LVL65:
 451:Core/Src/main.c **** 
 1307              		.loc 1 451 1 is_stmt 0 view .LVU417
 1308 00d6 1AB0     		add	sp, sp, #104
 1309              		.cfi_remember_state
 1310              		.cfi_def_cfa_offset 8
 1311              		@ sp needed
 1312 00d8 10BD     		pop	{r4, pc}
 1313              	.L76:
 1314              		.cfi_restore_state
 402:Core/Src/main.c ****   }
 1315              		.loc 1 402 5 is_stmt 1 view .LVU418
 1316 00da FFF7FEFF 		bl	Error_Handler
 1317              	.LVL66:
 1318              	.L77:
 407:Core/Src/main.c ****   }
 1319              		.loc 1 407 5 view .LVU419
 1320 00de FFF7FEFF 		bl	Error_Handler
 1321              	.LVL67:
 1322              	.L78:
 411:Core/Src/main.c ****   }
 1323              		.loc 1 411 5 view .LVU420
 1324 00e2 FFF7FEFF 		bl	Error_Handler
 1325              	.LVL68:
 1326              	.L79:
 418:Core/Src/main.c ****   }
 1327              		.loc 1 418 5 view .LVU421
 1328 00e6 FFF7FEFF 		bl	Error_Handler
 1329              	.LVL69:
 1330              	.L80:
 429:Core/Src/main.c ****   }
 1331              		.loc 1 429 5 view .LVU422
 1332 00ea FFF7FEFF 		bl	Error_Handler
 1333              	.LVL70:
 1334              	.L81:
 444:Core/Src/main.c ****   }
 1335              		.loc 1 444 5 view .LVU423
 1336 00ee FFF7FEFF 		bl	Error_Handler
 1337              	.LVL71:
 1338              	.L83:
 1339 00f2 00BF     		.align	2
ARM GAS  /tmp/ccoDWd4X.s 			page 48


 1340              	.L82:
 1341 00f4 00000000 		.word	.LANCHOR3
 1342 00f8 002C0140 		.word	1073818624
 1343              		.cfi_endproc
 1344              	.LFE295:
 1346              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1347              		.align	1
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1352              	MX_USART2_UART_Init:
 1353              	.LFB300:
 639:Core/Src/main.c **** 
 1354              		.loc 1 639 1 view -0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358 0000 08B5     		push	{r3, lr}
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 3, -8
 1361              		.cfi_offset 14, -4
 648:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1362              		.loc 1 648 3 view .LVU425
 648:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1363              		.loc 1 648 19 is_stmt 0 view .LVU426
 1364 0002 0B48     		ldr	r0, .L88
 1365 0004 0B4B     		ldr	r3, .L88+4
 1366 0006 0360     		str	r3, [r0]
 649:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1367              		.loc 1 649 3 is_stmt 1 view .LVU427
 649:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1368              		.loc 1 649 24 is_stmt 0 view .LVU428
 1369 0008 4FF4E133 		mov	r3, #115200
 1370 000c 4360     		str	r3, [r0, #4]
 650:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1371              		.loc 1 650 3 is_stmt 1 view .LVU429
 650:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1372              		.loc 1 650 26 is_stmt 0 view .LVU430
 1373 000e 0023     		movs	r3, #0
 1374 0010 8360     		str	r3, [r0, #8]
 651:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1375              		.loc 1 651 3 is_stmt 1 view .LVU431
 651:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1376              		.loc 1 651 24 is_stmt 0 view .LVU432
 1377 0012 C360     		str	r3, [r0, #12]
 652:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1378              		.loc 1 652 3 is_stmt 1 view .LVU433
 652:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1379              		.loc 1 652 22 is_stmt 0 view .LVU434
 1380 0014 0361     		str	r3, [r0, #16]
 653:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1381              		.loc 1 653 3 is_stmt 1 view .LVU435
 653:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1382              		.loc 1 653 20 is_stmt 0 view .LVU436
 1383 0016 0C22     		movs	r2, #12
 1384 0018 4261     		str	r2, [r0, #20]
 654:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccoDWd4X.s 			page 49


 1385              		.loc 1 654 3 is_stmt 1 view .LVU437
 654:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1386              		.loc 1 654 25 is_stmt 0 view .LVU438
 1387 001a 8361     		str	r3, [r0, #24]
 655:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1388              		.loc 1 655 3 is_stmt 1 view .LVU439
 655:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1389              		.loc 1 655 28 is_stmt 0 view .LVU440
 1390 001c C361     		str	r3, [r0, #28]
 656:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1391              		.loc 1 656 3 is_stmt 1 view .LVU441
 656:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1392              		.loc 1 656 30 is_stmt 0 view .LVU442
 1393 001e 0362     		str	r3, [r0, #32]
 657:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1394              		.loc 1 657 3 is_stmt 1 view .LVU443
 657:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1395              		.loc 1 657 38 is_stmt 0 view .LVU444
 1396 0020 4362     		str	r3, [r0, #36]
 658:Core/Src/main.c ****   {
 1397              		.loc 1 658 3 is_stmt 1 view .LVU445
 658:Core/Src/main.c ****   {
 1398              		.loc 1 658 7 is_stmt 0 view .LVU446
 1399 0022 FFF7FEFF 		bl	HAL_UART_Init
 1400              	.LVL72:
 658:Core/Src/main.c ****   {
 1401              		.loc 1 658 6 view .LVU447
 1402 0026 00B9     		cbnz	r0, .L87
 666:Core/Src/main.c **** 
 1403              		.loc 1 666 1 view .LVU448
 1404 0028 08BD     		pop	{r3, pc}
 1405              	.L87:
 660:Core/Src/main.c ****   }
 1406              		.loc 1 660 5 is_stmt 1 view .LVU449
 1407 002a FFF7FEFF 		bl	Error_Handler
 1408              	.LVL73:
 1409              	.L89:
 1410 002e 00BF     		.align	2
 1411              	.L88:
 1412 0030 00000000 		.word	.LANCHOR7
 1413 0034 00440040 		.word	1073759232
 1414              		.cfi_endproc
 1415              	.LFE300:
 1417              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1418              		.align	1
 1419              		.syntax unified
 1420              		.thumb
 1421              		.thumb_func
 1423              	MX_USART3_UART_Init:
 1424              	.LFB301:
 674:Core/Src/main.c **** 
 1425              		.loc 1 674 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429 0000 08B5     		push	{r3, lr}
 1430              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccoDWd4X.s 			page 50


 1431              		.cfi_offset 3, -8
 1432              		.cfi_offset 14, -4
 683:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1433              		.loc 1 683 3 view .LVU451
 683:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1434              		.loc 1 683 19 is_stmt 0 view .LVU452
 1435 0002 0B48     		ldr	r0, .L94
 1436 0004 0B4B     		ldr	r3, .L94+4
 1437 0006 0360     		str	r3, [r0]
 684:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1438              		.loc 1 684 3 is_stmt 1 view .LVU453
 684:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1439              		.loc 1 684 24 is_stmt 0 view .LVU454
 1440 0008 4FF4E133 		mov	r3, #115200
 1441 000c 4360     		str	r3, [r0, #4]
 685:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1442              		.loc 1 685 3 is_stmt 1 view .LVU455
 685:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1443              		.loc 1 685 26 is_stmt 0 view .LVU456
 1444 000e 0023     		movs	r3, #0
 1445 0010 8360     		str	r3, [r0, #8]
 686:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1446              		.loc 1 686 3 is_stmt 1 view .LVU457
 686:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1447              		.loc 1 686 24 is_stmt 0 view .LVU458
 1448 0012 C360     		str	r3, [r0, #12]
 687:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1449              		.loc 1 687 3 is_stmt 1 view .LVU459
 687:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1450              		.loc 1 687 22 is_stmt 0 view .LVU460
 1451 0014 0361     		str	r3, [r0, #16]
 688:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1452              		.loc 1 688 3 is_stmt 1 view .LVU461
 688:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1453              		.loc 1 688 20 is_stmt 0 view .LVU462
 1454 0016 0C22     		movs	r2, #12
 1455 0018 4261     		str	r2, [r0, #20]
 689:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1456              		.loc 1 689 3 is_stmt 1 view .LVU463
 689:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1457              		.loc 1 689 25 is_stmt 0 view .LVU464
 1458 001a 8361     		str	r3, [r0, #24]
 690:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1459              		.loc 1 690 3 is_stmt 1 view .LVU465
 690:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1460              		.loc 1 690 28 is_stmt 0 view .LVU466
 1461 001c C361     		str	r3, [r0, #28]
 691:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1462              		.loc 1 691 3 is_stmt 1 view .LVU467
 691:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1463              		.loc 1 691 30 is_stmt 0 view .LVU468
 1464 001e 0362     		str	r3, [r0, #32]
 692:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1465              		.loc 1 692 3 is_stmt 1 view .LVU469
 692:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1466              		.loc 1 692 38 is_stmt 0 view .LVU470
 1467 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/ccoDWd4X.s 			page 51


 693:Core/Src/main.c ****   {
 1468              		.loc 1 693 3 is_stmt 1 view .LVU471
 693:Core/Src/main.c ****   {
 1469              		.loc 1 693 7 is_stmt 0 view .LVU472
 1470 0022 FFF7FEFF 		bl	HAL_UART_Init
 1471              	.LVL74:
 693:Core/Src/main.c ****   {
 1472              		.loc 1 693 6 view .LVU473
 1473 0026 00B9     		cbnz	r0, .L93
 701:Core/Src/main.c **** 
 1474              		.loc 1 701 1 view .LVU474
 1475 0028 08BD     		pop	{r3, pc}
 1476              	.L93:
 695:Core/Src/main.c ****   }
 1477              		.loc 1 695 5 is_stmt 1 view .LVU475
 1478 002a FFF7FEFF 		bl	Error_Handler
 1479              	.LVL75:
 1480              	.L95:
 1481 002e 00BF     		.align	2
 1482              	.L94:
 1483 0030 00000000 		.word	.LANCHOR8
 1484 0034 00480040 		.word	1073760256
 1485              		.cfi_endproc
 1486              	.LFE301:
 1488              		.section	.text.MX_TIM15_Init,"ax",%progbits
 1489              		.align	1
 1490              		.syntax unified
 1491              		.thumb
 1492              		.thumb_func
 1494              	MX_TIM15_Init:
 1495              	.LFB297:
 497:Core/Src/main.c **** 
 1496              		.loc 1 497 1 view -0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 104
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500 0000 10B5     		push	{r4, lr}
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 4, -8
 1503              		.cfi_offset 14, -4
 1504 0002 9AB0     		sub	sp, sp, #104
 1505              		.cfi_def_cfa_offset 112
 503:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1506              		.loc 1 503 3 view .LVU477
 503:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1507              		.loc 1 503 26 is_stmt 0 view .LVU478
 1508 0004 0024     		movs	r4, #0
 1509 0006 1694     		str	r4, [sp, #88]
 1510 0008 1794     		str	r4, [sp, #92]
 1511 000a 1894     		str	r4, [sp, #96]
 1512 000c 1994     		str	r4, [sp, #100]
 504:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1513              		.loc 1 504 3 is_stmt 1 view .LVU479
 504:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1514              		.loc 1 504 27 is_stmt 0 view .LVU480
 1515 000e 1394     		str	r4, [sp, #76]
 1516 0010 1494     		str	r4, [sp, #80]
ARM GAS  /tmp/ccoDWd4X.s 			page 52


 1517 0012 1594     		str	r4, [sp, #84]
 505:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1518              		.loc 1 505 3 is_stmt 1 view .LVU481
 505:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1519              		.loc 1 505 22 is_stmt 0 view .LVU482
 1520 0014 0C94     		str	r4, [sp, #48]
 1521 0016 0D94     		str	r4, [sp, #52]
 1522 0018 0E94     		str	r4, [sp, #56]
 1523 001a 0F94     		str	r4, [sp, #60]
 1524 001c 1094     		str	r4, [sp, #64]
 1525 001e 1194     		str	r4, [sp, #68]
 1526 0020 1294     		str	r4, [sp, #72]
 506:Core/Src/main.c **** 
 1527              		.loc 1 506 3 is_stmt 1 view .LVU483
 506:Core/Src/main.c **** 
 1528              		.loc 1 506 34 is_stmt 0 view .LVU484
 1529 0022 2C22     		movs	r2, #44
 1530 0024 2146     		mov	r1, r4
 1531 0026 01A8     		add	r0, sp, #4
 1532 0028 FFF7FEFF 		bl	memset
 1533              	.LVL76:
 511:Core/Src/main.c ****   htim15.Init.Prescaler = 9;
 1534              		.loc 1 511 3 is_stmt 1 view .LVU485
 511:Core/Src/main.c ****   htim15.Init.Prescaler = 9;
 1535              		.loc 1 511 19 is_stmt 0 view .LVU486
 1536 002c 2C48     		ldr	r0, .L110
 1537 002e 2D4B     		ldr	r3, .L110+4
 1538 0030 0360     		str	r3, [r0]
 512:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1539              		.loc 1 512 3 is_stmt 1 view .LVU487
 512:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1540              		.loc 1 512 25 is_stmt 0 view .LVU488
 1541 0032 0923     		movs	r3, #9
 1542 0034 4360     		str	r3, [r0, #4]
 513:Core/Src/main.c ****   htim15.Init.Period = 400;
 1543              		.loc 1 513 3 is_stmt 1 view .LVU489
 513:Core/Src/main.c ****   htim15.Init.Period = 400;
 1544              		.loc 1 513 27 is_stmt 0 view .LVU490
 1545 0036 8460     		str	r4, [r0, #8]
 514:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1546              		.loc 1 514 3 is_stmt 1 view .LVU491
 514:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1547              		.loc 1 514 22 is_stmt 0 view .LVU492
 1548 0038 4FF4C873 		mov	r3, #400
 1549 003c C360     		str	r3, [r0, #12]
 515:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 1550              		.loc 1 515 3 is_stmt 1 view .LVU493
 515:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 1551              		.loc 1 515 29 is_stmt 0 view .LVU494
 1552 003e 0461     		str	r4, [r0, #16]
 516:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1553              		.loc 1 516 3 is_stmt 1 view .LVU495
 516:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1554              		.loc 1 516 33 is_stmt 0 view .LVU496
 1555 0040 4461     		str	r4, [r0, #20]
 517:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1556              		.loc 1 517 3 is_stmt 1 view .LVU497
ARM GAS  /tmp/ccoDWd4X.s 			page 53


 517:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1557              		.loc 1 517 33 is_stmt 0 view .LVU498
 1558 0042 8023     		movs	r3, #128
 1559 0044 8361     		str	r3, [r0, #24]
 518:Core/Src/main.c ****   {
 1560              		.loc 1 518 3 is_stmt 1 view .LVU499
 518:Core/Src/main.c ****   {
 1561              		.loc 1 518 7 is_stmt 0 view .LVU500
 1562 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1563              	.LVL77:
 518:Core/Src/main.c ****   {
 1564              		.loc 1 518 6 view .LVU501
 1565 004a 0028     		cmp	r0, #0
 1566 004c 3BD1     		bne	.L104
 522:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 1567              		.loc 1 522 3 is_stmt 1 view .LVU502
 522:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 1568              		.loc 1 522 34 is_stmt 0 view .LVU503
 1569 004e 4FF48053 		mov	r3, #4096
 1570 0052 1693     		str	r3, [sp, #88]
 523:Core/Src/main.c ****   {
 1571              		.loc 1 523 3 is_stmt 1 view .LVU504
 523:Core/Src/main.c ****   {
 1572              		.loc 1 523 7 is_stmt 0 view .LVU505
 1573 0054 16A9     		add	r1, sp, #88
 1574 0056 2248     		ldr	r0, .L110
 1575 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1576              	.LVL78:
 523:Core/Src/main.c ****   {
 1577              		.loc 1 523 6 view .LVU506
 1578 005c 0028     		cmp	r0, #0
 1579 005e 34D1     		bne	.L105
 527:Core/Src/main.c ****   {
 1580              		.loc 1 527 3 is_stmt 1 view .LVU507
 527:Core/Src/main.c ****   {
 1581              		.loc 1 527 7 is_stmt 0 view .LVU508
 1582 0060 1F48     		ldr	r0, .L110
 1583 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1584              	.LVL79:
 527:Core/Src/main.c ****   {
 1585              		.loc 1 527 6 view .LVU509
 1586 0066 0028     		cmp	r0, #0
 1587 0068 31D1     		bne	.L106
 531:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1588              		.loc 1 531 3 is_stmt 1 view .LVU510
 531:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1589              		.loc 1 531 37 is_stmt 0 view .LVU511
 1590 006a 2023     		movs	r3, #32
 1591 006c 1393     		str	r3, [sp, #76]
 532:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1592              		.loc 1 532 3 is_stmt 1 view .LVU512
 532:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1593              		.loc 1 532 33 is_stmt 0 view .LVU513
 1594 006e 0023     		movs	r3, #0
 1595 0070 1593     		str	r3, [sp, #84]
 533:Core/Src/main.c ****   {
 1596              		.loc 1 533 3 is_stmt 1 view .LVU514
ARM GAS  /tmp/ccoDWd4X.s 			page 54


 533:Core/Src/main.c ****   {
 1597              		.loc 1 533 7 is_stmt 0 view .LVU515
 1598 0072 13A9     		add	r1, sp, #76
 1599 0074 1A48     		ldr	r0, .L110
 1600 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1601              	.LVL80:
 533:Core/Src/main.c ****   {
 1602              		.loc 1 533 6 view .LVU516
 1603 007a 50BB     		cbnz	r0, .L107
 537:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1604              		.loc 1 537 3 is_stmt 1 view .LVU517
 537:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1605              		.loc 1 537 20 is_stmt 0 view .LVU518
 1606 007c 6023     		movs	r3, #96
 1607 007e 0C93     		str	r3, [sp, #48]
 538:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 1608              		.loc 1 538 3 is_stmt 1 view .LVU519
 538:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 1609              		.loc 1 538 19 is_stmt 0 view .LVU520
 1610 0080 4FF4FA73 		mov	r3, #500
 1611 0084 0D93     		str	r3, [sp, #52]
 539:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1612              		.loc 1 539 3 is_stmt 1 view .LVU521
 539:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1613              		.loc 1 539 24 is_stmt 0 view .LVU522
 1614 0086 0223     		movs	r3, #2
 1615 0088 0E93     		str	r3, [sp, #56]
 540:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1616              		.loc 1 540 3 is_stmt 1 view .LVU523
 540:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1617              		.loc 1 540 25 is_stmt 0 view .LVU524
 1618 008a 0022     		movs	r2, #0
 1619 008c 0F92     		str	r2, [sp, #60]
 541:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1620              		.loc 1 541 3 is_stmt 1 view .LVU525
 541:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1621              		.loc 1 541 24 is_stmt 0 view .LVU526
 1622 008e 1092     		str	r2, [sp, #64]
 542:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1623              		.loc 1 542 3 is_stmt 1 view .LVU527
 542:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1624              		.loc 1 542 25 is_stmt 0 view .LVU528
 1625 0090 1192     		str	r2, [sp, #68]
 543:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1626              		.loc 1 543 3 is_stmt 1 view .LVU529
 543:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1627              		.loc 1 543 26 is_stmt 0 view .LVU530
 1628 0092 1292     		str	r2, [sp, #72]
 544:Core/Src/main.c ****   {
 1629              		.loc 1 544 3 is_stmt 1 view .LVU531
 544:Core/Src/main.c ****   {
 1630              		.loc 1 544 7 is_stmt 0 view .LVU532
 1631 0094 0CA9     		add	r1, sp, #48
 1632 0096 1248     		ldr	r0, .L110
 1633 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1634              	.LVL81:
 544:Core/Src/main.c ****   {
ARM GAS  /tmp/ccoDWd4X.s 			page 55


 1635              		.loc 1 544 6 view .LVU533
 1636 009c D8B9     		cbnz	r0, .L108
 548:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1637              		.loc 1 548 3 is_stmt 1 view .LVU534
 548:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1638              		.loc 1 548 40 is_stmt 0 view .LVU535
 1639 009e 0023     		movs	r3, #0
 1640 00a0 0193     		str	r3, [sp, #4]
 549:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1641              		.loc 1 549 3 is_stmt 1 view .LVU536
 549:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1642              		.loc 1 549 41 is_stmt 0 view .LVU537
 1643 00a2 0293     		str	r3, [sp, #8]
 550:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1644              		.loc 1 550 3 is_stmt 1 view .LVU538
 550:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1645              		.loc 1 550 34 is_stmt 0 view .LVU539
 1646 00a4 0393     		str	r3, [sp, #12]
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1647              		.loc 1 551 3 is_stmt 1 view .LVU540
 551:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1648              		.loc 1 551 33 is_stmt 0 view .LVU541
 1649 00a6 0493     		str	r3, [sp, #16]
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1650              		.loc 1 552 3 is_stmt 1 view .LVU542
 552:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1651              		.loc 1 552 35 is_stmt 0 view .LVU543
 1652 00a8 0593     		str	r3, [sp, #20]
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1653              		.loc 1 553 3 is_stmt 1 view .LVU544
 553:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1654              		.loc 1 553 38 is_stmt 0 view .LVU545
 1655 00aa 4FF40052 		mov	r2, #8192
 1656 00ae 0692     		str	r2, [sp, #24]
 554:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1657              		.loc 1 554 3 is_stmt 1 view .LVU546
 554:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1658              		.loc 1 554 40 is_stmt 0 view .LVU547
 1659 00b0 0B93     		str	r3, [sp, #44]
 555:Core/Src/main.c ****   {
 1660              		.loc 1 555 3 is_stmt 1 view .LVU548
 555:Core/Src/main.c ****   {
 1661              		.loc 1 555 7 is_stmt 0 view .LVU549
 1662 00b2 01A9     		add	r1, sp, #4
 1663 00b4 0A48     		ldr	r0, .L110
 1664 00b6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1665              	.LVL82:
 555:Core/Src/main.c ****   {
 1666              		.loc 1 555 6 view .LVU550
 1667 00ba 70B9     		cbnz	r0, .L109
 562:Core/Src/main.c **** 
 1668              		.loc 1 562 3 is_stmt 1 view .LVU551
 1669 00bc 0848     		ldr	r0, .L110
 1670 00be FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1671              	.LVL83:
 564:Core/Src/main.c **** 
 1672              		.loc 1 564 1 is_stmt 0 view .LVU552
ARM GAS  /tmp/ccoDWd4X.s 			page 56


 1673 00c2 1AB0     		add	sp, sp, #104
 1674              		.cfi_remember_state
 1675              		.cfi_def_cfa_offset 8
 1676              		@ sp needed
 1677 00c4 10BD     		pop	{r4, pc}
 1678              	.L104:
 1679              		.cfi_restore_state
 520:Core/Src/main.c ****   }
 1680              		.loc 1 520 5 is_stmt 1 view .LVU553
 1681 00c6 FFF7FEFF 		bl	Error_Handler
 1682              	.LVL84:
 1683              	.L105:
 525:Core/Src/main.c ****   }
 1684              		.loc 1 525 5 view .LVU554
 1685 00ca FFF7FEFF 		bl	Error_Handler
 1686              	.LVL85:
 1687              	.L106:
 529:Core/Src/main.c ****   }
 1688              		.loc 1 529 5 view .LVU555
 1689 00ce FFF7FEFF 		bl	Error_Handler
 1690              	.LVL86:
 1691              	.L107:
 535:Core/Src/main.c ****   }
 1692              		.loc 1 535 5 view .LVU556
 1693 00d2 FFF7FEFF 		bl	Error_Handler
 1694              	.LVL87:
 1695              	.L108:
 546:Core/Src/main.c ****   }
 1696              		.loc 1 546 5 view .LVU557
 1697 00d6 FFF7FEFF 		bl	Error_Handler
 1698              	.LVL88:
 1699              	.L109:
 557:Core/Src/main.c ****   }
 1700              		.loc 1 557 5 view .LVU558
 1701 00da FFF7FEFF 		bl	Error_Handler
 1702              	.LVL89:
 1703              	.L111:
 1704 00de 00BF     		.align	2
 1705              	.L110:
 1706 00e0 00000000 		.word	.LANCHOR4
 1707 00e4 00400140 		.word	1073823744
 1708              		.cfi_endproc
 1709              	.LFE297:
 1711              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1712              		.align	1
 1713              		.syntax unified
 1714              		.thumb
 1715              		.thumb_func
 1717              	MX_TIM16_Init:
 1718              	.LFB298:
 572:Core/Src/main.c **** 
 1719              		.loc 1 572 1 view -0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723 0000 08B5     		push	{r3, lr}
 1724              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccoDWd4X.s 			page 57


 1725              		.cfi_offset 3, -8
 1726              		.cfi_offset 14, -4
 581:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 1727              		.loc 1 581 3 view .LVU560
 581:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 1728              		.loc 1 581 19 is_stmt 0 view .LVU561
 1729 0002 0948     		ldr	r0, .L116
 1730 0004 094B     		ldr	r3, .L116+4
 1731 0006 0360     		str	r3, [r0]
 582:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1732              		.loc 1 582 3 is_stmt 1 view .LVU562
 582:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1733              		.loc 1 582 25 is_stmt 0 view .LVU563
 1734 0008 0023     		movs	r3, #0
 1735 000a 4360     		str	r3, [r0, #4]
 583:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1736              		.loc 1 583 3 is_stmt 1 view .LVU564
 583:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1737              		.loc 1 583 27 is_stmt 0 view .LVU565
 1738 000c 8360     		str	r3, [r0, #8]
 584:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1739              		.loc 1 584 3 is_stmt 1 view .LVU566
 584:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1740              		.loc 1 584 22 is_stmt 0 view .LVU567
 1741 000e 4FF6FF72 		movw	r2, #65535
 1742 0012 C260     		str	r2, [r0, #12]
 585:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1743              		.loc 1 585 3 is_stmt 1 view .LVU568
 585:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1744              		.loc 1 585 29 is_stmt 0 view .LVU569
 1745 0014 0361     		str	r3, [r0, #16]
 586:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1746              		.loc 1 586 3 is_stmt 1 view .LVU570
 586:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1747              		.loc 1 586 33 is_stmt 0 view .LVU571
 1748 0016 4361     		str	r3, [r0, #20]
 587:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1749              		.loc 1 587 3 is_stmt 1 view .LVU572
 587:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1750              		.loc 1 587 33 is_stmt 0 view .LVU573
 1751 0018 8361     		str	r3, [r0, #24]
 588:Core/Src/main.c ****   {
 1752              		.loc 1 588 3 is_stmt 1 view .LVU574
 588:Core/Src/main.c ****   {
 1753              		.loc 1 588 7 is_stmt 0 view .LVU575
 1754 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1755              	.LVL90:
 588:Core/Src/main.c ****   {
 1756              		.loc 1 588 6 view .LVU576
 1757 001e 00B9     		cbnz	r0, .L115
 596:Core/Src/main.c **** 
 1758              		.loc 1 596 1 view .LVU577
 1759 0020 08BD     		pop	{r3, pc}
 1760              	.L115:
 590:Core/Src/main.c ****   }
 1761              		.loc 1 590 5 is_stmt 1 view .LVU578
 1762 0022 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccoDWd4X.s 			page 58


 1763              	.LVL91:
 1764              	.L117:
 1765 0026 00BF     		.align	2
 1766              	.L116:
 1767 0028 00000000 		.word	.LANCHOR9
 1768 002c 00440140 		.word	1073824768
 1769              		.cfi_endproc
 1770              	.LFE298:
 1772              		.section	.text.MX_TIM7_Init,"ax",%progbits
 1773              		.align	1
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1778              	MX_TIM7_Init:
 1779              	.LFB296:
 459:Core/Src/main.c **** 
 1780              		.loc 1 459 1 view -0
 1781              		.cfi_startproc
 1782              		@ args = 0, pretend = 0, frame = 16
 1783              		@ frame_needed = 0, uses_anonymous_args = 0
 1784 0000 00B5     		push	{lr}
 1785              		.cfi_def_cfa_offset 4
 1786              		.cfi_offset 14, -4
 1787 0002 85B0     		sub	sp, sp, #20
 1788              		.cfi_def_cfa_offset 24
 465:Core/Src/main.c **** 
 1789              		.loc 1 465 3 view .LVU580
 465:Core/Src/main.c **** 
 1790              		.loc 1 465 27 is_stmt 0 view .LVU581
 1791 0004 0023     		movs	r3, #0
 1792 0006 0193     		str	r3, [sp, #4]
 1793 0008 0293     		str	r3, [sp, #8]
 1794 000a 0393     		str	r3, [sp, #12]
 470:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 1795              		.loc 1 470 3 is_stmt 1 view .LVU582
 470:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 1796              		.loc 1 470 18 is_stmt 0 view .LVU583
 1797 000c 0E48     		ldr	r0, .L124
 1798 000e 0F4A     		ldr	r2, .L124+4
 1799 0010 0260     		str	r2, [r0]
 471:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1800              		.loc 1 471 3 is_stmt 1 view .LVU584
 471:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1801              		.loc 1 471 24 is_stmt 0 view .LVU585
 1802 0012 40F29A22 		movw	r2, #666
 1803 0016 4260     		str	r2, [r0, #4]
 472:Core/Src/main.c ****   htim7.Init.Period = 1200;
 1804              		.loc 1 472 3 is_stmt 1 view .LVU586
 472:Core/Src/main.c ****   htim7.Init.Period = 1200;
 1805              		.loc 1 472 26 is_stmt 0 view .LVU587
 1806 0018 8360     		str	r3, [r0, #8]
 473:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1807              		.loc 1 473 3 is_stmt 1 view .LVU588
 473:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1808              		.loc 1 473 21 is_stmt 0 view .LVU589
 1809 001a 4FF49662 		mov	r2, #1200
 1810 001e C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccoDWd4X.s 			page 59


 474:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1811              		.loc 1 474 3 is_stmt 1 view .LVU590
 474:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1812              		.loc 1 474 32 is_stmt 0 view .LVU591
 1813 0020 8361     		str	r3, [r0, #24]
 475:Core/Src/main.c ****   {
 1814              		.loc 1 475 3 is_stmt 1 view .LVU592
 475:Core/Src/main.c ****   {
 1815              		.loc 1 475 7 is_stmt 0 view .LVU593
 1816 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1817              	.LVL92:
 475:Core/Src/main.c ****   {
 1818              		.loc 1 475 6 view .LVU594
 1819 0026 50B9     		cbnz	r0, .L122
 479:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1820              		.loc 1 479 3 is_stmt 1 view .LVU595
 479:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1821              		.loc 1 479 37 is_stmt 0 view .LVU596
 1822 0028 0023     		movs	r3, #0
 1823 002a 0193     		str	r3, [sp, #4]
 480:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1824              		.loc 1 480 3 is_stmt 1 view .LVU597
 480:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1825              		.loc 1 480 33 is_stmt 0 view .LVU598
 1826 002c 0393     		str	r3, [sp, #12]
 481:Core/Src/main.c ****   {
 1827              		.loc 1 481 3 is_stmt 1 view .LVU599
 481:Core/Src/main.c ****   {
 1828              		.loc 1 481 7 is_stmt 0 view .LVU600
 1829 002e 01A9     		add	r1, sp, #4
 1830 0030 0548     		ldr	r0, .L124
 1831 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1832              	.LVL93:
 481:Core/Src/main.c ****   {
 1833              		.loc 1 481 6 view .LVU601
 1834 0036 20B9     		cbnz	r0, .L123
 489:Core/Src/main.c **** 
 1835              		.loc 1 489 1 view .LVU602
 1836 0038 05B0     		add	sp, sp, #20
 1837              		.cfi_remember_state
 1838              		.cfi_def_cfa_offset 4
 1839              		@ sp needed
 1840 003a 5DF804FB 		ldr	pc, [sp], #4
 1841              	.L122:
 1842              		.cfi_restore_state
 477:Core/Src/main.c ****   }
 1843              		.loc 1 477 5 is_stmt 1 view .LVU603
 1844 003e FFF7FEFF 		bl	Error_Handler
 1845              	.LVL94:
 1846              	.L123:
 483:Core/Src/main.c ****   }
 1847              		.loc 1 483 5 view .LVU604
 1848 0042 FFF7FEFF 		bl	Error_Handler
 1849              	.LVL95:
 1850              	.L125:
 1851 0046 00BF     		.align	2
 1852              	.L124:
ARM GAS  /tmp/ccoDWd4X.s 			page 60


 1853 0048 00000000 		.word	.LANCHOR5
 1854 004c 00140040 		.word	1073746944
 1855              		.cfi_endproc
 1856              	.LFE296:
 1858              		.section	.text.SystemClock_Config,"ax",%progbits
 1859              		.align	1
 1860              		.global	SystemClock_Config
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1865              	SystemClock_Config:
 1866              	.LFB292:
 187:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1867              		.loc 1 187 1 view -0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 88
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871 0000 00B5     		push	{lr}
 1872              		.cfi_def_cfa_offset 4
 1873              		.cfi_offset 14, -4
 1874 0002 97B0     		sub	sp, sp, #92
 1875              		.cfi_def_cfa_offset 96
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1876              		.loc 1 188 3 view .LVU606
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1877              		.loc 1 188 22 is_stmt 0 view .LVU607
 1878 0004 4422     		movs	r2, #68
 1879 0006 0021     		movs	r1, #0
 1880 0008 05A8     		add	r0, sp, #20
 1881 000a FFF7FEFF 		bl	memset
 1882              	.LVL96:
 189:Core/Src/main.c **** 
 1883              		.loc 1 189 3 is_stmt 1 view .LVU608
 189:Core/Src/main.c **** 
 1884              		.loc 1 189 22 is_stmt 0 view .LVU609
 1885 000e 0023     		movs	r3, #0
 1886 0010 0093     		str	r3, [sp]
 1887 0012 0193     		str	r3, [sp, #4]
 1888 0014 0293     		str	r3, [sp, #8]
 1889 0016 0393     		str	r3, [sp, #12]
 1890 0018 0493     		str	r3, [sp, #16]
 193:Core/Src/main.c ****   {
 1891              		.loc 1 193 3 is_stmt 1 view .LVU610
 193:Core/Src/main.c ****   {
 1892              		.loc 1 193 7 is_stmt 0 view .LVU611
 1893 001a 4FF40070 		mov	r0, #512
 1894 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1895              	.LVL97:
 193:Core/Src/main.c ****   {
 1896              		.loc 1 193 6 view .LVU612
 1897 0022 D0B9     		cbnz	r0, .L131
 201:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1898              		.loc 1 201 3 is_stmt 1 view .LVU613
 201:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1899              		.loc 1 201 36 is_stmt 0 view .LVU614
 1900 0024 1023     		movs	r3, #16
 1901 0026 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccoDWd4X.s 			page 61


 202:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1902              		.loc 1 202 3 is_stmt 1 view .LVU615
 202:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1903              		.loc 1 202 30 is_stmt 0 view .LVU616
 1904 0028 0123     		movs	r3, #1
 1905 002a 0B93     		str	r3, [sp, #44]
 203:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1906              		.loc 1 203 3 is_stmt 1 view .LVU617
 203:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1907              		.loc 1 203 41 is_stmt 0 view .LVU618
 1908 002c 0023     		movs	r3, #0
 1909 002e 0C93     		str	r3, [sp, #48]
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1910              		.loc 1 204 3 is_stmt 1 view .LVU619
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1911              		.loc 1 204 35 is_stmt 0 view .LVU620
 1912 0030 6022     		movs	r2, #96
 1913 0032 0D92     		str	r2, [sp, #52]
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1914              		.loc 1 205 3 is_stmt 1 view .LVU621
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1915              		.loc 1 205 34 is_stmt 0 view .LVU622
 1916 0034 0F93     		str	r3, [sp, #60]
 206:Core/Src/main.c ****   {
 1917              		.loc 1 206 3 is_stmt 1 view .LVU623
 206:Core/Src/main.c ****   {
 1918              		.loc 1 206 7 is_stmt 0 view .LVU624
 1919 0036 05A8     		add	r0, sp, #20
 1920 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1921              	.LVL98:
 206:Core/Src/main.c ****   {
 1922              		.loc 1 206 6 view .LVU625
 1923 003c 78B9     		cbnz	r0, .L132
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1924              		.loc 1 213 3 is_stmt 1 view .LVU626
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1925              		.loc 1 213 31 is_stmt 0 view .LVU627
 1926 003e 0F23     		movs	r3, #15
 1927 0040 0093     		str	r3, [sp]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1928              		.loc 1 215 3 is_stmt 1 view .LVU628
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1929              		.loc 1 215 34 is_stmt 0 view .LVU629
 1930 0042 0021     		movs	r1, #0
 1931 0044 0191     		str	r1, [sp, #4]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1932              		.loc 1 216 3 is_stmt 1 view .LVU630
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1933              		.loc 1 216 35 is_stmt 0 view .LVU631
 1934 0046 0291     		str	r1, [sp, #8]
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1935              		.loc 1 217 3 is_stmt 1 view .LVU632
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1936              		.loc 1 217 36 is_stmt 0 view .LVU633
 1937 0048 0391     		str	r1, [sp, #12]
 218:Core/Src/main.c **** 
 1938              		.loc 1 218 3 is_stmt 1 view .LVU634
ARM GAS  /tmp/ccoDWd4X.s 			page 62


 218:Core/Src/main.c **** 
 1939              		.loc 1 218 36 is_stmt 0 view .LVU635
 1940 004a 0491     		str	r1, [sp, #16]
 220:Core/Src/main.c ****   {
 1941              		.loc 1 220 3 is_stmt 1 view .LVU636
 220:Core/Src/main.c ****   {
 1942              		.loc 1 220 7 is_stmt 0 view .LVU637
 1943 004c 6846     		mov	r0, sp
 1944 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1945              	.LVL99:
 220:Core/Src/main.c ****   {
 1946              		.loc 1 220 6 view .LVU638
 1947 0052 30B9     		cbnz	r0, .L133
 224:Core/Src/main.c **** 
 1948              		.loc 1 224 1 view .LVU639
 1949 0054 17B0     		add	sp, sp, #92
 1950              		.cfi_remember_state
 1951              		.cfi_def_cfa_offset 4
 1952              		@ sp needed
 1953 0056 5DF804FB 		ldr	pc, [sp], #4
 1954              	.L131:
 1955              		.cfi_restore_state
 195:Core/Src/main.c ****   }
 1956              		.loc 1 195 5 is_stmt 1 view .LVU640
 1957 005a FFF7FEFF 		bl	Error_Handler
 1958              	.LVL100:
 1959              	.L132:
 208:Core/Src/main.c ****   }
 1960              		.loc 1 208 5 view .LVU641
 1961 005e FFF7FEFF 		bl	Error_Handler
 1962              	.LVL101:
 1963              	.L133:
 222:Core/Src/main.c ****   }
 1964              		.loc 1 222 5 view .LVU642
 1965 0062 FFF7FEFF 		bl	Error_Handler
 1966              	.LVL102:
 1967              		.cfi_endproc
 1968              	.LFE292:
 1970              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 1971              		.align	1
 1972              		.global	PeriphCommonClock_Config
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1977              	PeriphCommonClock_Config:
 1978              	.LFB293:
 231:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1979              		.loc 1 231 1 view -0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 96
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983 0000 00B5     		push	{lr}
 1984              		.cfi_def_cfa_offset 4
 1985              		.cfi_offset 14, -4
 1986 0002 99B0     		sub	sp, sp, #100
 1987              		.cfi_def_cfa_offset 104
 232:Core/Src/main.c **** 
ARM GAS  /tmp/ccoDWd4X.s 			page 63


 1988              		.loc 1 232 3 view .LVU644
 232:Core/Src/main.c **** 
 1989              		.loc 1 232 28 is_stmt 0 view .LVU645
 1990 0004 5C22     		movs	r2, #92
 1991 0006 0021     		movs	r1, #0
 1992 0008 01A8     		add	r0, sp, #4
 1993 000a FFF7FEFF 		bl	memset
 1994              	.LVL103:
 236:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1995              		.loc 1 236 3 is_stmt 1 view .LVU646
 236:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1996              		.loc 1 236 38 is_stmt 0 view .LVU647
 1997 000e 4FF40423 		mov	r3, #540672
 1998 0012 0193     		str	r3, [sp, #4]
 237:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1999              		.loc 1 237 3 is_stmt 1 view .LVU648
 237:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 2000              		.loc 1 237 35 is_stmt 0 view .LVU649
 2001 0014 4FF08053 		mov	r3, #268435456
 2002 0018 1593     		str	r3, [sp, #84]
 238:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 2003              		.loc 1 238 3 is_stmt 1 view .LVU650
 238:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 2004              		.loc 1 238 38 is_stmt 0 view .LVU651
 2005 001a 4FF08063 		mov	r3, #67108864
 2006 001e 1393     		str	r3, [sp, #76]
 239:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 2007              		.loc 1 239 3 is_stmt 1 view .LVU652
 239:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 2008              		.loc 1 239 39 is_stmt 0 view .LVU653
 2009 0020 0123     		movs	r3, #1
 2010 0022 0293     		str	r3, [sp, #8]
 240:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 2011              		.loc 1 240 3 is_stmt 1 view .LVU654
 240:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 2012              		.loc 1 240 34 is_stmt 0 view .LVU655
 2013 0024 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 2014              		.loc 1 241 3 is_stmt 1 view .LVU656
 241:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 2015              		.loc 1 241 34 is_stmt 0 view .LVU657
 2016 0026 1023     		movs	r3, #16
 2017 0028 0493     		str	r3, [sp, #16]
 242:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 2018              		.loc 1 242 3 is_stmt 1 view .LVU658
 242:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 2019              		.loc 1 242 34 is_stmt 0 view .LVU659
 2020 002a 0723     		movs	r3, #7
 2021 002c 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 2022              		.loc 1 243 3 is_stmt 1 view .LVU660
 243:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 2023              		.loc 1 243 34 is_stmt 0 view .LVU661
 2024 002e 0223     		movs	r3, #2
 2025 0030 0693     		str	r3, [sp, #24]
 244:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 2026              		.loc 1 244 3 is_stmt 1 view .LVU662
ARM GAS  /tmp/ccoDWd4X.s 			page 64


 244:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 2027              		.loc 1 244 34 is_stmt 0 view .LVU663
 2028 0032 0793     		str	r3, [sp, #28]
 245:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2029              		.loc 1 245 3 is_stmt 1 view .LVU664
 245:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2030              		.loc 1 245 41 is_stmt 0 view .LVU665
 2031 0034 4FF08873 		mov	r3, #17825792
 2032 0038 0893     		str	r3, [sp, #32]
 246:Core/Src/main.c ****   {
 2033              		.loc 1 246 3 is_stmt 1 view .LVU666
 246:Core/Src/main.c ****   {
 2034              		.loc 1 246 7 is_stmt 0 view .LVU667
 2035 003a 01A8     		add	r0, sp, #4
 2036 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2037              	.LVL104:
 246:Core/Src/main.c ****   {
 2038              		.loc 1 246 6 view .LVU668
 2039 0040 10B9     		cbnz	r0, .L137
 250:Core/Src/main.c **** 
 2040              		.loc 1 250 1 view .LVU669
 2041 0042 19B0     		add	sp, sp, #100
 2042              		.cfi_remember_state
 2043              		.cfi_def_cfa_offset 4
 2044              		@ sp needed
 2045 0044 5DF804FB 		ldr	pc, [sp], #4
 2046              	.L137:
 2047              		.cfi_restore_state
 248:Core/Src/main.c ****   }
 2048              		.loc 1 248 5 is_stmt 1 view .LVU670
 2049 0048 FFF7FEFF 		bl	Error_Handler
 2050              	.LVL105:
 2051              		.cfi_endproc
 2052              	.LFE293:
 2054              		.section	.text.main,"ax",%progbits
 2055              		.align	1
 2056              		.global	main
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2061              	main:
 2062              	.LFB291:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2063              		.loc 1 115 1 view -0
 2064              		.cfi_startproc
 2065              		@ Volatile: function does not return.
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068 0000 08B5     		push	{r3, lr}
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 3, -8
 2071              		.cfi_offset 14, -4
 123:Core/Src/main.c **** 
 2072              		.loc 1 123 3 view .LVU672
 2073 0002 FFF7FEFF 		bl	HAL_Init
 2074              	.LVL106:
 130:Core/Src/main.c **** 
ARM GAS  /tmp/ccoDWd4X.s 			page 65


 2075              		.loc 1 130 3 view .LVU673
 2076 0006 FFF7FEFF 		bl	SystemClock_Config
 2077              	.LVL107:
 133:Core/Src/main.c **** 
 2078              		.loc 1 133 3 view .LVU674
 2079 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 2080              	.LVL108:
 140:Core/Src/main.c ****   MX_DMA_Init();
 2081              		.loc 1 140 3 view .LVU675
 2082 000e FFF7FEFF 		bl	MX_GPIO_Init
 2083              	.LVL109:
 141:Core/Src/main.c ****   MX_ADC1_Init();
 2084              		.loc 1 141 3 view .LVU676
 2085 0012 FFF7FEFF 		bl	MX_DMA_Init
 2086              	.LVL110:
 142:Core/Src/main.c ****   MX_USART1_UART_Init();
 2087              		.loc 1 142 3 view .LVU677
 2088 0016 FFF7FEFF 		bl	MX_ADC1_Init
 2089              	.LVL111:
 143:Core/Src/main.c ****   MX_TIM1_Init();
 2090              		.loc 1 143 3 view .LVU678
 2091 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 2092              	.LVL112:
 144:Core/Src/main.c ****   MX_USART2_UART_Init();
 2093              		.loc 1 144 3 view .LVU679
 2094 001e FFF7FEFF 		bl	MX_TIM1_Init
 2095              	.LVL113:
 145:Core/Src/main.c ****   MX_USART3_UART_Init();
 2096              		.loc 1 145 3 view .LVU680
 2097 0022 FFF7FEFF 		bl	MX_USART2_UART_Init
 2098              	.LVL114:
 146:Core/Src/main.c ****   MX_TIM15_Init();
 2099              		.loc 1 146 3 view .LVU681
 2100 0026 FFF7FEFF 		bl	MX_USART3_UART_Init
 2101              	.LVL115:
 147:Core/Src/main.c ****   MX_TIM16_Init();
 2102              		.loc 1 147 3 view .LVU682
 2103 002a FFF7FEFF 		bl	MX_TIM15_Init
 2104              	.LVL116:
 148:Core/Src/main.c ****   MX_TIM7_Init();
 2105              		.loc 1 148 3 view .LVU683
 2106 002e FFF7FEFF 		bl	MX_TIM16_Init
 2107              	.LVL117:
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2108              		.loc 1 149 3 view .LVU684
 2109 0032 FFF7FEFF 		bl	MX_TIM7_Init
 2110              	.LVL118:
 152:Core/Src/main.c **** 
 2111              		.loc 1 152 3 view .LVU685
 2112 0036 FFF7FEFF 		bl	initLCD
 2113              	.LVL119:
 154:Core/Src/main.c **** 
 2114              		.loc 1 154 3 view .LVU686
 2115 003a 1848     		ldr	r0, .L141
 2116 003c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 2117              	.LVL120:
 156:Core/Src/main.c ****   HAL_TIM_PWM_Start_IT(&enY_tim, TIM_CHANNEL_1);
ARM GAS  /tmp/ccoDWd4X.s 			page 66


 2118              		.loc 1 156 3 view .LVU687
 2119 0040 174D     		ldr	r5, .L141+4
 2120 0042 0821     		movs	r1, #8
 2121 0044 2846     		mov	r0, r5
 2122 0046 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start_IT
 2123              	.LVL121:
 157:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 2124              		.loc 1 157 3 view .LVU688
 2125 004a 164C     		ldr	r4, .L141+8
 2126 004c 0021     		movs	r1, #0
 2127 004e 2046     		mov	r0, r4
 2128 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Start_IT
 2129              	.LVL122:
 158:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 2130              		.loc 1 158 3 view .LVU689
 158:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 2131              		.loc 1 158 10 is_stmt 0 view .LVU690
 2132 0054 2A68     		ldr	r2, [r5]
 158:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 2133              		.loc 1 158 25 view .LVU691
 2134 0056 1368     		ldr	r3, [r2]
 2135 0058 23F00103 		bic	r3, r3, #1
 2136 005c 1360     		str	r3, [r2]
 159:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2137              		.loc 1 159 3 is_stmt 1 view .LVU692
 159:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2138              		.loc 1 159 10 is_stmt 0 view .LVU693
 2139 005e 2268     		ldr	r2, [r4]
 159:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2140              		.loc 1 159 25 view .LVU694
 2141 0060 1368     		ldr	r3, [r2]
 2142 0062 23F00103 		bic	r3, r3, #1
 2143 0066 1360     		str	r3, [r2]
 160:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2144              		.loc 1 160 3 is_stmt 1 view .LVU695
 160:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2145              		.loc 1 160 10 is_stmt 0 view .LVU696
 2146 0068 2A68     		ldr	r2, [r5]
 160:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 2147              		.loc 1 160 25 view .LVU697
 2148 006a 1368     		ldr	r3, [r2]
 2149 006c 23F08003 		bic	r3, r3, #128
 2150 0070 1360     		str	r3, [r2]
 161:Core/Src/main.c **** 
 2151              		.loc 1 161 3 is_stmt 1 view .LVU698
 161:Core/Src/main.c **** 
 2152              		.loc 1 161 10 is_stmt 0 view .LVU699
 2153 0072 2268     		ldr	r2, [r4]
 161:Core/Src/main.c **** 
 2154              		.loc 1 161 25 view .LVU700
 2155 0074 1368     		ldr	r3, [r2]
 2156 0076 23F08003 		bic	r3, r3, #128
 2157 007a 1360     		str	r3, [r2]
 163:Core/Src/main.c ****   HAL_UART_Receive_DMA(&huart1, UART1_rxBuffer, 11);
 2158              		.loc 1 163 3 is_stmt 1 view .LVU701
 2159 007c 0822     		movs	r2, #8
 2160 007e 0A49     		ldr	r1, .L141+12
ARM GAS  /tmp/ccoDWd4X.s 			page 67


 2161 0080 0A48     		ldr	r0, .L141+16
 2162 0082 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2163              	.LVL123:
 164:Core/Src/main.c **** 
 2164              		.loc 1 164 3 view .LVU702
 2165 0086 0B22     		movs	r2, #11
 2166 0088 0949     		ldr	r1, .L141+20
 2167 008a 0A48     		ldr	r0, .L141+24
 2168 008c FFF7FEFF 		bl	HAL_UART_Receive_DMA
 2169              	.LVL124:
 2170              	.L139:
 170:Core/Src/main.c ****   {
 2171              		.loc 1 170 3 discriminator 1 view .LVU703
 176:Core/Src/main.c ****     //HAL_Delay(1);
 2172              		.loc 1 176 5 discriminator 1 view .LVU704
 2173 0090 054A     		ldr	r2, .L141+12
 2174 0092 0849     		ldr	r1, .L141+24
 2175 0094 0848     		ldr	r0, .L141+28
 2176 0096 FFF7FEFF 		bl	CNC_HL_Control
 2177              	.LVL125:
 170:Core/Src/main.c ****   {
 2178              		.loc 1 170 9 discriminator 1 view .LVU705
 2179 009a F9E7     		b	.L139
 2180              	.L142:
 2181              		.align	2
 2182              	.L141:
 2183 009c 00000000 		.word	.LANCHOR5
 2184 00a0 00000000 		.word	.LANCHOR3
 2185 00a4 00000000 		.word	.LANCHOR4
 2186 00a8 00000000 		.word	.LANCHOR10
 2187 00ac 00000000 		.word	.LANCHOR6
 2188 00b0 00000000 		.word	.LANCHOR1
 2189 00b4 00000000 		.word	.LANCHOR2
 2190 00b8 00000000 		.word	.LANCHOR0
 2191              		.cfi_endproc
 2192              	.LFE291:
 2194              		.global	UART1_rxBuffer
 2195              		.global	adc_data
 2196              		.global	hmi_info
 2197              		.global	hdma_usart1_rx
 2198              		.global	huart3
 2199              		.global	huart2
 2200              		.global	huart1
 2201              		.global	htim16
 2202              		.global	htim15
 2203              		.global	htim7
 2204              		.global	htim1
 2205              		.global	hdma_adc1
 2206              		.global	hadc1
 2207              		.section	.bss.UART1_rxBuffer,"aw",%nobits
 2208              		.align	2
 2209              		.set	.LANCHOR1,. + 0
 2212              	UART1_rxBuffer:
 2213 0000 00000000 		.space	11
 2213      00000000 
 2213      000000
 2214              		.section	.bss.adc_data,"aw",%nobits
ARM GAS  /tmp/ccoDWd4X.s 			page 68


 2215              		.align	2
 2216              		.set	.LANCHOR10,. + 0
 2219              	adc_data:
 2220 0000 00000000 		.space	16
 2220      00000000 
 2220      00000000 
 2220      00000000 
 2221              		.section	.bss.hadc1,"aw",%nobits
 2222              		.align	2
 2223              		.set	.LANCHOR6,. + 0
 2226              	hadc1:
 2227 0000 00000000 		.space	100
 2227      00000000 
 2227      00000000 
 2227      00000000 
 2227      00000000 
 2228              		.section	.bss.hdma_adc1,"aw",%nobits
 2229              		.align	2
 2232              	hdma_adc1:
 2233 0000 00000000 		.space	72
 2233      00000000 
 2233      00000000 
 2233      00000000 
 2233      00000000 
 2234              		.section	.bss.hdma_usart1_rx,"aw",%nobits
 2235              		.align	2
 2238              	hdma_usart1_rx:
 2239 0000 00000000 		.space	72
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2240              		.section	.bss.htim1,"aw",%nobits
 2241              		.align	2
 2242              		.set	.LANCHOR3,. + 0
 2245              	htim1:
 2246 0000 00000000 		.space	76
 2246      00000000 
 2246      00000000 
 2246      00000000 
 2246      00000000 
 2247              		.section	.bss.htim15,"aw",%nobits
 2248              		.align	2
 2249              		.set	.LANCHOR4,. + 0
 2252              	htim15:
 2253 0000 00000000 		.space	76
 2253      00000000 
 2253      00000000 
 2253      00000000 
 2253      00000000 
 2254              		.section	.bss.htim16,"aw",%nobits
 2255              		.align	2
 2256              		.set	.LANCHOR9,. + 0
 2259              	htim16:
 2260 0000 00000000 		.space	76
 2260      00000000 
 2260      00000000 
ARM GAS  /tmp/ccoDWd4X.s 			page 69


 2260      00000000 
 2260      00000000 
 2261              		.section	.bss.htim7,"aw",%nobits
 2262              		.align	2
 2263              		.set	.LANCHOR5,. + 0
 2266              	htim7:
 2267 0000 00000000 		.space	76
 2267      00000000 
 2267      00000000 
 2267      00000000 
 2267      00000000 
 2268              		.section	.bss.huart1,"aw",%nobits
 2269              		.align	2
 2270              		.set	.LANCHOR2,. + 0
 2273              	huart1:
 2274 0000 00000000 		.space	132
 2274      00000000 
 2274      00000000 
 2274      00000000 
 2274      00000000 
 2275              		.section	.bss.huart2,"aw",%nobits
 2276              		.align	2
 2277              		.set	.LANCHOR7,. + 0
 2280              	huart2:
 2281 0000 00000000 		.space	132
 2281      00000000 
 2281      00000000 
 2281      00000000 
 2281      00000000 
 2282              		.section	.bss.huart3,"aw",%nobits
 2283              		.align	2
 2284              		.set	.LANCHOR8,. + 0
 2287              	huart3:
 2288 0000 00000000 		.space	132
 2288      00000000 
 2288      00000000 
 2288      00000000 
 2288      00000000 
 2289              		.section	.data.hmi_info,"aw"
 2290              		.align	2
 2291              		.set	.LANCHOR0,. + 0
 2294              	hmi_info:
 2295 0000 00       		.byte	0
 2296 0001 00       		.byte	0
 2297 0002 02       		.byte	2
 2298 0003 00       		.space	1
 2299 0004 B80B0000 		.word	3000
 2300 0008 B80B0000 		.word	3000
 2301 000c E803     		.short	1000
 2302 000e E803     		.short	1000
 2303 0010 00000000 		.space	4
 2304 0014 00000000 		.word	0
 2305 0018 00000000 		.word	0
 2306 001c E8030000 		.word	1000
 2307 0020 0A000000 		.word	10
 2308 0024 0A000000 		.word	10
 2309 0028 2C010000 		.word	300
ARM GAS  /tmp/ccoDWd4X.s 			page 70


 2310 002c 2C010000 		.word	300
 2311 0030 00       		.byte	0
 2312 0031 00       		.byte	0
 2313 0032 00       		.space	1
 2314 0033 00       		.byte	0
 2315 0034 00       		.byte	0
 2316 0035 01       		.byte	1
 2317 0036 00       		.byte	0
 2318 0037 00       		.byte	0
 2319 0038 FF       		.byte	-1
 2320 0039 000000   		.space	3
 2321 003c 00000000 		.word	htim1
 2322 0040 00000000 		.word	htim15
 2323              		.text
 2324              	.Letext0:
 2325              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 2326              		.file 4 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 2327              		.file 5 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 2328              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2329              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2330              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2331              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 2332              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2333              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2334              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2335              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2336              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2337              		.file 15 "Core/Inc/cnc_info.h"
 2338              		.file 16 "Core/Inc/lcd.h"
 2339              		.file 17 "Core/Inc/cnc_core.h"
 2340              		.file 18 "Core/Inc/hmi.h"
 2341              		.file 19 "Core/Inc/data_parser.h"
 2342              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2343              		.file 21 "Core/Inc/main.h"
 2344              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2345              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2346              		.file 24 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2347              		.file 25 "<built-in>"
ARM GAS  /tmp/ccoDWd4X.s 			page 71


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccoDWd4X.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccoDWd4X.s:387    .text.MX_GPIO_Init:00000000000001c0 $d
     /tmp/ccoDWd4X.s:396    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:401    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccoDWd4X.s:446    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccoDWd4X.s:451    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccoDWd4X.s:457    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccoDWd4X.s:486    .text.HAL_UART_RxCpltCallback:0000000000000018 $d
     /tmp/ccoDWd4X.s:493    .text.TIM1_CC_IRQHandler:0000000000000000 $t
     /tmp/ccoDWd4X.s:499    .text.TIM1_CC_IRQHandler:0000000000000000 TIM1_CC_IRQHandler
     /tmp/ccoDWd4X.s:525    .text.TIM1_CC_IRQHandler:0000000000000014 $d
     /tmp/ccoDWd4X.s:531    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000000 $t
     /tmp/ccoDWd4X.s:537    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000000 TIM1_BRK_TIM15_IRQHandler
     /tmp/ccoDWd4X.s:563    .text.TIM1_BRK_TIM15_IRQHandler:0000000000000014 $d
     /tmp/ccoDWd4X.s:569    .text.TIM7_IRQHandler:0000000000000000 $t
     /tmp/ccoDWd4X.s:575    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
     /tmp/ccoDWd4X.s:601    .text.TIM7_IRQHandler:0000000000000014 $d
     /tmp/ccoDWd4X.s:607    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccoDWd4X.s:613    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccoDWd4X.s:669    .text.HAL_GPIO_EXTI_Callback:0000000000000030 $d
     /tmp/ccoDWd4X.s:674    .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccoDWd4X.s:678    .text.Error_Handler:0000000000000000 $t
     /tmp/ccoDWd4X.s:684    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccoDWd4X.s:740    .text.Error_Handler:0000000000000030 $d
     /tmp/ccoDWd4X.s:745    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:750    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccoDWd4X.s:1021   .text.MX_ADC1_Init:0000000000000124 $d
     /tmp/ccoDWd4X.s:1035   .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1040   .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccoDWd4X.s:1100   .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccoDWd4X.s:1106   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1111   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccoDWd4X.s:1341   .text.MX_TIM1_Init:00000000000000f4 $d
     /tmp/ccoDWd4X.s:1347   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1352   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccoDWd4X.s:1412   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccoDWd4X.s:1418   .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1423   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccoDWd4X.s:1483   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/ccoDWd4X.s:1489   .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1494   .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccoDWd4X.s:1706   .text.MX_TIM15_Init:00000000000000e0 $d
     /tmp/ccoDWd4X.s:1712   .text.MX_TIM16_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1717   .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
     /tmp/ccoDWd4X.s:1767   .text.MX_TIM16_Init:0000000000000028 $d
     /tmp/ccoDWd4X.s:1773   .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccoDWd4X.s:1778   .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccoDWd4X.s:1853   .text.MX_TIM7_Init:0000000000000048 $d
     /tmp/ccoDWd4X.s:1859   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccoDWd4X.s:1865   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccoDWd4X.s:1971   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccoDWd4X.s:1977   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccoDWd4X.s:2055   .text.main:0000000000000000 $t
     /tmp/ccoDWd4X.s:2061   .text.main:0000000000000000 main
ARM GAS  /tmp/ccoDWd4X.s 			page 72


     /tmp/ccoDWd4X.s:2183   .text.main:000000000000009c $d
     /tmp/ccoDWd4X.s:2212   .bss.UART1_rxBuffer:0000000000000000 UART1_rxBuffer
     /tmp/ccoDWd4X.s:2219   .bss.adc_data:0000000000000000 adc_data
     /tmp/ccoDWd4X.s:2294   .data.hmi_info:0000000000000000 hmi_info
     /tmp/ccoDWd4X.s:2238   .bss.hdma_usart1_rx:0000000000000000 hdma_usart1_rx
     /tmp/ccoDWd4X.s:2287   .bss.huart3:0000000000000000 huart3
     /tmp/ccoDWd4X.s:2280   .bss.huart2:0000000000000000 huart2
     /tmp/ccoDWd4X.s:2273   .bss.huart1:0000000000000000 huart1
     /tmp/ccoDWd4X.s:2259   .bss.htim16:0000000000000000 htim16
     /tmp/ccoDWd4X.s:2252   .bss.htim15:0000000000000000 htim15
     /tmp/ccoDWd4X.s:2266   .bss.htim7:0000000000000000 htim7
     /tmp/ccoDWd4X.s:2245   .bss.htim1:0000000000000000 htim1
     /tmp/ccoDWd4X.s:2232   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/ccoDWd4X.s:2226   .bss.hadc1:0000000000000000 hadc1
     /tmp/ccoDWd4X.s:2208   .bss.UART1_rxBuffer:0000000000000000 $d
     /tmp/ccoDWd4X.s:2215   .bss.adc_data:0000000000000000 $d
     /tmp/ccoDWd4X.s:2222   .bss.hadc1:0000000000000000 $d
     /tmp/ccoDWd4X.s:2229   .bss.hdma_adc1:0000000000000000 $d
     /tmp/ccoDWd4X.s:2235   .bss.hdma_usart1_rx:0000000000000000 $d
     /tmp/ccoDWd4X.s:2241   .bss.htim1:0000000000000000 $d
     /tmp/ccoDWd4X.s:2248   .bss.htim15:0000000000000000 $d
     /tmp/ccoDWd4X.s:2255   .bss.htim16:0000000000000000 $d
     /tmp/ccoDWd4X.s:2262   .bss.htim7:0000000000000000 $d
     /tmp/ccoDWd4X.s:2269   .bss.huart1:0000000000000000 $d
     /tmp/ccoDWd4X.s:2276   .bss.huart2:0000000000000000 $d
     /tmp/ccoDWd4X.s:2283   .bss.huart3:0000000000000000 $d
     /tmp/ccoDWd4X.s:2290   .data.hmi_info:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ReadGcodeDMA
HAL_UART_Receive_DMA
CNC_TIM_Callback_X
CNC_TIM_Callback_Y
HMI_Update
CNC_Stop
CNC_Limit_X
CNC_Limit_Y
clearLCD
setCursor
writeLCD
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
ARM GAS  /tmp/ccoDWd4X.s 			page 73


HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
initLCD
HAL_TIM_Base_Start_IT
HAL_TIMEx_PWMN_Start_IT
HAL_TIM_PWM_Start_IT
HAL_ADC_Start_DMA
CNC_HL_Control
