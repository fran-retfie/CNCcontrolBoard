ARM GAS  /tmp/cc3i1fqf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_DMA_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_DMA_Init:
  26              	.LFB299:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdbool.h>
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc3i1fqf.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  45:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** UART_HandleTypeDef huart3;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  60:Core/Src/main.c **** static void MX_GPIO_Init(void);
  61:Core/Src/main.c **** static void MX_DMA_Init(void);
  62:Core/Src/main.c **** static void MX_ADC1_Init(void);
  63:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  64:Core/Src/main.c **** static void MX_TIM1_Init(void);
  65:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  66:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  67:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/cc3i1fqf.s 			page 3


  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Configure the peripherals common clocks */
  99:Core/Src/main.c ****   PeriphCommonClock_Config();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Initialize all configured peripherals */
 106:Core/Src/main.c ****   MX_GPIO_Init();
 107:Core/Src/main.c ****   MX_DMA_Init();
 108:Core/Src/main.c ****   MX_ADC1_Init();
 109:Core/Src/main.c ****   MX_USART1_UART_Init();
 110:Core/Src/main.c ****   MX_TIM1_Init();
 111:Core/Src/main.c ****   MX_USART2_UART_Init();
 112:Core/Src/main.c ****   MX_USART3_UART_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   char textStr[10] = "start";
 115:Core/Src/main.c ****   initLCD();
 116:Core/Src/main.c ****   clearLCD();
 117:Core/Src/main.c ****   writeLCD(textStr);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   volatile uint16_t adc_data[8];
 120:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 8);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   uint8_t uartData[11];
 123:Core/Src/main.c ****   
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   while (1)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****     setCursor(0, 0);
 134:Core/Src/main.c ****     while(1){
 135:Core/Src/main.c ****       if(HAL_UART_Receive(&huart1, uartData, 11, 100) == HAL_OK){
 136:Core/Src/main.c ****         if(uartData[10] == 0){
 137:Core/Src/main.c ****           sprintf(textStr, "receiced");
 138:Core/Src/main.c ****           setCursor(0, 0);
 139:Core/Src/main.c ****           writeLCD(textStr);
 140:Core/Src/main.c ****           break;
 141:Core/Src/main.c ****         }
 142:Core/Src/main.c ****       }
 143:Core/Src/main.c ****     }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 
ARM GAS  /tmp/cc3i1fqf.s 			page 4


 146:Core/Src/main.c ****     uint16_t *X_value, *Y_value, *g_cmd, *sum_value, *xor_value;
 147:Core/Src/main.c ****     X_value   = uartData;
 148:Core/Src/main.c ****     Y_value   = uartData + 2;
 149:Core/Src/main.c ****     g_cmd     = uartData + 4;
 150:Core/Src/main.c ****     sum_value = uartData + 6;
 151:Core/Src/main.c ****     xor_value = uartData + 8;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     sprintf(textStr, "%u", *g_cmd);
 154:Core/Src/main.c ****     setCursor(9, 0);
 155:Core/Src/main.c ****     writeLCD(textStr);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     GetData(uartData, X_value, Y_value, g_cmd, sum_value, xor_value);
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     if(CheckSum(*X_value, *Y_value, *sum_value, *xor_value)){
 160:Core/Src/main.c ****       sprintf(textStr, "ACK");
 161:Core/Src/main.c ****     }
 162:Core/Src/main.c ****     else {
 163:Core/Src/main.c ****       sprintf(textStr, "NAK");
 164:Core/Src/main.c ****     } 
 165:Core/Src/main.c ****     setCursor(0, 1);
 166:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, textStr, strlen(textStr), 100);
 167:Core/Src/main.c ****     writeLCD(textStr);
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 189:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 192:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 194:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 202:Core/Src/main.c ****   */
ARM GAS  /tmp/cc3i1fqf.s 			page 5


 203:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 205:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 211:Core/Src/main.c ****   {
 212:Core/Src/main.c ****     Error_Handler();
 213:Core/Src/main.c ****   }
 214:Core/Src/main.c **** }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Initializes the peripherals clock
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_ADC;
 227:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 228:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 233:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 234:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 235:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 236:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 244:Core/Src/main.c ****   * @param None
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** static void MX_ADC1_Init(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 259:Core/Src/main.c **** 
ARM GAS  /tmp/cc3i1fqf.s 			page 6


 260:Core/Src/main.c ****   /** Common config
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c ****   hadc1.Instance = ADC1;
 263:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 264:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 265:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 266:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 267:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 268:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 269:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 270:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 271:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 272:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 273:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 274:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 275:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 276:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 277:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /** Configure Regular Channel
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 285:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 286:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 287:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 288:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 289:Core/Src/main.c ****   sConfig.Offset = 0;
 290:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****     Error_Handler();
 293:Core/Src/main.c ****   }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /** Configure Regular Channel
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 298:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 299:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 300:Core/Src/main.c ****   {
 301:Core/Src/main.c ****     Error_Handler();
 302:Core/Src/main.c ****   }
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /** Configure Regular Channel
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 307:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 308:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /** Configure Regular Channel
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 316:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
ARM GAS  /tmp/cc3i1fqf.s 			page 7


 317:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 318:Core/Src/main.c ****   {
 319:Core/Src/main.c ****     Error_Handler();
 320:Core/Src/main.c ****   }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /** Configure Regular Channel
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 325:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 326:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /** Configure Regular Channel
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_10;
 334:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 335:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /** Configure Regular Channel
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_12;
 343:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 344:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /** Configure Regular Channel
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_13;
 352:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 353:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** }
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** /**
 364:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 365:Core/Src/main.c ****   * @param None
 366:Core/Src/main.c ****   * @retval None
 367:Core/Src/main.c ****   */
 368:Core/Src/main.c **** static void MX_TIM1_Init(void)
 369:Core/Src/main.c **** {
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
ARM GAS  /tmp/cc3i1fqf.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 376:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 377:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 378:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 379:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 384:Core/Src/main.c ****   htim1.Instance = TIM1;
 385:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 386:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 387:Core/Src/main.c ****   htim1.Init.Period = 65535;
 388:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 389:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 390:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 391:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c ****     Error_Handler();
 394:Core/Src/main.c ****   }
 395:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 396:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     Error_Handler();
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 405:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 406:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 407:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   sBreakInputConfig.Source = TIM_BREAKINPUTSOURCE_BKIN;
 412:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 413:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 414:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 415:Core/Src/main.c ****   {
 416:Core/Src/main.c ****     Error_Handler();
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 419:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 420:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 421:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 422:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 423:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 424:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 430:Core/Src/main.c ****   {
ARM GAS  /tmp/cc3i1fqf.s 			page 9


 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 434:Core/Src/main.c ****   {
 435:Core/Src/main.c ****     Error_Handler();
 436:Core/Src/main.c ****   }
 437:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 438:Core/Src/main.c ****   {
 439:Core/Src/main.c ****     Error_Handler();
 440:Core/Src/main.c ****   }
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 443:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 444:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 445:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 446:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 447:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 448:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 449:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 450:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 451:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 452:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 453:Core/Src/main.c ****   {
 454:Core/Src/main.c ****     Error_Handler();
 455:Core/Src/main.c ****   }
 456:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 459:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** }
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** /**
 464:Core/Src/main.c ****   * @brief USART1 Initialization Function
 465:Core/Src/main.c ****   * @param None
 466:Core/Src/main.c ****   * @retval None
 467:Core/Src/main.c ****   */
 468:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 469:Core/Src/main.c **** {
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 478:Core/Src/main.c ****   huart1.Instance = USART1;
 479:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 480:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 481:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 482:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 483:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 484:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 485:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 486:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 487:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  /tmp/cc3i1fqf.s 			page 10


 488:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 489:Core/Src/main.c ****   {
 490:Core/Src/main.c ****     Error_Handler();
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /**
 499:Core/Src/main.c ****   * @brief USART2 Initialization Function
 500:Core/Src/main.c ****   * @param None
 501:Core/Src/main.c ****   * @retval None
 502:Core/Src/main.c ****   */
 503:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 504:Core/Src/main.c **** {
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 513:Core/Src/main.c ****   huart2.Instance = USART2;
 514:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 515:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 516:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 517:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 518:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 519:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 520:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 521:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 522:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 523:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** }
 532:Core/Src/main.c **** 
 533:Core/Src/main.c **** /**
 534:Core/Src/main.c ****   * @brief USART3 Initialization Function
 535:Core/Src/main.c ****   * @param None
 536:Core/Src/main.c ****   * @retval None
 537:Core/Src/main.c ****   */
 538:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 539:Core/Src/main.c **** {
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 544:Core/Src/main.c **** 
ARM GAS  /tmp/cc3i1fqf.s 			page 11


 545:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 548:Core/Src/main.c ****   huart3.Instance = USART3;
 549:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 550:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 551:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 552:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 553:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 554:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 555:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 556:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 557:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 558:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 559:Core/Src/main.c ****   {
 560:Core/Src/main.c ****     Error_Handler();
 561:Core/Src/main.c ****   }
 562:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** }
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** /**
 569:Core/Src/main.c ****   * Enable DMA controller clock
 570:Core/Src/main.c ****   */
 571:Core/Src/main.c **** static void MX_DMA_Init(void)
 572:Core/Src/main.c **** {
  28              		.loc 1 572 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 573:Core/Src/main.c **** 
 574:Core/Src/main.c ****   /* DMA controller clock enable */
 575:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  35              		.loc 1 575 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 575 3 view .LVU2
  38              		.loc 1 575 3 view .LVU3
  39 0002 064B     		ldr	r3, .L3
  40 0004 9A6C     		ldr	r2, [r3, #72]
  41 0006 42F00102 		orr	r2, r2, #1
  42 000a 9A64     		str	r2, [r3, #72]
  43              		.loc 1 575 3 view .LVU4
  44 000c 9B6C     		ldr	r3, [r3, #72]
  45 000e 03F00103 		and	r3, r3, #1
  46 0012 0193     		str	r3, [sp, #4]
  47              		.loc 1 575 3 view .LVU5
  48 0014 019B     		ldr	r3, [sp, #4]
  49              	.LBE4:
  50              		.loc 1 575 3 view .LVU6
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** }
  51              		.loc 1 577 1 is_stmt 0 view .LVU7
ARM GAS  /tmp/cc3i1fqf.s 			page 12


  52 0016 02B0     		add	sp, sp, #8
  53              		.cfi_def_cfa_offset 0
  54              		@ sp needed
  55 0018 7047     		bx	lr
  56              	.L4:
  57 001a 00BF     		.align	2
  58              	.L3:
  59 001c 00100240 		.word	1073876992
  60              		.cfi_endproc
  61              	.LFE299:
  63              		.section	.text.MX_GPIO_Init,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	MX_GPIO_Init:
  70              	.LFB300:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /**
 580:Core/Src/main.c ****   * @brief GPIO Initialization Function
 581:Core/Src/main.c ****   * @param None
 582:Core/Src/main.c ****   * @retval None
 583:Core/Src/main.c ****   */
 584:Core/Src/main.c **** static void MX_GPIO_Init(void)
 585:Core/Src/main.c **** {
  71              		.loc 1 585 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 48
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  76              		.cfi_def_cfa_offset 28
  77              		.cfi_offset 4, -28
  78              		.cfi_offset 5, -24
  79              		.cfi_offset 6, -20
  80              		.cfi_offset 7, -16
  81              		.cfi_offset 8, -12
  82              		.cfi_offset 9, -8
  83              		.cfi_offset 14, -4
  84 0004 8DB0     		sub	sp, sp, #52
  85              		.cfi_def_cfa_offset 80
 586:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  86              		.loc 1 586 3 view .LVU9
  87              		.loc 1 586 20 is_stmt 0 view .LVU10
  88 0006 0024     		movs	r4, #0
  89 0008 0794     		str	r4, [sp, #28]
  90 000a 0894     		str	r4, [sp, #32]
  91 000c 0994     		str	r4, [sp, #36]
  92 000e 0A94     		str	r4, [sp, #40]
  93 0010 0B94     		str	r4, [sp, #44]
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 589:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  94              		.loc 1 589 3 is_stmt 1 view .LVU11
  95              	.LBB5:
  96              		.loc 1 589 3 view .LVU12
  97              		.loc 1 589 3 view .LVU13
  98 0012 584B     		ldr	r3, .L7
ARM GAS  /tmp/cc3i1fqf.s 			page 13


  99 0014 DA6C     		ldr	r2, [r3, #76]
 100 0016 42F01002 		orr	r2, r2, #16
 101 001a DA64     		str	r2, [r3, #76]
 102              		.loc 1 589 3 view .LVU14
 103 001c DA6C     		ldr	r2, [r3, #76]
 104 001e 02F01002 		and	r2, r2, #16
 105 0022 0192     		str	r2, [sp, #4]
 106              		.loc 1 589 3 view .LVU15
 107 0024 019A     		ldr	r2, [sp, #4]
 108              	.LBE5:
 109              		.loc 1 589 3 view .LVU16
 590:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 110              		.loc 1 590 3 view .LVU17
 111              	.LBB6:
 112              		.loc 1 590 3 view .LVU18
 113              		.loc 1 590 3 view .LVU19
 114 0026 DA6C     		ldr	r2, [r3, #76]
 115 0028 42F00402 		orr	r2, r2, #4
 116 002c DA64     		str	r2, [r3, #76]
 117              		.loc 1 590 3 view .LVU20
 118 002e DA6C     		ldr	r2, [r3, #76]
 119 0030 02F00402 		and	r2, r2, #4
 120 0034 0292     		str	r2, [sp, #8]
 121              		.loc 1 590 3 view .LVU21
 122 0036 029A     		ldr	r2, [sp, #8]
 123              	.LBE6:
 124              		.loc 1 590 3 view .LVU22
 591:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 125              		.loc 1 591 3 view .LVU23
 126              	.LBB7:
 127              		.loc 1 591 3 view .LVU24
 128              		.loc 1 591 3 view .LVU25
 129 0038 DA6C     		ldr	r2, [r3, #76]
 130 003a 42F08002 		orr	r2, r2, #128
 131 003e DA64     		str	r2, [r3, #76]
 132              		.loc 1 591 3 view .LVU26
 133 0040 DA6C     		ldr	r2, [r3, #76]
 134 0042 02F08002 		and	r2, r2, #128
 135 0046 0392     		str	r2, [sp, #12]
 136              		.loc 1 591 3 view .LVU27
 137 0048 039A     		ldr	r2, [sp, #12]
 138              	.LBE7:
 139              		.loc 1 591 3 view .LVU28
 592:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 140              		.loc 1 592 3 view .LVU29
 141              	.LBB8:
 142              		.loc 1 592 3 view .LVU30
 143              		.loc 1 592 3 view .LVU31
 144 004a DA6C     		ldr	r2, [r3, #76]
 145 004c 42F00102 		orr	r2, r2, #1
 146 0050 DA64     		str	r2, [r3, #76]
 147              		.loc 1 592 3 view .LVU32
 148 0052 DA6C     		ldr	r2, [r3, #76]
 149 0054 02F00102 		and	r2, r2, #1
 150 0058 0492     		str	r2, [sp, #16]
 151              		.loc 1 592 3 view .LVU33
 152 005a 049A     		ldr	r2, [sp, #16]
ARM GAS  /tmp/cc3i1fqf.s 			page 14


 153              	.LBE8:
 154              		.loc 1 592 3 view .LVU34
 593:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 155              		.loc 1 593 3 view .LVU35
 156              	.LBB9:
 157              		.loc 1 593 3 view .LVU36
 158              		.loc 1 593 3 view .LVU37
 159 005c DA6C     		ldr	r2, [r3, #76]
 160 005e 42F00202 		orr	r2, r2, #2
 161 0062 DA64     		str	r2, [r3, #76]
 162              		.loc 1 593 3 view .LVU38
 163 0064 DA6C     		ldr	r2, [r3, #76]
 164 0066 02F00202 		and	r2, r2, #2
 165 006a 0592     		str	r2, [sp, #20]
 166              		.loc 1 593 3 view .LVU39
 167 006c 059A     		ldr	r2, [sp, #20]
 168              	.LBE9:
 169              		.loc 1 593 3 view .LVU40
 594:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 170              		.loc 1 594 3 view .LVU41
 171              	.LBB10:
 172              		.loc 1 594 3 view .LVU42
 173              		.loc 1 594 3 view .LVU43
 174 006e DA6C     		ldr	r2, [r3, #76]
 175 0070 42F00802 		orr	r2, r2, #8
 176 0074 DA64     		str	r2, [r3, #76]
 177              		.loc 1 594 3 view .LVU44
 178 0076 DB6C     		ldr	r3, [r3, #76]
 179 0078 03F00803 		and	r3, r3, #8
 180 007c 0693     		str	r3, [sp, #24]
 181              		.loc 1 594 3 view .LVU45
 182 007e 069B     		ldr	r3, [sp, #24]
 183              	.LBE10:
 184              		.loc 1 594 3 view .LVU46
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 597:Core/Src/main.c ****   HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 185              		.loc 1 597 3 view .LVU47
 186 0080 2246     		mov	r2, r4
 187 0082 0221     		movs	r1, #2
 188 0084 4FF09040 		mov	r0, #1207959552
 189 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL0:
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 600:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PO0_Pin|SW2_Pin|SW3_Pin, GPIO_PIN_RESET);
 191              		.loc 1 600 3 view .LVU48
 192 008c DFF8F090 		ldr	r9, .L7+12
 193 0090 2246     		mov	r2, r4
 194 0092 E021     		movs	r1, #224
 195 0094 4846     		mov	r0, r9
 196 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL1:
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 603:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, PO1_Pin|PO2_Pin|DIR3_Pin|O8_Pin
 198              		.loc 1 603 3 view .LVU49
ARM GAS  /tmp/cc3i1fqf.s 			page 15


 199 009a 374E     		ldr	r6, .L7+4
 200 009c 2246     		mov	r2, r4
 201 009e 4DF2C531 		movw	r1, #54213
 202 00a2 3046     		mov	r0, r6
 203 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL2:
 604:Core/Src/main.c ****                           |O9_Pin|D4_Pin|D5_Pin|D6_Pin
 605:Core/Src/main.c ****                           |D7_Pin, GPIO_PIN_RESET);
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 608:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, PO3_Pin|O0_Pin|O2_Pin|O4_Pin
 205              		.loc 1 608 3 view .LVU50
 206 00a8 DFF8D880 		ldr	r8, .L7+16
 207 00ac 2246     		mov	r2, r4
 208 00ae 49F28351 		movw	r1, #38275
 209 00b2 4046     		mov	r0, r8
 210 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 211              	.LVL3:
 609:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin, GPIO_PIN_RESET);
 610:Core/Src/main.c **** 
 611:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 612:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, O10_Pin|O11_Pin|O12_Pin|O13_Pin
 212              		.loc 1 612 3 view .LVU51
 213 00b8 304F     		ldr	r7, .L7+8
 214 00ba 2246     		mov	r2, r4
 215 00bc 4FF47F41 		mov	r1, #65280
 216 00c0 3846     		mov	r0, r7
 217 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218              	.LVL4:
 613:Core/Src/main.c ****                           |O14_Pin|O15_Pin|SW0_Pin|SW1_Pin, GPIO_PIN_RESET);
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /*Configure GPIO pins : PB7_Pin PB6_Pin PB5_Pin PB4_Pin
 616:Core/Src/main.c ****                            PB3_Pin */
 617:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB7_Pin|PB6_Pin|PB5_Pin|PB4_Pin
 219              		.loc 1 617 3 view .LVU52
 220              		.loc 1 617 23 is_stmt 0 view .LVU53
 221 00c6 7C23     		movs	r3, #124
 222 00c8 0793     		str	r3, [sp, #28]
 618:Core/Src/main.c ****                           |PB3_Pin;
 619:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 223              		.loc 1 619 3 is_stmt 1 view .LVU54
 224              		.loc 1 619 24 is_stmt 0 view .LVU55
 225 00ca 0894     		str	r4, [sp, #32]
 620:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 620 3 is_stmt 1 view .LVU56
 227              		.loc 1 620 24 is_stmt 0 view .LVU57
 228 00cc 0994     		str	r4, [sp, #36]
 621:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 229              		.loc 1 621 3 is_stmt 1 view .LVU58
 230 00ce 07A9     		add	r1, sp, #28
 231 00d0 4046     		mov	r0, r8
 232 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL5:
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /*Configure GPIO pins : PB2_Pin PB1_Pin PB0_Pin */
 624:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB2_Pin|PB1_Pin|PB0_Pin;
 234              		.loc 1 624 3 view .LVU59
ARM GAS  /tmp/cc3i1fqf.s 			page 16


 235              		.loc 1 624 23 is_stmt 0 view .LVU60
 236 00d6 4FF46043 		mov	r3, #57344
 237 00da 0793     		str	r3, [sp, #28]
 625:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 238              		.loc 1 625 3 is_stmt 1 view .LVU61
 239              		.loc 1 625 24 is_stmt 0 view .LVU62
 240 00dc 0894     		str	r4, [sp, #32]
 626:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 241              		.loc 1 626 3 is_stmt 1 view .LVU63
 242              		.loc 1 626 24 is_stmt 0 view .LVU64
 243 00de 0994     		str	r4, [sp, #36]
 627:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 244              		.loc 1 627 3 is_stmt 1 view .LVU65
 245 00e0 07A9     		add	r1, sp, #28
 246 00e2 4846     		mov	r0, r9
 247 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL6:
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /*Configure GPIO pin : DIR2_Pin */
 630:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIR2_Pin;
 249              		.loc 1 630 3 view .LVU66
 250              		.loc 1 630 23 is_stmt 0 view .LVU67
 251 00e8 0223     		movs	r3, #2
 252 00ea 0793     		str	r3, [sp, #28]
 631:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 253              		.loc 1 631 3 is_stmt 1 view .LVU68
 254              		.loc 1 631 24 is_stmt 0 view .LVU69
 255 00ec 0125     		movs	r5, #1
 256 00ee 0895     		str	r5, [sp, #32]
 632:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 257              		.loc 1 632 3 is_stmt 1 view .LVU70
 258              		.loc 1 632 24 is_stmt 0 view .LVU71
 259 00f0 0994     		str	r4, [sp, #36]
 633:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 260              		.loc 1 633 3 is_stmt 1 view .LVU72
 261              		.loc 1 633 25 is_stmt 0 view .LVU73
 262 00f2 0A94     		str	r4, [sp, #40]
 634:Core/Src/main.c ****   HAL_GPIO_Init(DIR2_GPIO_Port, &GPIO_InitStruct);
 263              		.loc 1 634 3 is_stmt 1 view .LVU74
 264 00f4 07A9     		add	r1, sp, #28
 265 00f6 4FF09040 		mov	r0, #1207959552
 266 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 267              	.LVL7:
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /*Configure GPIO pins : PO0_Pin SW2_Pin SW3_Pin */
 637:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO0_Pin|SW2_Pin|SW3_Pin;
 268              		.loc 1 637 3 view .LVU75
 269              		.loc 1 637 23 is_stmt 0 view .LVU76
 270 00fe E023     		movs	r3, #224
 271 0100 0793     		str	r3, [sp, #28]
 638:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 272              		.loc 1 638 3 is_stmt 1 view .LVU77
 273              		.loc 1 638 24 is_stmt 0 view .LVU78
 274 0102 0895     		str	r5, [sp, #32]
 639:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 275              		.loc 1 639 3 is_stmt 1 view .LVU79
 276              		.loc 1 639 24 is_stmt 0 view .LVU80
ARM GAS  /tmp/cc3i1fqf.s 			page 17


 277 0104 0994     		str	r4, [sp, #36]
 640:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 278              		.loc 1 640 3 is_stmt 1 view .LVU81
 279              		.loc 1 640 25 is_stmt 0 view .LVU82
 280 0106 0A94     		str	r4, [sp, #40]
 641:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 281              		.loc 1 641 3 is_stmt 1 view .LVU83
 282 0108 07A9     		add	r1, sp, #28
 283 010a 4846     		mov	r0, r9
 284 010c FFF7FEFF 		bl	HAL_GPIO_Init
 285              	.LVL8:
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /*Configure GPIO pins : PO1_Pin PO2_Pin DIR3_Pin O8_Pin
 644:Core/Src/main.c ****                            O9_Pin D4_Pin D5_Pin D6_Pin
 645:Core/Src/main.c ****                            D7_Pin */
 646:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO1_Pin|PO2_Pin|DIR3_Pin|O8_Pin
 286              		.loc 1 646 3 view .LVU84
 287              		.loc 1 646 23 is_stmt 0 view .LVU85
 288 0110 4DF2C533 		movw	r3, #54213
 289 0114 0793     		str	r3, [sp, #28]
 647:Core/Src/main.c ****                           |O9_Pin|D4_Pin|D5_Pin|D6_Pin
 648:Core/Src/main.c ****                           |D7_Pin;
 649:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 290              		.loc 1 649 3 is_stmt 1 view .LVU86
 291              		.loc 1 649 24 is_stmt 0 view .LVU87
 292 0116 0895     		str	r5, [sp, #32]
 650:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 293              		.loc 1 650 3 is_stmt 1 view .LVU88
 294              		.loc 1 650 24 is_stmt 0 view .LVU89
 295 0118 0994     		str	r4, [sp, #36]
 651:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 296              		.loc 1 651 3 is_stmt 1 view .LVU90
 297              		.loc 1 651 25 is_stmt 0 view .LVU91
 298 011a 0A94     		str	r4, [sp, #40]
 652:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 299              		.loc 1 652 3 is_stmt 1 view .LVU92
 300 011c 07A9     		add	r1, sp, #28
 301 011e 3046     		mov	r0, r6
 302 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 303              	.LVL9:
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****   /*Configure GPIO pins : PO3_Pin O0_Pin O2_Pin O4_Pin
 655:Core/Src/main.c ****                            O7_Pin EN_Pin RS_Pin */
 656:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO3_Pin|O0_Pin|O2_Pin|O4_Pin
 304              		.loc 1 656 3 view .LVU93
 305              		.loc 1 656 23 is_stmt 0 view .LVU94
 306 0124 49F28353 		movw	r3, #38275
 307 0128 0793     		str	r3, [sp, #28]
 657:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin;
 658:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 308              		.loc 1 658 3 is_stmt 1 view .LVU95
 309              		.loc 1 658 24 is_stmt 0 view .LVU96
 310 012a 0895     		str	r5, [sp, #32]
 659:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 311              		.loc 1 659 3 is_stmt 1 view .LVU97
 312              		.loc 1 659 24 is_stmt 0 view .LVU98
 313 012c 0994     		str	r4, [sp, #36]
ARM GAS  /tmp/cc3i1fqf.s 			page 18


 660:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 314              		.loc 1 660 3 is_stmt 1 view .LVU99
 315              		.loc 1 660 25 is_stmt 0 view .LVU100
 316 012e 0A94     		str	r4, [sp, #40]
 661:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 317              		.loc 1 661 3 is_stmt 1 view .LVU101
 318 0130 07A9     		add	r1, sp, #28
 319 0132 4046     		mov	r0, r8
 320 0134 FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL10:
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****   /*Configure GPIO pins : O10_Pin O11_Pin O12_Pin O13_Pin
 664:Core/Src/main.c ****                            O14_Pin O15_Pin SW0_Pin SW1_Pin */
 665:Core/Src/main.c ****   GPIO_InitStruct.Pin = O10_Pin|O11_Pin|O12_Pin|O13_Pin
 322              		.loc 1 665 3 view .LVU102
 323              		.loc 1 665 23 is_stmt 0 view .LVU103
 324 0138 4FF47F43 		mov	r3, #65280
 325 013c 0793     		str	r3, [sp, #28]
 666:Core/Src/main.c ****                           |O14_Pin|O15_Pin|SW0_Pin|SW1_Pin;
 667:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 326              		.loc 1 667 3 is_stmt 1 view .LVU104
 327              		.loc 1 667 24 is_stmt 0 view .LVU105
 328 013e 0895     		str	r5, [sp, #32]
 668:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 329              		.loc 1 668 3 is_stmt 1 view .LVU106
 330              		.loc 1 668 24 is_stmt 0 view .LVU107
 331 0140 0994     		str	r4, [sp, #36]
 669:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 332              		.loc 1 669 3 is_stmt 1 view .LVU108
 333              		.loc 1 669 25 is_stmt 0 view .LVU109
 334 0142 0A94     		str	r4, [sp, #40]
 670:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 335              		.loc 1 670 3 is_stmt 1 view .LVU110
 336 0144 07A9     		add	r1, sp, #28
 337 0146 3846     		mov	r0, r7
 338 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 339              	.LVL11:
 671:Core/Src/main.c **** 
 672:Core/Src/main.c ****   /*Configure GPIO pins : I0_Pin I1_Pin I2_Pin I3_Pin
 673:Core/Src/main.c ****                            I4_Pin I5_Pin I6_Pin */
 674:Core/Src/main.c ****   GPIO_InitStruct.Pin = I0_Pin|I1_Pin|I2_Pin|I3_Pin
 340              		.loc 1 674 3 view .LVU111
 341              		.loc 1 674 23 is_stmt 0 view .LVU112
 342 014c FB23     		movs	r3, #251
 343 014e 0793     		str	r3, [sp, #28]
 675:Core/Src/main.c ****                           |I4_Pin|I5_Pin|I6_Pin;
 676:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 344              		.loc 1 676 3 is_stmt 1 view .LVU113
 345              		.loc 1 676 24 is_stmt 0 view .LVU114
 346 0150 0894     		str	r4, [sp, #32]
 677:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 347              		.loc 1 677 3 is_stmt 1 view .LVU115
 348              		.loc 1 677 24 is_stmt 0 view .LVU116
 349 0152 0994     		str	r4, [sp, #36]
 678:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 350              		.loc 1 678 3 is_stmt 1 view .LVU117
 351 0154 07A9     		add	r1, sp, #28
ARM GAS  /tmp/cc3i1fqf.s 			page 19


 352 0156 3846     		mov	r0, r7
 353 0158 FFF7FEFF 		bl	HAL_GPIO_Init
 354              	.LVL12:
 679:Core/Src/main.c **** 
 680:Core/Src/main.c ****   /*Configure GPIO pin : I7_Pin */
 681:Core/Src/main.c ****   GPIO_InitStruct.Pin = I7_Pin;
 355              		.loc 1 681 3 view .LVU118
 356              		.loc 1 681 23 is_stmt 0 view .LVU119
 357 015c 0823     		movs	r3, #8
 358 015e 0793     		str	r3, [sp, #28]
 682:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 682 3 is_stmt 1 view .LVU120
 360              		.loc 1 682 24 is_stmt 0 view .LVU121
 361 0160 0894     		str	r4, [sp, #32]
 683:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 683 3 is_stmt 1 view .LVU122
 363              		.loc 1 683 24 is_stmt 0 view .LVU123
 364 0162 0994     		str	r4, [sp, #36]
 684:Core/Src/main.c ****   HAL_GPIO_Init(I7_GPIO_Port, &GPIO_InitStruct);
 365              		.loc 1 684 3 is_stmt 1 view .LVU124
 366 0164 07A9     		add	r1, sp, #28
 367 0166 3046     		mov	r0, r6
 368 0168 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL13:
 685:Core/Src/main.c **** 
 686:Core/Src/main.c **** }
 370              		.loc 1 686 1 is_stmt 0 view .LVU125
 371 016c 0DB0     		add	sp, sp, #52
 372              		.cfi_def_cfa_offset 28
 373              		@ sp needed
 374 016e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 375              	.L8:
 376 0172 00BF     		.align	2
 377              	.L7:
 378 0174 00100240 		.word	1073876992
 379 0178 00040048 		.word	1207960576
 380 017c 000C0048 		.word	1207962624
 381 0180 00080048 		.word	1207961600
 382 0184 00100048 		.word	1207963648
 383              		.cfi_endproc
 384              	.LFE300:
 386              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 387              		.align	2
 388              	.LC0:
 389 0000 71756920 		.ascii	"qui si \303\250\012rotto tutto\000"
 389      736920C3 
 389      A80A726F 
 389      74746F20 
 389      74757474 
 390              		.section	.text.Error_Handler,"ax",%progbits
 391              		.align	1
 392              		.global	Error_Handler
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	Error_Handler:
 398              	.LFB301:
ARM GAS  /tmp/cc3i1fqf.s 			page 20


 687:Core/Src/main.c **** 
 688:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 689:Core/Src/main.c **** 
 690:Core/Src/main.c **** /* USER CODE END 4 */
 691:Core/Src/main.c **** 
 692:Core/Src/main.c **** /**
 693:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 694:Core/Src/main.c ****   * @retval None
 695:Core/Src/main.c ****   */
 696:Core/Src/main.c **** void Error_Handler(void)
 697:Core/Src/main.c **** {
 399              		.loc 1 697 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ Volatile: function does not return.
 402              		@ args = 0, pretend = 0, frame = 24
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 00B5     		push	{lr}
 405              		.cfi_def_cfa_offset 4
 406              		.cfi_offset 14, -4
 407 0002 87B0     		sub	sp, sp, #28
 408              		.cfi_def_cfa_offset 32
 698:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 699:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 700:Core/Src/main.c ****   __disable_irq();
 409              		.loc 1 700 3 view .LVU127
 410              	.LBB11:
 411              	.LBI11:
 412              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/cc3i1fqf.s 			page 21


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/cc3i1fqf.s 			page 22


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  /tmp/cc3i1fqf.s 			page 23


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc3i1fqf.s 			page 24


 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 413              		.loc 2 207 27 view .LVU128
 414              	.LBB12:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 415              		.loc 2 209 3 view .LVU129
 416              		.syntax unified
 417              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 418 0004 72B6     		cpsid i
 419              	@ 0 "" 2
 420              		.thumb
 421              		.syntax unified
 422              	.LBE12:
 423              	.LBE11:
 701:Core/Src/main.c ****   char textStr[] = "qui si è\nrotto tutto";
 424              		.loc 1 701 3 view .LVU130
 425              		.loc 1 701 8 is_stmt 0 view .LVU131
 426 0006 EC46     		mov	ip, sp
 427 0008 094C     		ldr	r4, .L12
 428 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 429 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 430 0010 94E80300 		ldm	r4, {r0, r1}
 431 0014 4CF8040B 		str	r0, [ip], #4
 432 0018 ACF80010 		strh	r1, [ip]	@ movhi
 702:Core/Src/main.c ****   clearLCD();
 433              		.loc 1 702 3 is_stmt 1 view .LVU132
 434 001c FFF7FEFF 		bl	clearLCD
 435              	.LVL14:
 703:Core/Src/main.c ****   setCursor(0,  0);
 436              		.loc 1 703 3 view .LVU133
 437 0020 0021     		movs	r1, #0
 438 0022 0846     		mov	r0, r1
 439 0024 FFF7FEFF 		bl	setCursor
 440              	.LVL15:
 704:Core/Src/main.c ****   writeLCD(textStr);
 441              		.loc 1 704 3 view .LVU134
 442 0028 6846     		mov	r0, sp
 443 002a FFF7FEFF 		bl	writeLCD
 444              	.LVL16:
 445              	.L10:
 705:Core/Src/main.c ****   while (1)
 446              		.loc 1 705 3 discriminator 1 view .LVU135
 706:Core/Src/main.c ****   {
 707:Core/Src/main.c ****   }
 447              		.loc 1 707 3 discriminator 1 view .LVU136
 705:Core/Src/main.c ****   while (1)
 448              		.loc 1 705 9 discriminator 1 view .LVU137
 449 002e FEE7     		b	.L10
 450              	.L13:
 451              		.align	2
 452              	.L12:
ARM GAS  /tmp/cc3i1fqf.s 			page 25


 453 0030 00000000 		.word	.LC0
 454              		.cfi_endproc
 455              	.LFE301:
 457              		.section	.text.MX_ADC1_Init,"ax",%progbits
 458              		.align	1
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 463              	MX_ADC1_Init:
 464              	.LFB294:
 248:Core/Src/main.c **** 
 465              		.loc 1 248 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 24
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 00B5     		push	{lr}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 14, -4
 472 0002 87B0     		sub	sp, sp, #28
 473              		.cfi_def_cfa_offset 32
 254:Core/Src/main.c **** 
 474              		.loc 1 254 3 view .LVU139
 254:Core/Src/main.c **** 
 475              		.loc 1 254 26 is_stmt 0 view .LVU140
 476 0004 0023     		movs	r3, #0
 477 0006 0093     		str	r3, [sp]
 478 0008 0193     		str	r3, [sp, #4]
 479 000a 0293     		str	r3, [sp, #8]
 480 000c 0393     		str	r3, [sp, #12]
 481 000e 0493     		str	r3, [sp, #16]
 482 0010 0593     		str	r3, [sp, #20]
 262:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 483              		.loc 1 262 3 is_stmt 1 view .LVU141
 262:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 484              		.loc 1 262 18 is_stmt 0 view .LVU142
 485 0012 4448     		ldr	r0, .L34
 486 0014 444A     		ldr	r2, .L34+4
 487 0016 0260     		str	r2, [r0]
 263:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 488              		.loc 1 263 3 is_stmt 1 view .LVU143
 263:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 489              		.loc 1 263 29 is_stmt 0 view .LVU144
 490 0018 4360     		str	r3, [r0, #4]
 264:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 491              		.loc 1 264 3 is_stmt 1 view .LVU145
 264:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 492              		.loc 1 264 25 is_stmt 0 view .LVU146
 493 001a 8360     		str	r3, [r0, #8]
 265:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 494              		.loc 1 265 3 is_stmt 1 view .LVU147
 265:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 495              		.loc 1 265 24 is_stmt 0 view .LVU148
 496 001c C360     		str	r3, [r0, #12]
 266:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 497              		.loc 1 266 3 is_stmt 1 view .LVU149
 266:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 498              		.loc 1 266 27 is_stmt 0 view .LVU150
ARM GAS  /tmp/cc3i1fqf.s 			page 26


 499 001e 0122     		movs	r2, #1
 500 0020 0261     		str	r2, [r0, #16]
 267:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 501              		.loc 1 267 3 is_stmt 1 view .LVU151
 267:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 502              		.loc 1 267 27 is_stmt 0 view .LVU152
 503 0022 0821     		movs	r1, #8
 504 0024 4161     		str	r1, [r0, #20]
 268:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 505              		.loc 1 268 3 is_stmt 1 view .LVU153
 268:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 506              		.loc 1 268 31 is_stmt 0 view .LVU154
 507 0026 0376     		strb	r3, [r0, #24]
 269:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 508              		.loc 1 269 3 is_stmt 1 view .LVU155
 269:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 509              		.loc 1 269 33 is_stmt 0 view .LVU156
 510 0028 4276     		strb	r2, [r0, #25]
 270:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 511              		.loc 1 270 3 is_stmt 1 view .LVU157
 270:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 512              		.loc 1 270 30 is_stmt 0 view .LVU158
 513 002a C161     		str	r1, [r0, #28]
 271:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 514              		.loc 1 271 3 is_stmt 1 view .LVU159
 271:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 515              		.loc 1 271 36 is_stmt 0 view .LVU160
 516 002c 80F82030 		strb	r3, [r0, #32]
 272:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 517              		.loc 1 272 3 is_stmt 1 view .LVU161
 272:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 518              		.loc 1 272 31 is_stmt 0 view .LVU162
 519 0030 8362     		str	r3, [r0, #40]
 273:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 520              		.loc 1 273 3 is_stmt 1 view .LVU163
 273:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 521              		.loc 1 273 35 is_stmt 0 view .LVU164
 522 0032 C362     		str	r3, [r0, #44]
 274:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 523              		.loc 1 274 3 is_stmt 1 view .LVU165
 274:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 524              		.loc 1 274 36 is_stmt 0 view .LVU166
 525 0034 80F83020 		strb	r2, [r0, #48]
 275:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 526              		.loc 1 275 3 is_stmt 1 view .LVU167
 275:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 527              		.loc 1 275 22 is_stmt 0 view .LVU168
 528 0038 4FF48052 		mov	r2, #4096
 529 003c 4263     		str	r2, [r0, #52]
 276:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 530              		.loc 1 276 3 is_stmt 1 view .LVU169
 276:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 531              		.loc 1 276 31 is_stmt 0 view .LVU170
 532 003e 80F83830 		strb	r3, [r0, #56]
 277:Core/Src/main.c ****   {
 533              		.loc 1 277 3 is_stmt 1 view .LVU171
 277:Core/Src/main.c ****   {
ARM GAS  /tmp/cc3i1fqf.s 			page 27


 534              		.loc 1 277 7 is_stmt 0 view .LVU172
 535 0042 FFF7FEFF 		bl	HAL_ADC_Init
 536              	.LVL17:
 277:Core/Src/main.c ****   {
 537              		.loc 1 277 6 view .LVU173
 538 0046 0028     		cmp	r0, #0
 539 0048 5AD1     		bne	.L25
 284:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 540              		.loc 1 284 3 is_stmt 1 view .LVU174
 284:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 541              		.loc 1 284 19 is_stmt 0 view .LVU175
 542 004a 384B     		ldr	r3, .L34+8
 543 004c 0093     		str	r3, [sp]
 285:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 544              		.loc 1 285 3 is_stmt 1 view .LVU176
 285:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 545              		.loc 1 285 16 is_stmt 0 view .LVU177
 546 004e 0623     		movs	r3, #6
 547 0050 0193     		str	r3, [sp, #4]
 286:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 548              		.loc 1 286 3 is_stmt 1 view .LVU178
 286:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 549              		.loc 1 286 24 is_stmt 0 view .LVU179
 550 0052 0723     		movs	r3, #7
 551 0054 0293     		str	r3, [sp, #8]
 287:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 552              		.loc 1 287 3 is_stmt 1 view .LVU180
 287:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 553              		.loc 1 287 22 is_stmt 0 view .LVU181
 554 0056 7F23     		movs	r3, #127
 555 0058 0393     		str	r3, [sp, #12]
 288:Core/Src/main.c ****   sConfig.Offset = 0;
 556              		.loc 1 288 3 is_stmt 1 view .LVU182
 288:Core/Src/main.c ****   sConfig.Offset = 0;
 557              		.loc 1 288 24 is_stmt 0 view .LVU183
 558 005a 0423     		movs	r3, #4
 559 005c 0493     		str	r3, [sp, #16]
 289:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 560              		.loc 1 289 3 is_stmt 1 view .LVU184
 289:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 561              		.loc 1 289 18 is_stmt 0 view .LVU185
 562 005e 0023     		movs	r3, #0
 563 0060 0593     		str	r3, [sp, #20]
 290:Core/Src/main.c ****   {
 564              		.loc 1 290 3 is_stmt 1 view .LVU186
 290:Core/Src/main.c ****   {
 565              		.loc 1 290 7 is_stmt 0 view .LVU187
 566 0062 6946     		mov	r1, sp
 567 0064 2F48     		ldr	r0, .L34
 568 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 569              	.LVL18:
 290:Core/Src/main.c ****   {
 570              		.loc 1 290 6 view .LVU188
 571 006a 0028     		cmp	r0, #0
 572 006c 4AD1     		bne	.L26
 297:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 573              		.loc 1 297 3 is_stmt 1 view .LVU189
ARM GAS  /tmp/cc3i1fqf.s 			page 28


 297:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 574              		.loc 1 297 19 is_stmt 0 view .LVU190
 575 006e 304B     		ldr	r3, .L34+12
 576 0070 0093     		str	r3, [sp]
 298:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 577              		.loc 1 298 3 is_stmt 1 view .LVU191
 298:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 578              		.loc 1 298 16 is_stmt 0 view .LVU192
 579 0072 0C23     		movs	r3, #12
 580 0074 0193     		str	r3, [sp, #4]
 299:Core/Src/main.c ****   {
 581              		.loc 1 299 3 is_stmt 1 view .LVU193
 299:Core/Src/main.c ****   {
 582              		.loc 1 299 7 is_stmt 0 view .LVU194
 583 0076 6946     		mov	r1, sp
 584 0078 2A48     		ldr	r0, .L34
 585 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 586              	.LVL19:
 299:Core/Src/main.c ****   {
 587              		.loc 1 299 6 view .LVU195
 588 007e 0028     		cmp	r0, #0
 589 0080 42D1     		bne	.L27
 306:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 590              		.loc 1 306 3 is_stmt 1 view .LVU196
 306:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 591              		.loc 1 306 19 is_stmt 0 view .LVU197
 592 0082 2C4B     		ldr	r3, .L34+16
 593 0084 0093     		str	r3, [sp]
 307:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 594              		.loc 1 307 3 is_stmt 1 view .LVU198
 307:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 595              		.loc 1 307 16 is_stmt 0 view .LVU199
 596 0086 1223     		movs	r3, #18
 597 0088 0193     		str	r3, [sp, #4]
 308:Core/Src/main.c ****   {
 598              		.loc 1 308 3 is_stmt 1 view .LVU200
 308:Core/Src/main.c ****   {
 599              		.loc 1 308 7 is_stmt 0 view .LVU201
 600 008a 6946     		mov	r1, sp
 601 008c 2548     		ldr	r0, .L34
 602 008e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 603              	.LVL20:
 308:Core/Src/main.c ****   {
 604              		.loc 1 308 6 view .LVU202
 605 0092 0028     		cmp	r0, #0
 606 0094 3AD1     		bne	.L28
 315:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 607              		.loc 1 315 3 is_stmt 1 view .LVU203
 315:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 608              		.loc 1 315 19 is_stmt 0 view .LVU204
 609 0096 284B     		ldr	r3, .L34+20
 610 0098 0093     		str	r3, [sp]
 316:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 611              		.loc 1 316 3 is_stmt 1 view .LVU205
 316:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 612              		.loc 1 316 16 is_stmt 0 view .LVU206
 613 009a 1823     		movs	r3, #24
ARM GAS  /tmp/cc3i1fqf.s 			page 29


 614 009c 0193     		str	r3, [sp, #4]
 317:Core/Src/main.c ****   {
 615              		.loc 1 317 3 is_stmt 1 view .LVU207
 317:Core/Src/main.c ****   {
 616              		.loc 1 317 7 is_stmt 0 view .LVU208
 617 009e 6946     		mov	r1, sp
 618 00a0 2048     		ldr	r0, .L34
 619 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 620              	.LVL21:
 317:Core/Src/main.c ****   {
 621              		.loc 1 317 6 view .LVU209
 622 00a6 0028     		cmp	r0, #0
 623 00a8 32D1     		bne	.L29
 324:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 624              		.loc 1 324 3 is_stmt 1 view .LVU210
 324:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 625              		.loc 1 324 19 is_stmt 0 view .LVU211
 626 00aa 244B     		ldr	r3, .L34+24
 627 00ac 0093     		str	r3, [sp]
 325:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 628              		.loc 1 325 3 is_stmt 1 view .LVU212
 325:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 629              		.loc 1 325 16 is_stmt 0 view .LVU213
 630 00ae 4FF48073 		mov	r3, #256
 631 00b2 0193     		str	r3, [sp, #4]
 326:Core/Src/main.c ****   {
 632              		.loc 1 326 3 is_stmt 1 view .LVU214
 326:Core/Src/main.c ****   {
 633              		.loc 1 326 7 is_stmt 0 view .LVU215
 634 00b4 6946     		mov	r1, sp
 635 00b6 1B48     		ldr	r0, .L34
 636 00b8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 637              	.LVL22:
 326:Core/Src/main.c ****   {
 638              		.loc 1 326 6 view .LVU216
 639 00bc 50BB     		cbnz	r0, .L30
 333:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 640              		.loc 1 333 3 is_stmt 1 view .LVU217
 333:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 641              		.loc 1 333 19 is_stmt 0 view .LVU218
 642 00be 204B     		ldr	r3, .L34+28
 643 00c0 0093     		str	r3, [sp]
 334:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 644              		.loc 1 334 3 is_stmt 1 view .LVU219
 334:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 645              		.loc 1 334 16 is_stmt 0 view .LVU220
 646 00c2 4FF48373 		mov	r3, #262
 647 00c6 0193     		str	r3, [sp, #4]
 335:Core/Src/main.c ****   {
 648              		.loc 1 335 3 is_stmt 1 view .LVU221
 335:Core/Src/main.c ****   {
 649              		.loc 1 335 7 is_stmt 0 view .LVU222
 650 00c8 6946     		mov	r1, sp
 651 00ca 1648     		ldr	r0, .L34
 652 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 653              	.LVL23:
 335:Core/Src/main.c ****   {
ARM GAS  /tmp/cc3i1fqf.s 			page 30


 654              		.loc 1 335 6 view .LVU223
 655 00d0 10BB     		cbnz	r0, .L31
 342:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 656              		.loc 1 342 3 is_stmt 1 view .LVU224
 342:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 657              		.loc 1 342 19 is_stmt 0 view .LVU225
 658 00d2 1C4B     		ldr	r3, .L34+32
 659 00d4 0093     		str	r3, [sp]
 343:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 660              		.loc 1 343 3 is_stmt 1 view .LVU226
 343:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 661              		.loc 1 343 16 is_stmt 0 view .LVU227
 662 00d6 4FF48673 		mov	r3, #268
 663 00da 0193     		str	r3, [sp, #4]
 344:Core/Src/main.c ****   {
 664              		.loc 1 344 3 is_stmt 1 view .LVU228
 344:Core/Src/main.c ****   {
 665              		.loc 1 344 7 is_stmt 0 view .LVU229
 666 00dc 6946     		mov	r1, sp
 667 00de 1148     		ldr	r0, .L34
 668 00e0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 669              	.LVL24:
 344:Core/Src/main.c ****   {
 670              		.loc 1 344 6 view .LVU230
 671 00e4 D0B9     		cbnz	r0, .L32
 351:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 672              		.loc 1 351 3 is_stmt 1 view .LVU231
 351:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 673              		.loc 1 351 19 is_stmt 0 view .LVU232
 674 00e6 184B     		ldr	r3, .L34+36
 675 00e8 0093     		str	r3, [sp]
 352:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 676              		.loc 1 352 3 is_stmt 1 view .LVU233
 352:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 677              		.loc 1 352 16 is_stmt 0 view .LVU234
 678 00ea 4FF48973 		mov	r3, #274
 679 00ee 0193     		str	r3, [sp, #4]
 353:Core/Src/main.c ****   {
 680              		.loc 1 353 3 is_stmt 1 view .LVU235
 353:Core/Src/main.c ****   {
 681              		.loc 1 353 7 is_stmt 0 view .LVU236
 682 00f0 6946     		mov	r1, sp
 683 00f2 0C48     		ldr	r0, .L34
 684 00f4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 685              	.LVL25:
 353:Core/Src/main.c ****   {
 686              		.loc 1 353 6 view .LVU237
 687 00f8 90B9     		cbnz	r0, .L33
 361:Core/Src/main.c **** 
 688              		.loc 1 361 1 view .LVU238
 689 00fa 07B0     		add	sp, sp, #28
 690              		.cfi_remember_state
 691              		.cfi_def_cfa_offset 4
 692              		@ sp needed
 693 00fc 5DF804FB 		ldr	pc, [sp], #4
 694              	.L25:
 695              		.cfi_restore_state
ARM GAS  /tmp/cc3i1fqf.s 			page 31


 279:Core/Src/main.c ****   }
 696              		.loc 1 279 5 is_stmt 1 view .LVU239
 697 0100 FFF7FEFF 		bl	Error_Handler
 698              	.LVL26:
 699              	.L26:
 292:Core/Src/main.c ****   }
 700              		.loc 1 292 5 view .LVU240
 701 0104 FFF7FEFF 		bl	Error_Handler
 702              	.LVL27:
 703              	.L27:
 301:Core/Src/main.c ****   }
 704              		.loc 1 301 5 view .LVU241
 705 0108 FFF7FEFF 		bl	Error_Handler
 706              	.LVL28:
 707              	.L28:
 310:Core/Src/main.c ****   }
 708              		.loc 1 310 5 view .LVU242
 709 010c FFF7FEFF 		bl	Error_Handler
 710              	.LVL29:
 711              	.L29:
 319:Core/Src/main.c ****   }
 712              		.loc 1 319 5 view .LVU243
 713 0110 FFF7FEFF 		bl	Error_Handler
 714              	.LVL30:
 715              	.L30:
 328:Core/Src/main.c ****   }
 716              		.loc 1 328 5 view .LVU244
 717 0114 FFF7FEFF 		bl	Error_Handler
 718              	.LVL31:
 719              	.L31:
 337:Core/Src/main.c ****   }
 720              		.loc 1 337 5 view .LVU245
 721 0118 FFF7FEFF 		bl	Error_Handler
 722              	.LVL32:
 723              	.L32:
 346:Core/Src/main.c ****   }
 724              		.loc 1 346 5 view .LVU246
 725 011c FFF7FEFF 		bl	Error_Handler
 726              	.LVL33:
 727              	.L33:
 355:Core/Src/main.c ****   }
 728              		.loc 1 355 5 view .LVU247
 729 0120 FFF7FEFF 		bl	Error_Handler
 730              	.LVL34:
 731              	.L35:
 732              		.align	2
 733              	.L34:
 734 0124 00000000 		.word	.LANCHOR0
 735 0128 00000450 		.word	1342439424
 736 012c 02003004 		.word	70254594
 737 0130 04006008 		.word	140509188
 738 0134 0800900C 		.word	210763784
 739 0138 1000C010 		.word	281018384
 740 013c 0002B025 		.word	632291840
 741 0140 0004002A 		.word	704644096
 742 0144 00106032 		.word	845156352
 743 0148 00209036 		.word	915415040
ARM GAS  /tmp/cc3i1fqf.s 			page 32


 744              		.cfi_endproc
 745              	.LFE294:
 747              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 748              		.align	1
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 753              	MX_USART1_UART_Init:
 754              	.LFB296:
 469:Core/Src/main.c **** 
 755              		.loc 1 469 1 view -0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759 0000 08B5     		push	{r3, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 3, -8
 762              		.cfi_offset 14, -4
 478:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 763              		.loc 1 478 3 view .LVU249
 478:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 764              		.loc 1 478 19 is_stmt 0 view .LVU250
 765 0002 0B48     		ldr	r0, .L40
 766 0004 0B4B     		ldr	r3, .L40+4
 767 0006 0360     		str	r3, [r0]
 479:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 768              		.loc 1 479 3 is_stmt 1 view .LVU251
 479:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 769              		.loc 1 479 24 is_stmt 0 view .LVU252
 770 0008 4FF4E133 		mov	r3, #115200
 771 000c 4360     		str	r3, [r0, #4]
 480:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 772              		.loc 1 480 3 is_stmt 1 view .LVU253
 480:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 773              		.loc 1 480 26 is_stmt 0 view .LVU254
 774 000e 0023     		movs	r3, #0
 775 0010 8360     		str	r3, [r0, #8]
 481:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 776              		.loc 1 481 3 is_stmt 1 view .LVU255
 481:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 777              		.loc 1 481 24 is_stmt 0 view .LVU256
 778 0012 C360     		str	r3, [r0, #12]
 482:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 779              		.loc 1 482 3 is_stmt 1 view .LVU257
 482:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 780              		.loc 1 482 22 is_stmt 0 view .LVU258
 781 0014 0361     		str	r3, [r0, #16]
 483:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 782              		.loc 1 483 3 is_stmt 1 view .LVU259
 483:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 783              		.loc 1 483 20 is_stmt 0 view .LVU260
 784 0016 0C22     		movs	r2, #12
 785 0018 4261     		str	r2, [r0, #20]
 484:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 786              		.loc 1 484 3 is_stmt 1 view .LVU261
 484:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 787              		.loc 1 484 25 is_stmt 0 view .LVU262
ARM GAS  /tmp/cc3i1fqf.s 			page 33


 788 001a 8361     		str	r3, [r0, #24]
 485:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 789              		.loc 1 485 3 is_stmt 1 view .LVU263
 485:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 790              		.loc 1 485 28 is_stmt 0 view .LVU264
 791 001c C361     		str	r3, [r0, #28]
 486:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 792              		.loc 1 486 3 is_stmt 1 view .LVU265
 486:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 793              		.loc 1 486 30 is_stmt 0 view .LVU266
 794 001e 0362     		str	r3, [r0, #32]
 487:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 795              		.loc 1 487 3 is_stmt 1 view .LVU267
 487:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 796              		.loc 1 487 38 is_stmt 0 view .LVU268
 797 0020 4362     		str	r3, [r0, #36]
 488:Core/Src/main.c ****   {
 798              		.loc 1 488 3 is_stmt 1 view .LVU269
 488:Core/Src/main.c ****   {
 799              		.loc 1 488 7 is_stmt 0 view .LVU270
 800 0022 FFF7FEFF 		bl	HAL_UART_Init
 801              	.LVL35:
 488:Core/Src/main.c ****   {
 802              		.loc 1 488 6 view .LVU271
 803 0026 00B9     		cbnz	r0, .L39
 496:Core/Src/main.c **** 
 804              		.loc 1 496 1 view .LVU272
 805 0028 08BD     		pop	{r3, pc}
 806              	.L39:
 490:Core/Src/main.c ****   }
 807              		.loc 1 490 5 is_stmt 1 view .LVU273
 808 002a FFF7FEFF 		bl	Error_Handler
 809              	.LVL36:
 810              	.L41:
 811 002e 00BF     		.align	2
 812              	.L40:
 813 0030 00000000 		.word	.LANCHOR1
 814 0034 00380140 		.word	1073821696
 815              		.cfi_endproc
 816              	.LFE296:
 818              		.section	.text.MX_TIM1_Init,"ax",%progbits
 819              		.align	1
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	MX_TIM1_Init:
 825              	.LFB295:
 369:Core/Src/main.c **** 
 826              		.loc 1 369 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 112
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830 0000 10B5     		push	{r4, lr}
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 4, -8
 833              		.cfi_offset 14, -4
 834 0002 9CB0     		sub	sp, sp, #112
ARM GAS  /tmp/cc3i1fqf.s 			page 34


 835              		.cfi_def_cfa_offset 120
 375:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 836              		.loc 1 375 3 view .LVU275
 375:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 837              		.loc 1 375 26 is_stmt 0 view .LVU276
 838 0004 0024     		movs	r4, #0
 839 0006 1894     		str	r4, [sp, #96]
 840 0008 1994     		str	r4, [sp, #100]
 841 000a 1A94     		str	r4, [sp, #104]
 842 000c 1B94     		str	r4, [sp, #108]
 376:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 843              		.loc 1 376 3 is_stmt 1 view .LVU277
 376:Core/Src/main.c ****   TIMEx_BreakInputConfigTypeDef sBreakInputConfig = {0};
 844              		.loc 1 376 27 is_stmt 0 view .LVU278
 845 000e 1594     		str	r4, [sp, #84]
 846 0010 1694     		str	r4, [sp, #88]
 847 0012 1794     		str	r4, [sp, #92]
 377:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 848              		.loc 1 377 3 is_stmt 1 view .LVU279
 377:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 849              		.loc 1 377 33 is_stmt 0 view .LVU280
 850 0014 1294     		str	r4, [sp, #72]
 851 0016 1394     		str	r4, [sp, #76]
 852 0018 1494     		str	r4, [sp, #80]
 378:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 853              		.loc 1 378 3 is_stmt 1 view .LVU281
 378:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 854              		.loc 1 378 22 is_stmt 0 view .LVU282
 855 001a 0B94     		str	r4, [sp, #44]
 856 001c 0C94     		str	r4, [sp, #48]
 857 001e 0D94     		str	r4, [sp, #52]
 858 0020 0E94     		str	r4, [sp, #56]
 859 0022 0F94     		str	r4, [sp, #60]
 860 0024 1094     		str	r4, [sp, #64]
 861 0026 1194     		str	r4, [sp, #68]
 379:Core/Src/main.c **** 
 862              		.loc 1 379 3 is_stmt 1 view .LVU283
 379:Core/Src/main.c **** 
 863              		.loc 1 379 34 is_stmt 0 view .LVU284
 864 0028 2C22     		movs	r2, #44
 865 002a 2146     		mov	r1, r4
 866 002c 6846     		mov	r0, sp
 867 002e FFF7FEFF 		bl	memset
 868              	.LVL37:
 384:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 869              		.loc 1 384 3 is_stmt 1 view .LVU285
 384:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 870              		.loc 1 384 18 is_stmt 0 view .LVU286
 871 0032 4248     		ldr	r0, .L64
 872 0034 424B     		ldr	r3, .L64+4
 873 0036 0360     		str	r3, [r0]
 385:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 874              		.loc 1 385 3 is_stmt 1 view .LVU287
 385:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 875              		.loc 1 385 24 is_stmt 0 view .LVU288
 876 0038 4460     		str	r4, [r0, #4]
 386:Core/Src/main.c ****   htim1.Init.Period = 65535;
ARM GAS  /tmp/cc3i1fqf.s 			page 35


 877              		.loc 1 386 3 is_stmt 1 view .LVU289
 386:Core/Src/main.c ****   htim1.Init.Period = 65535;
 878              		.loc 1 386 26 is_stmt 0 view .LVU290
 879 003a 8460     		str	r4, [r0, #8]
 387:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 880              		.loc 1 387 3 is_stmt 1 view .LVU291
 387:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 881              		.loc 1 387 21 is_stmt 0 view .LVU292
 882 003c 4FF6FF73 		movw	r3, #65535
 883 0040 C360     		str	r3, [r0, #12]
 388:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 884              		.loc 1 388 3 is_stmt 1 view .LVU293
 388:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 885              		.loc 1 388 28 is_stmt 0 view .LVU294
 886 0042 0461     		str	r4, [r0, #16]
 389:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 887              		.loc 1 389 3 is_stmt 1 view .LVU295
 389:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 888              		.loc 1 389 32 is_stmt 0 view .LVU296
 889 0044 4461     		str	r4, [r0, #20]
 390:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 890              		.loc 1 390 3 is_stmt 1 view .LVU297
 390:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 891              		.loc 1 390 32 is_stmt 0 view .LVU298
 892 0046 8461     		str	r4, [r0, #24]
 391:Core/Src/main.c ****   {
 893              		.loc 1 391 3 is_stmt 1 view .LVU299
 391:Core/Src/main.c ****   {
 894              		.loc 1 391 7 is_stmt 0 view .LVU300
 895 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 896              	.LVL38:
 391:Core/Src/main.c ****   {
 897              		.loc 1 391 6 view .LVU301
 898 004c 0028     		cmp	r0, #0
 899 004e 60D1     		bne	.L54
 395:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 900              		.loc 1 395 3 is_stmt 1 view .LVU302
 395:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 901              		.loc 1 395 34 is_stmt 0 view .LVU303
 902 0050 4FF48053 		mov	r3, #4096
 903 0054 1893     		str	r3, [sp, #96]
 396:Core/Src/main.c ****   {
 904              		.loc 1 396 3 is_stmt 1 view .LVU304
 396:Core/Src/main.c ****   {
 905              		.loc 1 396 7 is_stmt 0 view .LVU305
 906 0056 18A9     		add	r1, sp, #96
 907 0058 3848     		ldr	r0, .L64
 908 005a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 909              	.LVL39:
 396:Core/Src/main.c ****   {
 910              		.loc 1 396 6 view .LVU306
 911 005e 0028     		cmp	r0, #0
 912 0060 59D1     		bne	.L55
 400:Core/Src/main.c ****   {
 913              		.loc 1 400 3 is_stmt 1 view .LVU307
 400:Core/Src/main.c ****   {
 914              		.loc 1 400 7 is_stmt 0 view .LVU308
ARM GAS  /tmp/cc3i1fqf.s 			page 36


 915 0062 3648     		ldr	r0, .L64
 916 0064 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 917              	.LVL40:
 400:Core/Src/main.c ****   {
 918              		.loc 1 400 6 view .LVU309
 919 0068 0028     		cmp	r0, #0
 920 006a 56D1     		bne	.L56
 404:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 921              		.loc 1 404 3 is_stmt 1 view .LVU310
 404:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 922              		.loc 1 404 37 is_stmt 0 view .LVU311
 923 006c 0023     		movs	r3, #0
 924 006e 1593     		str	r3, [sp, #84]
 405:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 925              		.loc 1 405 3 is_stmt 1 view .LVU312
 405:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 926              		.loc 1 405 38 is_stmt 0 view .LVU313
 927 0070 1693     		str	r3, [sp, #88]
 406:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 928              		.loc 1 406 3 is_stmt 1 view .LVU314
 406:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 929              		.loc 1 406 33 is_stmt 0 view .LVU315
 930 0072 1793     		str	r3, [sp, #92]
 407:Core/Src/main.c ****   {
 931              		.loc 1 407 3 is_stmt 1 view .LVU316
 407:Core/Src/main.c ****   {
 932              		.loc 1 407 7 is_stmt 0 view .LVU317
 933 0074 15A9     		add	r1, sp, #84
 934 0076 3148     		ldr	r0, .L64
 935 0078 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 936              	.LVL41:
 407:Core/Src/main.c ****   {
 937              		.loc 1 407 6 view .LVU318
 938 007c 0028     		cmp	r0, #0
 939 007e 4ED1     		bne	.L57
 411:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 940              		.loc 1 411 3 is_stmt 1 view .LVU319
 411:Core/Src/main.c ****   sBreakInputConfig.Enable = TIM_BREAKINPUTSOURCE_ENABLE;
 941              		.loc 1 411 28 is_stmt 0 view .LVU320
 942 0080 0121     		movs	r1, #1
 943 0082 1291     		str	r1, [sp, #72]
 412:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 944              		.loc 1 412 3 is_stmt 1 view .LVU321
 412:Core/Src/main.c ****   sBreakInputConfig.Polarity = TIM_BREAKINPUTSOURCE_POLARITY_HIGH;
 945              		.loc 1 412 28 is_stmt 0 view .LVU322
 946 0084 1391     		str	r1, [sp, #76]
 413:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 947              		.loc 1 413 3 is_stmt 1 view .LVU323
 413:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakInput(&htim1, TIM_BREAKINPUT_BRK, &sBreakInputConfig) != HAL_OK)
 948              		.loc 1 413 30 is_stmt 0 view .LVU324
 949 0086 0023     		movs	r3, #0
 950 0088 1493     		str	r3, [sp, #80]
 414:Core/Src/main.c ****   {
 951              		.loc 1 414 3 is_stmt 1 view .LVU325
 414:Core/Src/main.c ****   {
 952              		.loc 1 414 7 is_stmt 0 view .LVU326
 953 008a 12AA     		add	r2, sp, #72
ARM GAS  /tmp/cc3i1fqf.s 			page 37


 954 008c 2B48     		ldr	r0, .L64
 955 008e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakInput
 956              	.LVL42:
 414:Core/Src/main.c ****   {
 957              		.loc 1 414 6 view .LVU327
 958 0092 0028     		cmp	r0, #0
 959 0094 45D1     		bne	.L58
 418:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 960              		.loc 1 418 3 is_stmt 1 view .LVU328
 418:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 961              		.loc 1 418 20 is_stmt 0 view .LVU329
 962 0096 6023     		movs	r3, #96
 963 0098 0B93     		str	r3, [sp, #44]
 419:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 964              		.loc 1 419 3 is_stmt 1 view .LVU330
 419:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 965              		.loc 1 419 19 is_stmt 0 view .LVU331
 966 009a 0022     		movs	r2, #0
 967 009c 0C92     		str	r2, [sp, #48]
 420:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 968              		.loc 1 420 3 is_stmt 1 view .LVU332
 420:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 969              		.loc 1 420 24 is_stmt 0 view .LVU333
 970 009e 0D92     		str	r2, [sp, #52]
 421:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 971              		.loc 1 421 3 is_stmt 1 view .LVU334
 421:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 972              		.loc 1 421 25 is_stmt 0 view .LVU335
 973 00a0 0E92     		str	r2, [sp, #56]
 422:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 974              		.loc 1 422 3 is_stmt 1 view .LVU336
 422:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 975              		.loc 1 422 24 is_stmt 0 view .LVU337
 976 00a2 0F92     		str	r2, [sp, #60]
 423:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 977              		.loc 1 423 3 is_stmt 1 view .LVU338
 423:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 978              		.loc 1 423 25 is_stmt 0 view .LVU339
 979 00a4 1092     		str	r2, [sp, #64]
 424:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 980              		.loc 1 424 3 is_stmt 1 view .LVU340
 424:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 981              		.loc 1 424 26 is_stmt 0 view .LVU341
 982 00a6 1192     		str	r2, [sp, #68]
 425:Core/Src/main.c ****   {
 983              		.loc 1 425 3 is_stmt 1 view .LVU342
 425:Core/Src/main.c ****   {
 984              		.loc 1 425 7 is_stmt 0 view .LVU343
 985 00a8 0BA9     		add	r1, sp, #44
 986 00aa 2448     		ldr	r0, .L64
 987 00ac FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 988              	.LVL43:
 425:Core/Src/main.c ****   {
 989              		.loc 1 425 6 view .LVU344
 990 00b0 0028     		cmp	r0, #0
 991 00b2 38D1     		bne	.L59
 429:Core/Src/main.c ****   {
ARM GAS  /tmp/cc3i1fqf.s 			page 38


 992              		.loc 1 429 3 is_stmt 1 view .LVU345
 429:Core/Src/main.c ****   {
 993              		.loc 1 429 7 is_stmt 0 view .LVU346
 994 00b4 0422     		movs	r2, #4
 995 00b6 0BA9     		add	r1, sp, #44
 996 00b8 2048     		ldr	r0, .L64
 997 00ba FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 998              	.LVL44:
 429:Core/Src/main.c ****   {
 999              		.loc 1 429 6 view .LVU347
 1000 00be 0028     		cmp	r0, #0
 1001 00c0 33D1     		bne	.L60
 433:Core/Src/main.c ****   {
 1002              		.loc 1 433 3 is_stmt 1 view .LVU348
 433:Core/Src/main.c ****   {
 1003              		.loc 1 433 7 is_stmt 0 view .LVU349
 1004 00c2 0822     		movs	r2, #8
 1005 00c4 0BA9     		add	r1, sp, #44
 1006 00c6 1D48     		ldr	r0, .L64
 1007 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1008              	.LVL45:
 433:Core/Src/main.c ****   {
 1009              		.loc 1 433 6 view .LVU350
 1010 00cc 78BB     		cbnz	r0, .L61
 437:Core/Src/main.c ****   {
 1011              		.loc 1 437 3 is_stmt 1 view .LVU351
 437:Core/Src/main.c ****   {
 1012              		.loc 1 437 7 is_stmt 0 view .LVU352
 1013 00ce 0C22     		movs	r2, #12
 1014 00d0 0BA9     		add	r1, sp, #44
 1015 00d2 1A48     		ldr	r0, .L64
 1016 00d4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1017              	.LVL46:
 437:Core/Src/main.c ****   {
 1018              		.loc 1 437 6 view .LVU353
 1019 00d8 58BB     		cbnz	r0, .L62
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1020              		.loc 1 441 3 is_stmt 1 view .LVU354
 441:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1021              		.loc 1 441 40 is_stmt 0 view .LVU355
 1022 00da 0023     		movs	r3, #0
 1023 00dc 0093     		str	r3, [sp]
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1024              		.loc 1 442 3 is_stmt 1 view .LVU356
 442:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1025              		.loc 1 442 41 is_stmt 0 view .LVU357
 1026 00de 0193     		str	r3, [sp, #4]
 443:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1027              		.loc 1 443 3 is_stmt 1 view .LVU358
 443:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1028              		.loc 1 443 34 is_stmt 0 view .LVU359
 1029 00e0 0293     		str	r3, [sp, #8]
 444:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 1030              		.loc 1 444 3 is_stmt 1 view .LVU360
 444:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_ENABLE;
 1031              		.loc 1 444 33 is_stmt 0 view .LVU361
 1032 00e2 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc3i1fqf.s 			page 39


 445:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1033              		.loc 1 445 3 is_stmt 1 view .LVU362
 445:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1034              		.loc 1 445 35 is_stmt 0 view .LVU363
 1035 00e4 4FF48052 		mov	r2, #4096
 1036 00e8 0492     		str	r2, [sp, #16]
 446:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1037              		.loc 1 446 3 is_stmt 1 view .LVU364
 446:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1038              		.loc 1 446 38 is_stmt 0 view .LVU365
 1039 00ea 4FF40052 		mov	r2, #8192
 1040 00ee 0592     		str	r2, [sp, #20]
 447:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1041              		.loc 1 447 3 is_stmt 1 view .LVU366
 447:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1042              		.loc 1 447 36 is_stmt 0 view .LVU367
 1043 00f0 0693     		str	r3, [sp, #24]
 448:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1044              		.loc 1 448 3 is_stmt 1 view .LVU368
 448:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1045              		.loc 1 448 36 is_stmt 0 view .LVU369
 1046 00f2 0793     		str	r3, [sp, #28]
 449:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1047              		.loc 1 449 3 is_stmt 1 view .LVU370
 449:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1048              		.loc 1 449 39 is_stmt 0 view .LVU371
 1049 00f4 4FF00072 		mov	r2, #33554432
 1050 00f8 0892     		str	r2, [sp, #32]
 450:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1051              		.loc 1 450 3 is_stmt 1 view .LVU372
 450:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1052              		.loc 1 450 37 is_stmt 0 view .LVU373
 1053 00fa 0993     		str	r3, [sp, #36]
 451:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1054              		.loc 1 451 3 is_stmt 1 view .LVU374
 451:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1055              		.loc 1 451 40 is_stmt 0 view .LVU375
 1056 00fc 0A93     		str	r3, [sp, #40]
 452:Core/Src/main.c ****   {
 1057              		.loc 1 452 3 is_stmt 1 view .LVU376
 452:Core/Src/main.c ****   {
 1058              		.loc 1 452 7 is_stmt 0 view .LVU377
 1059 00fe 6946     		mov	r1, sp
 1060 0100 0E48     		ldr	r0, .L64
 1061 0102 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1062              	.LVL47:
 452:Core/Src/main.c ****   {
 1063              		.loc 1 452 6 view .LVU378
 1064 0106 B0B9     		cbnz	r0, .L63
 459:Core/Src/main.c **** 
 1065              		.loc 1 459 3 is_stmt 1 view .LVU379
 1066 0108 0C48     		ldr	r0, .L64
 1067 010a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1068              	.LVL48:
 461:Core/Src/main.c **** 
 1069              		.loc 1 461 1 is_stmt 0 view .LVU380
 1070 010e 1CB0     		add	sp, sp, #112
ARM GAS  /tmp/cc3i1fqf.s 			page 40


 1071              		.cfi_remember_state
 1072              		.cfi_def_cfa_offset 8
 1073              		@ sp needed
 1074 0110 10BD     		pop	{r4, pc}
 1075              	.L54:
 1076              		.cfi_restore_state
 393:Core/Src/main.c ****   }
 1077              		.loc 1 393 5 is_stmt 1 view .LVU381
 1078 0112 FFF7FEFF 		bl	Error_Handler
 1079              	.LVL49:
 1080              	.L55:
 398:Core/Src/main.c ****   }
 1081              		.loc 1 398 5 view .LVU382
 1082 0116 FFF7FEFF 		bl	Error_Handler
 1083              	.LVL50:
 1084              	.L56:
 402:Core/Src/main.c ****   }
 1085              		.loc 1 402 5 view .LVU383
 1086 011a FFF7FEFF 		bl	Error_Handler
 1087              	.LVL51:
 1088              	.L57:
 409:Core/Src/main.c ****   }
 1089              		.loc 1 409 5 view .LVU384
 1090 011e FFF7FEFF 		bl	Error_Handler
 1091              	.LVL52:
 1092              	.L58:
 416:Core/Src/main.c ****   }
 1093              		.loc 1 416 5 view .LVU385
 1094 0122 FFF7FEFF 		bl	Error_Handler
 1095              	.LVL53:
 1096              	.L59:
 427:Core/Src/main.c ****   }
 1097              		.loc 1 427 5 view .LVU386
 1098 0126 FFF7FEFF 		bl	Error_Handler
 1099              	.LVL54:
 1100              	.L60:
 431:Core/Src/main.c ****   }
 1101              		.loc 1 431 5 view .LVU387
 1102 012a FFF7FEFF 		bl	Error_Handler
 1103              	.LVL55:
 1104              	.L61:
 435:Core/Src/main.c ****   }
 1105              		.loc 1 435 5 view .LVU388
 1106 012e FFF7FEFF 		bl	Error_Handler
 1107              	.LVL56:
 1108              	.L62:
 439:Core/Src/main.c ****   }
 1109              		.loc 1 439 5 view .LVU389
 1110 0132 FFF7FEFF 		bl	Error_Handler
 1111              	.LVL57:
 1112              	.L63:
 454:Core/Src/main.c ****   }
 1113              		.loc 1 454 5 view .LVU390
 1114 0136 FFF7FEFF 		bl	Error_Handler
 1115              	.LVL58:
 1116              	.L65:
 1117 013a 00BF     		.align	2
ARM GAS  /tmp/cc3i1fqf.s 			page 41


 1118              	.L64:
 1119 013c 00000000 		.word	.LANCHOR2
 1120 0140 002C0140 		.word	1073818624
 1121              		.cfi_endproc
 1122              	.LFE295:
 1124              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1125              		.align	1
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1130              	MX_USART2_UART_Init:
 1131              	.LFB297:
 504:Core/Src/main.c **** 
 1132              		.loc 1 504 1 view -0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 0
 1135              		@ frame_needed = 0, uses_anonymous_args = 0
 1136 0000 08B5     		push	{r3, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 3, -8
 1139              		.cfi_offset 14, -4
 513:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1140              		.loc 1 513 3 view .LVU392
 513:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1141              		.loc 1 513 19 is_stmt 0 view .LVU393
 1142 0002 0B48     		ldr	r0, .L70
 1143 0004 0B4B     		ldr	r3, .L70+4
 1144 0006 0360     		str	r3, [r0]
 514:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1145              		.loc 1 514 3 is_stmt 1 view .LVU394
 514:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1146              		.loc 1 514 24 is_stmt 0 view .LVU395
 1147 0008 4FF4E133 		mov	r3, #115200
 1148 000c 4360     		str	r3, [r0, #4]
 515:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1149              		.loc 1 515 3 is_stmt 1 view .LVU396
 515:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1150              		.loc 1 515 26 is_stmt 0 view .LVU397
 1151 000e 0023     		movs	r3, #0
 1152 0010 8360     		str	r3, [r0, #8]
 516:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1153              		.loc 1 516 3 is_stmt 1 view .LVU398
 516:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1154              		.loc 1 516 24 is_stmt 0 view .LVU399
 1155 0012 C360     		str	r3, [r0, #12]
 517:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1156              		.loc 1 517 3 is_stmt 1 view .LVU400
 517:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1157              		.loc 1 517 22 is_stmt 0 view .LVU401
 1158 0014 0361     		str	r3, [r0, #16]
 518:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1159              		.loc 1 518 3 is_stmt 1 view .LVU402
 518:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1160              		.loc 1 518 20 is_stmt 0 view .LVU403
 1161 0016 0C22     		movs	r2, #12
 1162 0018 4261     		str	r2, [r0, #20]
 519:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/cc3i1fqf.s 			page 42


 1163              		.loc 1 519 3 is_stmt 1 view .LVU404
 519:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1164              		.loc 1 519 25 is_stmt 0 view .LVU405
 1165 001a 8361     		str	r3, [r0, #24]
 520:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1166              		.loc 1 520 3 is_stmt 1 view .LVU406
 520:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1167              		.loc 1 520 28 is_stmt 0 view .LVU407
 1168 001c C361     		str	r3, [r0, #28]
 521:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1169              		.loc 1 521 3 is_stmt 1 view .LVU408
 521:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1170              		.loc 1 521 30 is_stmt 0 view .LVU409
 1171 001e 0362     		str	r3, [r0, #32]
 522:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1172              		.loc 1 522 3 is_stmt 1 view .LVU410
 522:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1173              		.loc 1 522 38 is_stmt 0 view .LVU411
 1174 0020 4362     		str	r3, [r0, #36]
 523:Core/Src/main.c ****   {
 1175              		.loc 1 523 3 is_stmt 1 view .LVU412
 523:Core/Src/main.c ****   {
 1176              		.loc 1 523 7 is_stmt 0 view .LVU413
 1177 0022 FFF7FEFF 		bl	HAL_UART_Init
 1178              	.LVL59:
 523:Core/Src/main.c ****   {
 1179              		.loc 1 523 6 view .LVU414
 1180 0026 00B9     		cbnz	r0, .L69
 531:Core/Src/main.c **** 
 1181              		.loc 1 531 1 view .LVU415
 1182 0028 08BD     		pop	{r3, pc}
 1183              	.L69:
 525:Core/Src/main.c ****   }
 1184              		.loc 1 525 5 is_stmt 1 view .LVU416
 1185 002a FFF7FEFF 		bl	Error_Handler
 1186              	.LVL60:
 1187              	.L71:
 1188 002e 00BF     		.align	2
 1189              	.L70:
 1190 0030 00000000 		.word	.LANCHOR3
 1191 0034 00440040 		.word	1073759232
 1192              		.cfi_endproc
 1193              	.LFE297:
 1195              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1196              		.align	1
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1201              	MX_USART3_UART_Init:
 1202              	.LFB298:
 539:Core/Src/main.c **** 
 1203              		.loc 1 539 1 view -0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207 0000 08B5     		push	{r3, lr}
 1208              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3i1fqf.s 			page 43


 1209              		.cfi_offset 3, -8
 1210              		.cfi_offset 14, -4
 548:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1211              		.loc 1 548 3 view .LVU418
 548:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1212              		.loc 1 548 19 is_stmt 0 view .LVU419
 1213 0002 0B48     		ldr	r0, .L76
 1214 0004 0B4B     		ldr	r3, .L76+4
 1215 0006 0360     		str	r3, [r0]
 549:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1216              		.loc 1 549 3 is_stmt 1 view .LVU420
 549:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1217              		.loc 1 549 24 is_stmt 0 view .LVU421
 1218 0008 4FF4E133 		mov	r3, #115200
 1219 000c 4360     		str	r3, [r0, #4]
 550:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1220              		.loc 1 550 3 is_stmt 1 view .LVU422
 550:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1221              		.loc 1 550 26 is_stmt 0 view .LVU423
 1222 000e 0023     		movs	r3, #0
 1223 0010 8360     		str	r3, [r0, #8]
 551:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1224              		.loc 1 551 3 is_stmt 1 view .LVU424
 551:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1225              		.loc 1 551 24 is_stmt 0 view .LVU425
 1226 0012 C360     		str	r3, [r0, #12]
 552:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1227              		.loc 1 552 3 is_stmt 1 view .LVU426
 552:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1228              		.loc 1 552 22 is_stmt 0 view .LVU427
 1229 0014 0361     		str	r3, [r0, #16]
 553:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1230              		.loc 1 553 3 is_stmt 1 view .LVU428
 553:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1231              		.loc 1 553 20 is_stmt 0 view .LVU429
 1232 0016 0C22     		movs	r2, #12
 1233 0018 4261     		str	r2, [r0, #20]
 554:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1234              		.loc 1 554 3 is_stmt 1 view .LVU430
 554:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1235              		.loc 1 554 25 is_stmt 0 view .LVU431
 1236 001a 8361     		str	r3, [r0, #24]
 555:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1237              		.loc 1 555 3 is_stmt 1 view .LVU432
 555:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1238              		.loc 1 555 28 is_stmt 0 view .LVU433
 1239 001c C361     		str	r3, [r0, #28]
 556:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1240              		.loc 1 556 3 is_stmt 1 view .LVU434
 556:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1241              		.loc 1 556 30 is_stmt 0 view .LVU435
 1242 001e 0362     		str	r3, [r0, #32]
 557:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1243              		.loc 1 557 3 is_stmt 1 view .LVU436
 557:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1244              		.loc 1 557 38 is_stmt 0 view .LVU437
 1245 0020 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/cc3i1fqf.s 			page 44


 558:Core/Src/main.c ****   {
 1246              		.loc 1 558 3 is_stmt 1 view .LVU438
 558:Core/Src/main.c ****   {
 1247              		.loc 1 558 7 is_stmt 0 view .LVU439
 1248 0022 FFF7FEFF 		bl	HAL_UART_Init
 1249              	.LVL61:
 558:Core/Src/main.c ****   {
 1250              		.loc 1 558 6 view .LVU440
 1251 0026 00B9     		cbnz	r0, .L75
 566:Core/Src/main.c **** 
 1252              		.loc 1 566 1 view .LVU441
 1253 0028 08BD     		pop	{r3, pc}
 1254              	.L75:
 560:Core/Src/main.c ****   }
 1255              		.loc 1 560 5 is_stmt 1 view .LVU442
 1256 002a FFF7FEFF 		bl	Error_Handler
 1257              	.LVL62:
 1258              	.L77:
 1259 002e 00BF     		.align	2
 1260              	.L76:
 1261 0030 00000000 		.word	.LANCHOR4
 1262 0034 00480040 		.word	1073760256
 1263              		.cfi_endproc
 1264              	.LFE298:
 1266              		.section	.text.SystemClock_Config,"ax",%progbits
 1267              		.align	1
 1268              		.global	SystemClock_Config
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1273              	SystemClock_Config:
 1274              	.LFB292:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1275              		.loc 1 177 1 view -0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 88
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 00B5     		push	{lr}
 1280              		.cfi_def_cfa_offset 4
 1281              		.cfi_offset 14, -4
 1282 0002 97B0     		sub	sp, sp, #92
 1283              		.cfi_def_cfa_offset 96
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1284              		.loc 1 178 3 view .LVU444
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1285              		.loc 1 178 22 is_stmt 0 view .LVU445
 1286 0004 4422     		movs	r2, #68
 1287 0006 0021     		movs	r1, #0
 1288 0008 05A8     		add	r0, sp, #20
 1289 000a FFF7FEFF 		bl	memset
 1290              	.LVL63:
 179:Core/Src/main.c **** 
 1291              		.loc 1 179 3 is_stmt 1 view .LVU446
 179:Core/Src/main.c **** 
 1292              		.loc 1 179 22 is_stmt 0 view .LVU447
 1293 000e 0023     		movs	r3, #0
 1294 0010 0093     		str	r3, [sp]
ARM GAS  /tmp/cc3i1fqf.s 			page 45


 1295 0012 0193     		str	r3, [sp, #4]
 1296 0014 0293     		str	r3, [sp, #8]
 1297 0016 0393     		str	r3, [sp, #12]
 1298 0018 0493     		str	r3, [sp, #16]
 183:Core/Src/main.c ****   {
 1299              		.loc 1 183 3 is_stmt 1 view .LVU448
 183:Core/Src/main.c ****   {
 1300              		.loc 1 183 7 is_stmt 0 view .LVU449
 1301 001a 4FF40070 		mov	r0, #512
 1302 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1303              	.LVL64:
 183:Core/Src/main.c ****   {
 1304              		.loc 1 183 6 view .LVU450
 1305 0022 D0B9     		cbnz	r0, .L83
 191:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1306              		.loc 1 191 3 is_stmt 1 view .LVU451
 191:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1307              		.loc 1 191 36 is_stmt 0 view .LVU452
 1308 0024 1023     		movs	r3, #16
 1309 0026 0593     		str	r3, [sp, #20]
 192:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1310              		.loc 1 192 3 is_stmt 1 view .LVU453
 192:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1311              		.loc 1 192 30 is_stmt 0 view .LVU454
 1312 0028 0123     		movs	r3, #1
 1313 002a 0B93     		str	r3, [sp, #44]
 193:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1314              		.loc 1 193 3 is_stmt 1 view .LVU455
 193:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1315              		.loc 1 193 41 is_stmt 0 view .LVU456
 1316 002c 0023     		movs	r3, #0
 1317 002e 0C93     		str	r3, [sp, #48]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1318              		.loc 1 194 3 is_stmt 1 view .LVU457
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1319              		.loc 1 194 35 is_stmt 0 view .LVU458
 1320 0030 6022     		movs	r2, #96
 1321 0032 0D92     		str	r2, [sp, #52]
 195:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1322              		.loc 1 195 3 is_stmt 1 view .LVU459
 195:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1323              		.loc 1 195 34 is_stmt 0 view .LVU460
 1324 0034 0F93     		str	r3, [sp, #60]
 196:Core/Src/main.c ****   {
 1325              		.loc 1 196 3 is_stmt 1 view .LVU461
 196:Core/Src/main.c ****   {
 1326              		.loc 1 196 7 is_stmt 0 view .LVU462
 1327 0036 05A8     		add	r0, sp, #20
 1328 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1329              	.LVL65:
 196:Core/Src/main.c ****   {
 1330              		.loc 1 196 6 view .LVU463
 1331 003c 78B9     		cbnz	r0, .L84
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1332              		.loc 1 203 3 is_stmt 1 view .LVU464
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1333              		.loc 1 203 31 is_stmt 0 view .LVU465
ARM GAS  /tmp/cc3i1fqf.s 			page 46


 1334 003e 0F23     		movs	r3, #15
 1335 0040 0093     		str	r3, [sp]
 205:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1336              		.loc 1 205 3 is_stmt 1 view .LVU466
 205:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1337              		.loc 1 205 34 is_stmt 0 view .LVU467
 1338 0042 0021     		movs	r1, #0
 1339 0044 0191     		str	r1, [sp, #4]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1340              		.loc 1 206 3 is_stmt 1 view .LVU468
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1341              		.loc 1 206 35 is_stmt 0 view .LVU469
 1342 0046 0291     		str	r1, [sp, #8]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1343              		.loc 1 207 3 is_stmt 1 view .LVU470
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1344              		.loc 1 207 36 is_stmt 0 view .LVU471
 1345 0048 0391     		str	r1, [sp, #12]
 208:Core/Src/main.c **** 
 1346              		.loc 1 208 3 is_stmt 1 view .LVU472
 208:Core/Src/main.c **** 
 1347              		.loc 1 208 36 is_stmt 0 view .LVU473
 1348 004a 0491     		str	r1, [sp, #16]
 210:Core/Src/main.c ****   {
 1349              		.loc 1 210 3 is_stmt 1 view .LVU474
 210:Core/Src/main.c ****   {
 1350              		.loc 1 210 7 is_stmt 0 view .LVU475
 1351 004c 6846     		mov	r0, sp
 1352 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1353              	.LVL66:
 210:Core/Src/main.c ****   {
 1354              		.loc 1 210 6 view .LVU476
 1355 0052 30B9     		cbnz	r0, .L85
 214:Core/Src/main.c **** 
 1356              		.loc 1 214 1 view .LVU477
 1357 0054 17B0     		add	sp, sp, #92
 1358              		.cfi_remember_state
 1359              		.cfi_def_cfa_offset 4
 1360              		@ sp needed
 1361 0056 5DF804FB 		ldr	pc, [sp], #4
 1362              	.L83:
 1363              		.cfi_restore_state
 185:Core/Src/main.c ****   }
 1364              		.loc 1 185 5 is_stmt 1 view .LVU478
 1365 005a FFF7FEFF 		bl	Error_Handler
 1366              	.LVL67:
 1367              	.L84:
 198:Core/Src/main.c ****   }
 1368              		.loc 1 198 5 view .LVU479
 1369 005e FFF7FEFF 		bl	Error_Handler
 1370              	.LVL68:
 1371              	.L85:
 212:Core/Src/main.c ****   }
 1372              		.loc 1 212 5 view .LVU480
 1373 0062 FFF7FEFF 		bl	Error_Handler
 1374              	.LVL69:
 1375              		.cfi_endproc
ARM GAS  /tmp/cc3i1fqf.s 			page 47


 1376              	.LFE292:
 1378              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 1379              		.align	1
 1380              		.global	PeriphCommonClock_Config
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1385              	PeriphCommonClock_Config:
 1386              	.LFB293:
 221:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1387              		.loc 1 221 1 view -0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 96
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391 0000 00B5     		push	{lr}
 1392              		.cfi_def_cfa_offset 4
 1393              		.cfi_offset 14, -4
 1394 0002 99B0     		sub	sp, sp, #100
 1395              		.cfi_def_cfa_offset 104
 222:Core/Src/main.c **** 
 1396              		.loc 1 222 3 view .LVU482
 222:Core/Src/main.c **** 
 1397              		.loc 1 222 28 is_stmt 0 view .LVU483
 1398 0004 5C22     		movs	r2, #92
 1399 0006 0021     		movs	r1, #0
 1400 0008 01A8     		add	r0, sp, #4
 1401 000a FFF7FEFF 		bl	memset
 1402              	.LVL70:
 226:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1403              		.loc 1 226 3 is_stmt 1 view .LVU484
 226:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1404              		.loc 1 226 38 is_stmt 0 view .LVU485
 1405 000e 4FF40423 		mov	r3, #540672
 1406 0012 0193     		str	r3, [sp, #4]
 227:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1407              		.loc 1 227 3 is_stmt 1 view .LVU486
 227:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1408              		.loc 1 227 35 is_stmt 0 view .LVU487
 1409 0014 4FF08053 		mov	r3, #268435456
 1410 0018 1593     		str	r3, [sp, #84]
 228:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1411              		.loc 1 228 3 is_stmt 1 view .LVU488
 228:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1412              		.loc 1 228 38 is_stmt 0 view .LVU489
 1413 001a 4FF08063 		mov	r3, #67108864
 1414 001e 1393     		str	r3, [sp, #76]
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1415              		.loc 1 229 3 is_stmt 1 view .LVU490
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1416              		.loc 1 229 39 is_stmt 0 view .LVU491
 1417 0020 0123     		movs	r3, #1
 1418 0022 0293     		str	r3, [sp, #8]
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1419              		.loc 1 230 3 is_stmt 1 view .LVU492
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1420              		.loc 1 230 34 is_stmt 0 view .LVU493
 1421 0024 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cc3i1fqf.s 			page 48


 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1422              		.loc 1 231 3 is_stmt 1 view .LVU494
 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1423              		.loc 1 231 34 is_stmt 0 view .LVU495
 1424 0026 1023     		movs	r3, #16
 1425 0028 0493     		str	r3, [sp, #16]
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1426              		.loc 1 232 3 is_stmt 1 view .LVU496
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1427              		.loc 1 232 34 is_stmt 0 view .LVU497
 1428 002a 0723     		movs	r3, #7
 1429 002c 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1430              		.loc 1 233 3 is_stmt 1 view .LVU498
 233:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1431              		.loc 1 233 34 is_stmt 0 view .LVU499
 1432 002e 0223     		movs	r3, #2
 1433 0030 0693     		str	r3, [sp, #24]
 234:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1434              		.loc 1 234 3 is_stmt 1 view .LVU500
 234:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1435              		.loc 1 234 34 is_stmt 0 view .LVU501
 1436 0032 0793     		str	r3, [sp, #28]
 235:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1437              		.loc 1 235 3 is_stmt 1 view .LVU502
 235:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1438              		.loc 1 235 41 is_stmt 0 view .LVU503
 1439 0034 4FF08873 		mov	r3, #17825792
 1440 0038 0893     		str	r3, [sp, #32]
 236:Core/Src/main.c ****   {
 1441              		.loc 1 236 3 is_stmt 1 view .LVU504
 236:Core/Src/main.c ****   {
 1442              		.loc 1 236 7 is_stmt 0 view .LVU505
 1443 003a 01A8     		add	r0, sp, #4
 1444 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1445              	.LVL71:
 236:Core/Src/main.c ****   {
 1446              		.loc 1 236 6 view .LVU506
 1447 0040 10B9     		cbnz	r0, .L89
 240:Core/Src/main.c **** 
 1448              		.loc 1 240 1 view .LVU507
 1449 0042 19B0     		add	sp, sp, #100
 1450              		.cfi_remember_state
 1451              		.cfi_def_cfa_offset 4
 1452              		@ sp needed
 1453 0044 5DF804FB 		ldr	pc, [sp], #4
 1454              	.L89:
 1455              		.cfi_restore_state
 238:Core/Src/main.c ****   }
 1456              		.loc 1 238 5 is_stmt 1 view .LVU508
 1457 0048 FFF7FEFF 		bl	Error_Handler
 1458              	.LVL72:
 1459              		.cfi_endproc
 1460              	.LFE293:
 1462              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1463              		.align	2
 1464              	.LC2:
ARM GAS  /tmp/cc3i1fqf.s 			page 49


 1465 0000 72656365 		.ascii	"receiced\000"
 1465      69636564 
 1465      00
 1466 0009 000000   		.align	2
 1467              	.LC3:
 1468 000c 257500   		.ascii	"%u\000"
 1469              		.section	.text.main,"ax",%progbits
 1470              		.align	1
 1471              		.global	main
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1476              	main:
 1477              	.LFB291:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1478              		.loc 1 81 1 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 40
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482 0000 00B5     		push	{lr}
 1483              		.cfi_def_cfa_offset 4
 1484              		.cfi_offset 14, -4
 1485 0002 8DB0     		sub	sp, sp, #52
 1486              		.cfi_def_cfa_offset 56
  89:Core/Src/main.c **** 
 1487              		.loc 1 89 3 view .LVU510
 1488 0004 FFF7FEFF 		bl	HAL_Init
 1489              	.LVL73:
  96:Core/Src/main.c **** 
 1490              		.loc 1 96 3 view .LVU511
 1491 0008 FFF7FEFF 		bl	SystemClock_Config
 1492              	.LVL74:
  99:Core/Src/main.c **** 
 1493              		.loc 1 99 3 view .LVU512
 1494 000c FFF7FEFF 		bl	PeriphCommonClock_Config
 1495              	.LVL75:
 106:Core/Src/main.c ****   MX_DMA_Init();
 1496              		.loc 1 106 3 view .LVU513
 1497 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1498              	.LVL76:
 107:Core/Src/main.c ****   MX_ADC1_Init();
 1499              		.loc 1 107 3 view .LVU514
 1500 0014 FFF7FEFF 		bl	MX_DMA_Init
 1501              	.LVL77:
 108:Core/Src/main.c ****   MX_USART1_UART_Init();
 1502              		.loc 1 108 3 view .LVU515
 1503 0018 FFF7FEFF 		bl	MX_ADC1_Init
 1504              	.LVL78:
 109:Core/Src/main.c ****   MX_TIM1_Init();
 1505              		.loc 1 109 3 view .LVU516
 1506 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 1507              	.LVL79:
 110:Core/Src/main.c ****   MX_USART2_UART_Init();
 1508              		.loc 1 110 3 view .LVU517
 1509 0020 FFF7FEFF 		bl	MX_TIM1_Init
 1510              	.LVL80:
 111:Core/Src/main.c ****   MX_USART3_UART_Init();
ARM GAS  /tmp/cc3i1fqf.s 			page 50


 1511              		.loc 1 111 3 view .LVU518
 1512 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 1513              	.LVL81:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1514              		.loc 1 112 3 view .LVU519
 1515 0028 FFF7FEFF 		bl	MX_USART3_UART_Init
 1516              	.LVL82:
 114:Core/Src/main.c ****   initLCD();
 1517              		.loc 1 114 3 view .LVU520
 114:Core/Src/main.c ****   initLCD();
 1518              		.loc 1 114 8 is_stmt 0 view .LVU521
 1519 002c 354B     		ldr	r3, .L96
 1520 002e 93E80300 		ldm	r3, {r0, r1}
 1521 0032 0990     		str	r0, [sp, #36]
 1522 0034 ADF82810 		strh	r1, [sp, #40]	@ movhi
 1523 0038 0023     		movs	r3, #0
 1524 003a CDF82A30 		str	r3, [sp, #42]	@ unaligned
 115:Core/Src/main.c ****   clearLCD();
 1525              		.loc 1 115 3 is_stmt 1 view .LVU522
 1526 003e FFF7FEFF 		bl	initLCD
 1527              	.LVL83:
 116:Core/Src/main.c ****   writeLCD(textStr);
 1528              		.loc 1 116 3 view .LVU523
 1529 0042 FFF7FEFF 		bl	clearLCD
 1530              	.LVL84:
 117:Core/Src/main.c **** 
 1531              		.loc 1 117 3 view .LVU524
 1532 0046 09A8     		add	r0, sp, #36
 1533 0048 FFF7FEFF 		bl	writeLCD
 1534              	.LVL85:
 119:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 8);
 1535              		.loc 1 119 3 view .LVU525
 120:Core/Src/main.c **** 
 1536              		.loc 1 120 3 view .LVU526
 1537 004c 0822     		movs	r2, #8
 1538 004e 05A9     		add	r1, sp, #20
 1539 0050 2D48     		ldr	r0, .L96+4
 1540 0052 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1541              	.LVL86:
 1542 0056 11E0     		b	.L94
 1543              	.LVL87:
 1544              	.L92:
 1545              	.LBB13:
 163:Core/Src/main.c ****     } 
 1546              		.loc 1 163 7 view .LVU527
 1547 0058 2C4B     		ldr	r3, .L96+8
 1548 005a 0993     		str	r3, [sp, #36]
 1549              	.L93:
 165:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, textStr, strlen(textStr), 100);
 1550              		.loc 1 165 5 view .LVU528
 1551 005c 0121     		movs	r1, #1
 1552 005e 0020     		movs	r0, #0
 1553 0060 FFF7FEFF 		bl	setCursor
 1554              	.LVL88:
 166:Core/Src/main.c ****     writeLCD(textStr);
 1555              		.loc 1 166 5 view .LVU529
 166:Core/Src/main.c ****     writeLCD(textStr);
ARM GAS  /tmp/cc3i1fqf.s 			page 51


 1556              		.loc 1 166 41 is_stmt 0 view .LVU530
 1557 0064 09A8     		add	r0, sp, #36
 1558 0066 FFF7FEFF 		bl	strlen
 1559              	.LVL89:
 166:Core/Src/main.c ****     writeLCD(textStr);
 1560              		.loc 1 166 5 view .LVU531
 1561 006a 6423     		movs	r3, #100
 1562 006c 82B2     		uxth	r2, r0
 1563 006e 09A9     		add	r1, sp, #36
 1564 0070 2748     		ldr	r0, .L96+12
 1565 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 1566              	.LVL90:
 167:Core/Src/main.c ****   }
 1567              		.loc 1 167 5 is_stmt 1 view .LVU532
 1568 0076 09A8     		add	r0, sp, #36
 1569 0078 FFF7FEFF 		bl	writeLCD
 1570              	.LVL91:
 1571              	.LBE13:
 128:Core/Src/main.c ****   {
 1572              		.loc 1 128 9 view .LVU533
 1573              	.L94:
 122:Core/Src/main.c ****   
 1574              		.loc 1 122 3 view .LVU534
 128:Core/Src/main.c ****   {
 1575              		.loc 1 128 3 view .LVU535
 1576              	.LBB14:
 133:Core/Src/main.c ****     while(1){
 1577              		.loc 1 133 5 view .LVU536
 1578 007c 0021     		movs	r1, #0
 1579 007e 0846     		mov	r0, r1
 1580 0080 FFF7FEFF 		bl	setCursor
 1581              	.LVL92:
 1582              	.L91:
 134:Core/Src/main.c ****       if(HAL_UART_Receive(&huart1, uartData, 11, 100) == HAL_OK){
 1583              		.loc 1 134 5 view .LVU537
 135:Core/Src/main.c ****         if(uartData[10] == 0){
 1584              		.loc 1 135 7 view .LVU538
 135:Core/Src/main.c ****         if(uartData[10] == 0){
 1585              		.loc 1 135 10 is_stmt 0 view .LVU539
 1586 0084 6423     		movs	r3, #100
 1587 0086 0B22     		movs	r2, #11
 1588 0088 02A9     		add	r1, sp, #8
 1589 008a 2148     		ldr	r0, .L96+12
 1590 008c FFF7FEFF 		bl	HAL_UART_Receive
 1591              	.LVL93:
 135:Core/Src/main.c ****         if(uartData[10] == 0){
 1592              		.loc 1 135 9 view .LVU540
 1593 0090 0028     		cmp	r0, #0
 1594 0092 F7D1     		bne	.L91
 136:Core/Src/main.c ****           sprintf(textStr, "receiced");
 1595              		.loc 1 136 9 is_stmt 1 view .LVU541
 136:Core/Src/main.c ****           sprintf(textStr, "receiced");
 1596              		.loc 1 136 20 is_stmt 0 view .LVU542
 1597 0094 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 136:Core/Src/main.c ****           sprintf(textStr, "receiced");
 1598              		.loc 1 136 11 view .LVU543
 1599 0098 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3i1fqf.s 			page 52


 1600 009a F3D1     		bne	.L91
 137:Core/Src/main.c ****           setCursor(0, 0);
 1601              		.loc 1 137 11 is_stmt 1 view .LVU544
 1602 009c 1D4A     		ldr	r2, .L96+16
 1603 009e 09AB     		add	r3, sp, #36
 1604 00a0 07CA     		ldm	r2, {r0, r1, r2}
 1605 00a2 03C3     		stmia	r3!, {r0, r1}
 1606 00a4 1A70     		strb	r2, [r3]
 138:Core/Src/main.c ****           writeLCD(textStr);
 1607              		.loc 1 138 11 view .LVU545
 1608 00a6 0021     		movs	r1, #0
 1609 00a8 0846     		mov	r0, r1
 1610 00aa FFF7FEFF 		bl	setCursor
 1611              	.LVL94:
 139:Core/Src/main.c ****           break;
 1612              		.loc 1 139 11 view .LVU546
 1613 00ae 09A8     		add	r0, sp, #36
 1614 00b0 FFF7FEFF 		bl	writeLCD
 1615              	.LVL95:
 140:Core/Src/main.c ****         }
 1616              		.loc 1 140 11 view .LVU547
 146:Core/Src/main.c ****     X_value   = uartData;
 1617              		.loc 1 146 5 view .LVU548
 147:Core/Src/main.c ****     Y_value   = uartData + 2;
 1618              		.loc 1 147 5 view .LVU549
 148:Core/Src/main.c ****     g_cmd     = uartData + 4;
 1619              		.loc 1 148 5 view .LVU550
 149:Core/Src/main.c ****     sum_value = uartData + 6;
 1620              		.loc 1 149 5 view .LVU551
 150:Core/Src/main.c ****     xor_value = uartData + 8;
 1621              		.loc 1 150 5 view .LVU552
 151:Core/Src/main.c **** 
 1622              		.loc 1 151 5 view .LVU553
 153:Core/Src/main.c ****     setCursor(9, 0);
 1623              		.loc 1 153 5 view .LVU554
 1624 00b4 BDF80C20 		ldrh	r2, [sp, #12]
 1625 00b8 1749     		ldr	r1, .L96+20
 1626 00ba 09A8     		add	r0, sp, #36
 1627 00bc FFF7FEFF 		bl	sprintf
 1628              	.LVL96:
 154:Core/Src/main.c ****     writeLCD(textStr);
 1629              		.loc 1 154 5 view .LVU555
 1630 00c0 0021     		movs	r1, #0
 1631 00c2 0920     		movs	r0, #9
 1632 00c4 FFF7FEFF 		bl	setCursor
 1633              	.LVL97:
 155:Core/Src/main.c **** 
 1634              		.loc 1 155 5 view .LVU556
 1635 00c8 09A8     		add	r0, sp, #36
 1636 00ca FFF7FEFF 		bl	writeLCD
 1637              	.LVL98:
 157:Core/Src/main.c **** 
 1638              		.loc 1 157 5 view .LVU557
 1639 00ce 04AB     		add	r3, sp, #16
 1640              	.LVL99:
 157:Core/Src/main.c **** 
 1641              		.loc 1 157 5 is_stmt 0 view .LVU558
ARM GAS  /tmp/cc3i1fqf.s 			page 53


 1642 00d0 0193     		str	r3, [sp, #4]
 1643 00d2 0DF10E03 		add	r3, sp, #14
 1644              	.LVL100:
 157:Core/Src/main.c **** 
 1645              		.loc 1 157 5 view .LVU559
 1646 00d6 0093     		str	r3, [sp]
 1647 00d8 03AB     		add	r3, sp, #12
 1648              	.LVL101:
 157:Core/Src/main.c **** 
 1649              		.loc 1 157 5 view .LVU560
 1650 00da 0DF10A02 		add	r2, sp, #10
 1651              	.LVL102:
 157:Core/Src/main.c **** 
 1652              		.loc 1 157 5 view .LVU561
 1653 00de 02A9     		add	r1, sp, #8
 1654              	.LVL103:
 157:Core/Src/main.c **** 
 1655              		.loc 1 157 5 view .LVU562
 1656 00e0 0846     		mov	r0, r1
 1657 00e2 FFF7FEFF 		bl	GetData
 1658              	.LVL104:
 159:Core/Src/main.c ****       sprintf(textStr, "ACK");
 1659              		.loc 1 159 5 is_stmt 1 view .LVU563
 159:Core/Src/main.c ****       sprintf(textStr, "ACK");
 1660              		.loc 1 159 8 is_stmt 0 view .LVU564
 1661 00e6 BDF81030 		ldrh	r3, [sp, #16]
 1662 00ea BDF80E20 		ldrh	r2, [sp, #14]
 1663 00ee BDF80A10 		ldrh	r1, [sp, #10]
 1664 00f2 BDF80800 		ldrh	r0, [sp, #8]
 1665 00f6 FFF7FEFF 		bl	CheckSum
 1666              	.LVL105:
 159:Core/Src/main.c ****       sprintf(textStr, "ACK");
 1667              		.loc 1 159 7 view .LVU565
 1668 00fa 0028     		cmp	r0, #0
 1669 00fc ACD0     		beq	.L92
 160:Core/Src/main.c ****     }
 1670              		.loc 1 160 7 is_stmt 1 view .LVU566
 1671 00fe 074B     		ldr	r3, .L96+24
 1672 0100 0993     		str	r3, [sp, #36]
 1673 0102 ABE7     		b	.L93
 1674              	.L97:
 1675              		.align	2
 1676              	.L96:
 1677 0104 00000000 		.word	.LANCHOR5
 1678 0108 00000000 		.word	.LANCHOR0
 1679 010c 4E414B00 		.word	4931918
 1680 0110 00000000 		.word	.LANCHOR1
 1681 0114 00000000 		.word	.LC2
 1682 0118 0C000000 		.word	.LC3
 1683 011c 41434B00 		.word	4932417
 1684              	.LBE14:
 1685              		.cfi_endproc
 1686              	.LFE291:
 1688              		.global	huart3
 1689              		.global	huart2
 1690              		.global	huart1
 1691              		.global	htim1
ARM GAS  /tmp/cc3i1fqf.s 			page 54


 1692              		.global	hdma_adc1
 1693              		.global	hadc1
 1694              		.section	.rodata
 1695              		.align	2
 1696              		.set	.LANCHOR5,. + 0
 1697              	.LC1:
 1698 0000 73746172 		.ascii	"start\000"
 1698      7400
 1699 0006 00000000 		.space	4
 1700              		.section	.bss.hadc1,"aw",%nobits
 1701              		.align	2
 1702              		.set	.LANCHOR0,. + 0
 1705              	hadc1:
 1706 0000 00000000 		.space	100
 1706      00000000 
 1706      00000000 
 1706      00000000 
 1706      00000000 
 1707              		.section	.bss.hdma_adc1,"aw",%nobits
 1708              		.align	2
 1711              	hdma_adc1:
 1712 0000 00000000 		.space	72
 1712      00000000 
 1712      00000000 
 1712      00000000 
 1712      00000000 
 1713              		.section	.bss.htim1,"aw",%nobits
 1714              		.align	2
 1715              		.set	.LANCHOR2,. + 0
 1718              	htim1:
 1719 0000 00000000 		.space	76
 1719      00000000 
 1719      00000000 
 1719      00000000 
 1719      00000000 
 1720              		.section	.bss.huart1,"aw",%nobits
 1721              		.align	2
 1722              		.set	.LANCHOR1,. + 0
 1725              	huart1:
 1726 0000 00000000 		.space	132
 1726      00000000 
 1726      00000000 
 1726      00000000 
 1726      00000000 
 1727              		.section	.bss.huart2,"aw",%nobits
 1728              		.align	2
 1729              		.set	.LANCHOR3,. + 0
 1732              	huart2:
 1733 0000 00000000 		.space	132
 1733      00000000 
 1733      00000000 
 1733      00000000 
 1733      00000000 
 1734              		.section	.bss.huart3,"aw",%nobits
 1735              		.align	2
 1736              		.set	.LANCHOR4,. + 0
 1739              	huart3:
ARM GAS  /tmp/cc3i1fqf.s 			page 55


 1740 0000 00000000 		.space	132
 1740      00000000 
 1740      00000000 
 1740      00000000 
 1740      00000000 
 1741              		.text
 1742              	.Letext0:
 1743              		.file 3 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1744              		.file 4 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1745              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 1746              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1747              		.file 7 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1748              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1749              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1750              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1751              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1752              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1753              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 1754              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1755              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 1756              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1757              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1758              		.file 18 "Core/Inc/main.h"
 1759              		.file 19 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1760              		.file 20 "Core/Inc/Data_parser.h"
 1761              		.file 21 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1762              		.file 22 "Core/Inc/lcd.h"
 1763              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1764              		.file 24 "<built-in>"
ARM GAS  /tmp/cc3i1fqf.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc3i1fqf.s:20     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:25     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc3i1fqf.s:59     .text.MX_DMA_Init:000000000000001c $d
     /tmp/cc3i1fqf.s:64     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:69     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc3i1fqf.s:378    .text.MX_GPIO_Init:0000000000000174 $d
     /tmp/cc3i1fqf.s:387    .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/cc3i1fqf.s:391    .text.Error_Handler:0000000000000000 $t
     /tmp/cc3i1fqf.s:397    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc3i1fqf.s:453    .text.Error_Handler:0000000000000030 $d
     /tmp/cc3i1fqf.s:458    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:463    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc3i1fqf.s:734    .text.MX_ADC1_Init:0000000000000124 $d
     /tmp/cc3i1fqf.s:748    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:753    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc3i1fqf.s:813    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/cc3i1fqf.s:819    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:824    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc3i1fqf.s:1119   .text.MX_TIM1_Init:000000000000013c $d
     /tmp/cc3i1fqf.s:1125   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:1130   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc3i1fqf.s:1190   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/cc3i1fqf.s:1196   .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cc3i1fqf.s:1201   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cc3i1fqf.s:1261   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cc3i1fqf.s:1267   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc3i1fqf.s:1273   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc3i1fqf.s:1379   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/cc3i1fqf.s:1385   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/cc3i1fqf.s:1463   .rodata.main.str1.4:0000000000000000 $d
     /tmp/cc3i1fqf.s:1470   .text.main:0000000000000000 $t
     /tmp/cc3i1fqf.s:1476   .text.main:0000000000000000 main
     /tmp/cc3i1fqf.s:1677   .text.main:0000000000000104 $d
     /tmp/cc3i1fqf.s:1739   .bss.huart3:0000000000000000 huart3
     /tmp/cc3i1fqf.s:1732   .bss.huart2:0000000000000000 huart2
     /tmp/cc3i1fqf.s:1725   .bss.huart1:0000000000000000 huart1
     /tmp/cc3i1fqf.s:1718   .bss.htim1:0000000000000000 htim1
     /tmp/cc3i1fqf.s:1711   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/cc3i1fqf.s:1705   .bss.hadc1:0000000000000000 hadc1
     /tmp/cc3i1fqf.s:1695   .rodata:0000000000000000 $d
     /tmp/cc3i1fqf.s:1701   .bss.hadc1:0000000000000000 $d
     /tmp/cc3i1fqf.s:1708   .bss.hdma_adc1:0000000000000000 $d
     /tmp/cc3i1fqf.s:1714   .bss.htim1:0000000000000000 $d
     /tmp/cc3i1fqf.s:1721   .bss.huart1:0000000000000000 $d
     /tmp/cc3i1fqf.s:1728   .bss.huart2:0000000000000000 $d
     /tmp/cc3i1fqf.s:1735   .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
clearLCD
setCursor
writeLCD
HAL_ADC_Init
HAL_ADC_ConfigChannel
ARM GAS  /tmp/cc3i1fqf.s 			page 57


HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIMEx_ConfigBreakInput
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
initLCD
HAL_ADC_Start_DMA
strlen
HAL_UART_Transmit
HAL_UART_Receive
sprintf
GetData
CheckSum
