ARM GAS  /tmp/ccQFkTGB.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_DMA_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_DMA_Init:
  26              	.LFB301:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <stdint.h>
  27:Core/Src/main.c **** #include <stdbool.h>
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "hmi.h"
  30:Core/Src/main.c **** #include "cnc_core.h"
  31:Core/Src/main.c **** #include "lcd.h"
ARM GAS  /tmp/ccQFkTGB.s 			page 2


  32:Core/Src/main.c **** #include "cnc_config.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim7;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim15;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** UART_HandleTypeDef huart1;
  58:Core/Src/main.c **** UART_HandleTypeDef huart2;
  59:Core/Src/main.c **** UART_HandleTypeDef huart3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE BEGIN PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  66:Core/Src/main.c **** void SystemClock_Config(void);
  67:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  68:Core/Src/main.c **** static void MX_GPIO_Init(void);
  69:Core/Src/main.c **** static void MX_DMA_Init(void);
  70:Core/Src/main.c **** static void MX_ADC1_Init(void);
  71:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  72:Core/Src/main.c **** static void MX_TIM1_Init(void);
  73:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  74:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  75:Core/Src/main.c **** static void MX_TIM15_Init(void);
  76:Core/Src/main.c **** static void MX_TIM7_Init(void);
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** HMI_info_t hmi_info = { .mode = HMI_Mode_Zero, 
  84:Core/Src/main.c ****                         .state = HMI_State_Stop, 
  85:Core/Src/main.c ****                         .move = HMI_Move_None,
  86:Core/Src/main.c ****                         .pos = {3000, 3000},
  87:Core/Src/main.c ****                         .pulseLenght = {1000, 1000},
  88:Core/Src/main.c ****                         .pulsesCnt = {0, 0},
ARM GAS  /tmp/ccQFkTGB.s 			page 3


  89:Core/Src/main.c ****                         .commanded.pos = {0, 0},
  90:Core/Src/main.c ****                         .feed = 1000,
  91:Core/Src/main.c ****                         .cnt1 = 0,
  92:Core/Src/main.c ****                         .cnt2 = 0,
  93:Core/Src/main.c ****                         .update = true,
  94:Core/Src/main.c ****                         .zeroed = false,
  95:Core/Src/main.c ****                         .pushbuttons = 0xFFU};
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** volatile uint16_t adc_data[8];
  98:Core/Src/main.c **** /* USER CODE END 0 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /**
 101:Core/Src/main.c ****   * @brief  The application entry point.
 102:Core/Src/main.c ****   * @retval int
 103:Core/Src/main.c ****   */
 104:Core/Src/main.c **** int main(void)
 105:Core/Src/main.c **** {
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 113:Core/Src/main.c ****   HAL_Init();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Configure the system clock */
 120:Core/Src/main.c ****   SystemClock_Config();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* Configure the peripherals common clocks */
 123:Core/Src/main.c ****   PeriphCommonClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Initialize all configured peripherals */
 130:Core/Src/main.c ****   MX_GPIO_Init();
 131:Core/Src/main.c ****   MX_DMA_Init();
 132:Core/Src/main.c ****   MX_ADC1_Init();
 133:Core/Src/main.c ****   MX_USART1_UART_Init();
 134:Core/Src/main.c ****   MX_TIM1_Init();
 135:Core/Src/main.c ****   MX_USART2_UART_Init();
 136:Core/Src/main.c ****   MX_USART3_UART_Init();
 137:Core/Src/main.c ****   MX_TIM15_Init();
 138:Core/Src/main.c ****   MX_TIM7_Init();
 139:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   initLCD();
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   HAL_TIMEx_PWMN_Start_IT(&enX_tim, TIM_CHANNEL_3);
ARM GAS  /tmp/ccQFkTGB.s 			page 4


 146:Core/Src/main.c ****   HAL_TIM_PWM_Start_IT(&enY_tim, TIM_CHANNEL_1);
 147:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 148:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 149:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 150:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*) adc_data, 8);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END 2 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Infinite loop */
 157:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 158:Core/Src/main.c ****   while (1)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     /* USER CODE END WHILE */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     CNC_HL_Control(&hmi_info, &enX_tim, &enY_tim, &huart1, adc_data);
 165:Core/Src/main.c ****     //HAL_Delay(1);
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c ****   /* USER CODE END 3 */
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /**
 171:Core/Src/main.c ****   * @brief System Clock Configuration
 172:Core/Src/main.c ****   * @retval None
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c **** void SystemClock_Config(void)
 175:Core/Src/main.c **** {
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 190:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 191:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 192:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 194:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 202:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccQFkTGB.s 			page 5


 203:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c **** }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** /**
 215:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /** Initializes the peripherals clock
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_ADC;
 225:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 226:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 227:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 228:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 233:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 234:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_ADC1_Init(void)
 246:Core/Src/main.c **** {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /** Common config
 259:Core/Src/main.c ****   */
ARM GAS  /tmp/ccQFkTGB.s 			page 6


 260:Core/Src/main.c ****   hadc1.Instance = ADC1;
 261:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 262:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 263:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 264:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 265:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 266:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 267:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 269:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 270:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 271:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 272:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 273:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 274:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 275:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /** Configure Regular Channel
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 283:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 284:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 285:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 286:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 287:Core/Src/main.c ****   sConfig.Offset = 0;
 288:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /** Configure Regular Channel
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 296:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 297:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /** Configure Regular Channel
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 305:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 306:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Configure Regular Channel
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 314:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 315:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /** Configure Regular Channel
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 323:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 324:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /** Configure Regular Channel
 330:Core/Src/main.c ****   */
 331:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_10;
 332:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 333:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /** Configure Regular Channel
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_12;
 341:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 342:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /** Configure Regular Channel
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_13;
 350:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 351:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 352:Core/Src/main.c ****   {
 353:Core/Src/main.c ****     Error_Handler();
 354:Core/Src/main.c ****   }
 355:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /**
 362:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 363:Core/Src/main.c ****   * @param None
 364:Core/Src/main.c ****   * @retval None
 365:Core/Src/main.c ****   */
 366:Core/Src/main.c **** static void MX_TIM1_Init(void)
 367:Core/Src/main.c **** {
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
ARM GAS  /tmp/ccQFkTGB.s 			page 8


 374:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 375:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 376:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 381:Core/Src/main.c ****   htim1.Instance = TIM1;
 382:Core/Src/main.c ****   htim1.Init.Prescaler = 92;
 383:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 384:Core/Src/main.c ****   htim1.Init.Period = 400;
 385:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 386:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 387:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 388:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 389:Core/Src/main.c ****   {
 390:Core/Src/main.c ****     Error_Handler();
 391:Core/Src/main.c ****   }
 392:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 393:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 402:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 403:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 404:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 409:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 410:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 411:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 412:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 413:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 414:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 415:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 416:Core/Src/main.c ****   {
 417:Core/Src/main.c ****     Error_Handler();
 418:Core/Src/main.c ****   }
 419:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 420:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 421:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 422:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 423:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 424:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 430:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
ARM GAS  /tmp/ccQFkTGB.s 			page 9


 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 437:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** }
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /**
 442:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 443:Core/Src/main.c ****   * @param None
 444:Core/Src/main.c ****   * @retval None
 445:Core/Src/main.c ****   */
 446:Core/Src/main.c **** static void MX_TIM7_Init(void)
 447:Core/Src/main.c **** {
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 458:Core/Src/main.c ****   htim7.Instance = TIM7;
 459:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 460:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 461:Core/Src/main.c ****   htim7.Init.Period = 600;
 462:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 463:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 464:Core/Src/main.c ****   {
 465:Core/Src/main.c ****     Error_Handler();
 466:Core/Src/main.c ****   }
 467:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 468:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 469:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** }
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** /**
 480:Core/Src/main.c ****   * @brief TIM15 Initialization Function
 481:Core/Src/main.c ****   * @param None
 482:Core/Src/main.c ****   * @retval None
 483:Core/Src/main.c ****   */
 484:Core/Src/main.c **** static void MX_TIM15_Init(void)
 485:Core/Src/main.c **** {
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 0 */
ARM GAS  /tmp/ccQFkTGB.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END TIM15_Init 0 */
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 492:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 493:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 494:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 1 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END TIM15_Init 1 */
 499:Core/Src/main.c ****   htim15.Instance = TIM15;
 500:Core/Src/main.c ****   htim15.Init.Prescaler = 92;
 501:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 502:Core/Src/main.c ****   htim15.Init.Period = 400;
 503:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 504:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 505:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 506:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 507:Core/Src/main.c ****   {
 508:Core/Src/main.c ****     Error_Handler();
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 511:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 512:Core/Src/main.c ****   {
 513:Core/Src/main.c ****     Error_Handler();
 514:Core/Src/main.c ****   }
 515:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 516:Core/Src/main.c ****   {
 517:Core/Src/main.c ****     Error_Handler();
 518:Core/Src/main.c ****   }
 519:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 520:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 521:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 522:Core/Src/main.c ****   {
 523:Core/Src/main.c ****     Error_Handler();
 524:Core/Src/main.c ****   }
 525:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 526:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 527:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 528:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 529:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 530:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 531:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 532:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 533:Core/Src/main.c ****   {
 534:Core/Src/main.c ****     Error_Handler();
 535:Core/Src/main.c ****   }
 536:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 537:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 538:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 539:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 540:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 541:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 542:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 543:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 544:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 11


 545:Core/Src/main.c ****     Error_Handler();
 546:Core/Src/main.c ****   }
 547:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 2 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****   /* USER CODE END TIM15_Init 2 */
 550:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim15);
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /**
 555:Core/Src/main.c ****   * @brief USART1 Initialization Function
 556:Core/Src/main.c ****   * @param None
 557:Core/Src/main.c ****   * @retval None
 558:Core/Src/main.c ****   */
 559:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 560:Core/Src/main.c **** {
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 563:Core/Src/main.c **** 
 564:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 569:Core/Src/main.c ****   huart1.Instance = USART1;
 570:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 571:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 572:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 573:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 574:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 575:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 576:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 577:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 578:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 579:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 580:Core/Src/main.c ****   {
 581:Core/Src/main.c ****     Error_Handler();
 582:Core/Src/main.c ****   }
 583:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** }
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** /**
 590:Core/Src/main.c ****   * @brief USART2 Initialization Function
 591:Core/Src/main.c ****   * @param None
 592:Core/Src/main.c ****   * @retval None
 593:Core/Src/main.c ****   */
 594:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 595:Core/Src/main.c **** {
 596:Core/Src/main.c **** 
 597:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 598:Core/Src/main.c **** 
 599:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
ARM GAS  /tmp/ccQFkTGB.s 			page 12


 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 604:Core/Src/main.c ****   huart2.Instance = USART2;
 605:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 606:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 607:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 608:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 609:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 610:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 611:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 612:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 613:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 614:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 615:Core/Src/main.c ****   {
 616:Core/Src/main.c ****     Error_Handler();
 617:Core/Src/main.c ****   }
 618:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** }
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** /**
 625:Core/Src/main.c ****   * @brief USART3 Initialization Function
 626:Core/Src/main.c ****   * @param None
 627:Core/Src/main.c ****   * @retval None
 628:Core/Src/main.c ****   */
 629:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 630:Core/Src/main.c **** {
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 639:Core/Src/main.c ****   huart3.Instance = USART3;
 640:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 641:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 642:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 643:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 644:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 645:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 646:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 647:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 648:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 649:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 650:Core/Src/main.c ****   {
 651:Core/Src/main.c ****     Error_Handler();
 652:Core/Src/main.c ****   }
 653:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 656:Core/Src/main.c **** 
 657:Core/Src/main.c **** }
 658:Core/Src/main.c **** 
ARM GAS  /tmp/ccQFkTGB.s 			page 13


 659:Core/Src/main.c **** /**
 660:Core/Src/main.c ****   * Enable DMA controller clock
 661:Core/Src/main.c ****   */
 662:Core/Src/main.c **** static void MX_DMA_Init(void)
 663:Core/Src/main.c **** {
  28              		.loc 1 663 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* DMA controller clock enable */
 666:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  35              		.loc 1 666 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 666 3 view .LVU2
  38              		.loc 1 666 3 view .LVU3
  39 0002 064B     		ldr	r3, .L3
  40 0004 9A6C     		ldr	r2, [r3, #72]
  41 0006 42F00102 		orr	r2, r2, #1
  42 000a 9A64     		str	r2, [r3, #72]
  43              		.loc 1 666 3 view .LVU4
  44 000c 9B6C     		ldr	r3, [r3, #72]
  45 000e 03F00103 		and	r3, r3, #1
  46 0012 0193     		str	r3, [sp, #4]
  47              		.loc 1 666 3 view .LVU5
  48 0014 019B     		ldr	r3, [sp, #4]
  49              	.LBE4:
  50              		.loc 1 666 3 view .LVU6
 667:Core/Src/main.c **** 
 668:Core/Src/main.c **** }
  51              		.loc 1 668 1 is_stmt 0 view .LVU7
  52 0016 02B0     		add	sp, sp, #8
  53              		.cfi_def_cfa_offset 0
  54              		@ sp needed
  55 0018 7047     		bx	lr
  56              	.L4:
  57 001a 00BF     		.align	2
  58              	.L3:
  59 001c 00100240 		.word	1073876992
  60              		.cfi_endproc
  61              	.LFE301:
  63              		.section	.text.MX_GPIO_Init,"ax",%progbits
  64              		.align	1
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	MX_GPIO_Init:
  70              	.LFB302:
 669:Core/Src/main.c **** 
 670:Core/Src/main.c **** /**
 671:Core/Src/main.c ****   * @brief GPIO Initialization Function
 672:Core/Src/main.c ****   * @param None
 673:Core/Src/main.c ****   * @retval None
 674:Core/Src/main.c ****   */
ARM GAS  /tmp/ccQFkTGB.s 			page 14


 675:Core/Src/main.c **** static void MX_GPIO_Init(void)
 676:Core/Src/main.c **** {
  71              		.loc 1 676 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 48
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  76              		.cfi_def_cfa_offset 28
  77              		.cfi_offset 4, -28
  78              		.cfi_offset 5, -24
  79              		.cfi_offset 6, -20
  80              		.cfi_offset 7, -16
  81              		.cfi_offset 8, -12
  82              		.cfi_offset 9, -8
  83              		.cfi_offset 14, -4
  84 0004 8DB0     		sub	sp, sp, #52
  85              		.cfi_def_cfa_offset 80
 677:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  86              		.loc 1 677 3 view .LVU9
  87              		.loc 1 677 20 is_stmt 0 view .LVU10
  88 0006 0024     		movs	r4, #0
  89 0008 0794     		str	r4, [sp, #28]
  90 000a 0894     		str	r4, [sp, #32]
  91 000c 0994     		str	r4, [sp, #36]
  92 000e 0A94     		str	r4, [sp, #40]
  93 0010 0B94     		str	r4, [sp, #44]
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 680:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  94              		.loc 1 680 3 is_stmt 1 view .LVU11
  95              	.LBB5:
  96              		.loc 1 680 3 view .LVU12
  97              		.loc 1 680 3 view .LVU13
  98 0012 6B4B     		ldr	r3, .L7
  99 0014 DA6C     		ldr	r2, [r3, #76]
 100 0016 42F01002 		orr	r2, r2, #16
 101 001a DA64     		str	r2, [r3, #76]
 102              		.loc 1 680 3 view .LVU14
 103 001c DA6C     		ldr	r2, [r3, #76]
 104 001e 02F01002 		and	r2, r2, #16
 105 0022 0192     		str	r2, [sp, #4]
 106              		.loc 1 680 3 view .LVU15
 107 0024 019A     		ldr	r2, [sp, #4]
 108              	.LBE5:
 109              		.loc 1 680 3 view .LVU16
 681:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 110              		.loc 1 681 3 view .LVU17
 111              	.LBB6:
 112              		.loc 1 681 3 view .LVU18
 113              		.loc 1 681 3 view .LVU19
 114 0026 DA6C     		ldr	r2, [r3, #76]
 115 0028 42F00402 		orr	r2, r2, #4
 116 002c DA64     		str	r2, [r3, #76]
 117              		.loc 1 681 3 view .LVU20
 118 002e DA6C     		ldr	r2, [r3, #76]
 119 0030 02F00402 		and	r2, r2, #4
 120 0034 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/ccQFkTGB.s 			page 15


 121              		.loc 1 681 3 view .LVU21
 122 0036 029A     		ldr	r2, [sp, #8]
 123              	.LBE6:
 124              		.loc 1 681 3 view .LVU22
 682:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 125              		.loc 1 682 3 view .LVU23
 126              	.LBB7:
 127              		.loc 1 682 3 view .LVU24
 128              		.loc 1 682 3 view .LVU25
 129 0038 DA6C     		ldr	r2, [r3, #76]
 130 003a 42F08002 		orr	r2, r2, #128
 131 003e DA64     		str	r2, [r3, #76]
 132              		.loc 1 682 3 view .LVU26
 133 0040 DA6C     		ldr	r2, [r3, #76]
 134 0042 02F08002 		and	r2, r2, #128
 135 0046 0392     		str	r2, [sp, #12]
 136              		.loc 1 682 3 view .LVU27
 137 0048 039A     		ldr	r2, [sp, #12]
 138              	.LBE7:
 139              		.loc 1 682 3 view .LVU28
 683:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 140              		.loc 1 683 3 view .LVU29
 141              	.LBB8:
 142              		.loc 1 683 3 view .LVU30
 143              		.loc 1 683 3 view .LVU31
 144 004a DA6C     		ldr	r2, [r3, #76]
 145 004c 42F00102 		orr	r2, r2, #1
 146 0050 DA64     		str	r2, [r3, #76]
 147              		.loc 1 683 3 view .LVU32
 148 0052 DA6C     		ldr	r2, [r3, #76]
 149 0054 02F00102 		and	r2, r2, #1
 150 0058 0492     		str	r2, [sp, #16]
 151              		.loc 1 683 3 view .LVU33
 152 005a 049A     		ldr	r2, [sp, #16]
 153              	.LBE8:
 154              		.loc 1 683 3 view .LVU34
 684:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 155              		.loc 1 684 3 view .LVU35
 156              	.LBB9:
 157              		.loc 1 684 3 view .LVU36
 158              		.loc 1 684 3 view .LVU37
 159 005c DA6C     		ldr	r2, [r3, #76]
 160 005e 42F00202 		orr	r2, r2, #2
 161 0062 DA64     		str	r2, [r3, #76]
 162              		.loc 1 684 3 view .LVU38
 163 0064 DA6C     		ldr	r2, [r3, #76]
 164 0066 02F00202 		and	r2, r2, #2
 165 006a 0592     		str	r2, [sp, #20]
 166              		.loc 1 684 3 view .LVU39
 167 006c 059A     		ldr	r2, [sp, #20]
 168              	.LBE9:
 169              		.loc 1 684 3 view .LVU40
 685:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 170              		.loc 1 685 3 view .LVU41
 171              	.LBB10:
 172              		.loc 1 685 3 view .LVU42
 173              		.loc 1 685 3 view .LVU43
ARM GAS  /tmp/ccQFkTGB.s 			page 16


 174 006e DA6C     		ldr	r2, [r3, #76]
 175 0070 42F00802 		orr	r2, r2, #8
 176 0074 DA64     		str	r2, [r3, #76]
 177              		.loc 1 685 3 view .LVU44
 178 0076 DB6C     		ldr	r3, [r3, #76]
 179 0078 03F00803 		and	r3, r3, #8
 180 007c 0693     		str	r3, [sp, #24]
 181              		.loc 1 685 3 view .LVU45
 182 007e 069B     		ldr	r3, [sp, #24]
 183              	.LBE10:
 184              		.loc 1 685 3 view .LVU46
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 688:Core/Src/main.c ****   HAL_GPIO_WritePin(DIR2_GPIO_Port, DIR2_Pin, GPIO_PIN_RESET);
 185              		.loc 1 688 3 view .LVU47
 186 0080 2246     		mov	r2, r4
 187 0082 0221     		movs	r1, #2
 188 0084 4FF09040 		mov	r0, #1207959552
 189 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL0:
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 691:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, PO0_Pin|SW2_Pin, GPIO_PIN_RESET);
 191              		.loc 1 691 3 view .LVU48
 192 008c DFF83C91 		ldr	r9, .L7+12
 193 0090 2246     		mov	r2, r4
 194 0092 6021     		movs	r1, #96
 195 0094 4846     		mov	r0, r9
 196 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 197              	.LVL1:
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 694:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, PO1_Pin|PO2_Pin|DIR3_Pin|D4_Pin
 198              		.loc 1 694 3 view .LVU49
 199 009a 4A4F     		ldr	r7, .L7+4
 200 009c 2246     		mov	r2, r4
 201 009e 41F2C531 		movw	r1, #5061
 202 00a2 3846     		mov	r0, r7
 203 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL2:
 695:Core/Src/main.c ****                           |D5_Pin|D6_Pin|D7_Pin, GPIO_PIN_RESET);
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 698:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, PO3_Pin|O0_Pin|O1_Pin|O2_Pin
 205              		.loc 1 698 3 view .LVU50
 206 00a8 DFF82481 		ldr	r8, .L7+16
 207 00ac 2246     		mov	r2, r4
 208 00ae 4FF68371 		movw	r1, #65411
 209 00b2 4046     		mov	r0, r8
 210 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 211              	.LVL3:
 699:Core/Src/main.c ****                           |O3_Pin|O4_Pin|O5_Pin|O6_Pin
 700:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin, GPIO_PIN_RESET);
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 703:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, O10_Pin|O11_Pin|O12_Pin|O13_Pin
 212              		.loc 1 703 3 view .LVU51
ARM GAS  /tmp/ccQFkTGB.s 			page 17


 213 00b8 434E     		ldr	r6, .L7+8
 214 00ba 2246     		mov	r2, r4
 215 00bc 4FF47C51 		mov	r1, #16128
 216 00c0 3046     		mov	r0, r6
 217 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218              	.LVL4:
 704:Core/Src/main.c ****                           |O14_Pin|O15_Pin, GPIO_PIN_RESET);
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****   /*Configure GPIO pins : PB7_Pin PB6_Pin PB5_Pin PB4_Pin
 707:Core/Src/main.c ****                            PB3_Pin */
 708:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB7_Pin|PB6_Pin|PB5_Pin|PB4_Pin
 219              		.loc 1 708 3 view .LVU52
 220              		.loc 1 708 23 is_stmt 0 view .LVU53
 221 00c6 7C23     		movs	r3, #124
 222 00c8 0793     		str	r3, [sp, #28]
 709:Core/Src/main.c ****                           |PB3_Pin;
 710:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 223              		.loc 1 710 3 is_stmt 1 view .LVU54
 224              		.loc 1 710 24 is_stmt 0 view .LVU55
 225 00ca 0894     		str	r4, [sp, #32]
 711:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 711 3 is_stmt 1 view .LVU56
 227              		.loc 1 711 24 is_stmt 0 view .LVU57
 228 00cc 0994     		str	r4, [sp, #36]
 712:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 229              		.loc 1 712 3 is_stmt 1 view .LVU58
 230 00ce 07A9     		add	r1, sp, #28
 231 00d0 4046     		mov	r0, r8
 232 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL5:
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /*Configure GPIO pins : PB2_Pin PB1_Pin PB0_Pin */
 715:Core/Src/main.c ****   GPIO_InitStruct.Pin = PB2_Pin|PB1_Pin|PB0_Pin;
 234              		.loc 1 715 3 view .LVU59
 235              		.loc 1 715 23 is_stmt 0 view .LVU60
 236 00d6 4FF46043 		mov	r3, #57344
 237 00da 0793     		str	r3, [sp, #28]
 716:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 238              		.loc 1 716 3 is_stmt 1 view .LVU61
 239              		.loc 1 716 24 is_stmt 0 view .LVU62
 240 00dc 0894     		str	r4, [sp, #32]
 717:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 241              		.loc 1 717 3 is_stmt 1 view .LVU63
 242              		.loc 1 717 24 is_stmt 0 view .LVU64
 243 00de 0994     		str	r4, [sp, #36]
 718:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 244              		.loc 1 718 3 is_stmt 1 view .LVU65
 245 00e0 07A9     		add	r1, sp, #28
 246 00e2 4846     		mov	r0, r9
 247 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL6:
 719:Core/Src/main.c **** 
 720:Core/Src/main.c ****   /*Configure GPIO pin : DIR2_Pin */
 721:Core/Src/main.c ****   GPIO_InitStruct.Pin = DIR2_Pin;
 249              		.loc 1 721 3 view .LVU66
 250              		.loc 1 721 23 is_stmt 0 view .LVU67
 251 00e8 0223     		movs	r3, #2
ARM GAS  /tmp/ccQFkTGB.s 			page 18


 252 00ea 0793     		str	r3, [sp, #28]
 722:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 253              		.loc 1 722 3 is_stmt 1 view .LVU68
 254              		.loc 1 722 24 is_stmt 0 view .LVU69
 255 00ec 0125     		movs	r5, #1
 256 00ee 0895     		str	r5, [sp, #32]
 723:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 257              		.loc 1 723 3 is_stmt 1 view .LVU70
 258              		.loc 1 723 24 is_stmt 0 view .LVU71
 259 00f0 0994     		str	r4, [sp, #36]
 724:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 260              		.loc 1 724 3 is_stmt 1 view .LVU72
 261              		.loc 1 724 25 is_stmt 0 view .LVU73
 262 00f2 0A94     		str	r4, [sp, #40]
 725:Core/Src/main.c ****   HAL_GPIO_Init(DIR2_GPIO_Port, &GPIO_InitStruct);
 263              		.loc 1 725 3 is_stmt 1 view .LVU74
 264 00f4 07A9     		add	r1, sp, #28
 265 00f6 4FF09040 		mov	r0, #1207959552
 266 00fa FFF7FEFF 		bl	HAL_GPIO_Init
 267              	.LVL7:
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /*Configure GPIO pin : SWSTOP_Pin */
 728:Core/Src/main.c ****   GPIO_InitStruct.Pin = SWSTOP_Pin;
 268              		.loc 1 728 3 view .LVU75
 269              		.loc 1 728 23 is_stmt 0 view .LVU76
 270 00fe 4023     		movs	r3, #64
 271 0100 0793     		str	r3, [sp, #28]
 729:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 272              		.loc 1 729 3 is_stmt 1 view .LVU77
 273              		.loc 1 729 24 is_stmt 0 view .LVU78
 274 0102 4FF48813 		mov	r3, #1114112
 275 0106 0893     		str	r3, [sp, #32]
 730:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 276              		.loc 1 730 3 is_stmt 1 view .LVU79
 277              		.loc 1 730 24 is_stmt 0 view .LVU80
 278 0108 0994     		str	r4, [sp, #36]
 731:Core/Src/main.c ****   HAL_GPIO_Init(SWSTOP_GPIO_Port, &GPIO_InitStruct);
 279              		.loc 1 731 3 is_stmt 1 view .LVU81
 280 010a 07A9     		add	r1, sp, #28
 281 010c 4FF09040 		mov	r0, #1207959552
 282 0110 FFF7FEFF 		bl	HAL_GPIO_Init
 283              	.LVL8:
 732:Core/Src/main.c **** 
 733:Core/Src/main.c ****   /*Configure GPIO pins : PO0_Pin SW2_Pin */
 734:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO0_Pin|SW2_Pin;
 284              		.loc 1 734 3 view .LVU82
 285              		.loc 1 734 23 is_stmt 0 view .LVU83
 286 0114 6023     		movs	r3, #96
 287 0116 0793     		str	r3, [sp, #28]
 735:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 288              		.loc 1 735 3 is_stmt 1 view .LVU84
 289              		.loc 1 735 24 is_stmt 0 view .LVU85
 290 0118 0895     		str	r5, [sp, #32]
 736:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 291              		.loc 1 736 3 is_stmt 1 view .LVU86
 292              		.loc 1 736 24 is_stmt 0 view .LVU87
 293 011a 0994     		str	r4, [sp, #36]
ARM GAS  /tmp/ccQFkTGB.s 			page 19


 737:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 294              		.loc 1 737 3 is_stmt 1 view .LVU88
 295              		.loc 1 737 25 is_stmt 0 view .LVU89
 296 011c 0A94     		str	r4, [sp, #40]
 738:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 297              		.loc 1 738 3 is_stmt 1 view .LVU90
 298 011e 07A9     		add	r1, sp, #28
 299 0120 4846     		mov	r0, r9
 300 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 301              	.LVL9:
 739:Core/Src/main.c **** 
 740:Core/Src/main.c ****   /*Configure GPIO pins : PO1_Pin PO2_Pin DIR3_Pin D4_Pin
 741:Core/Src/main.c ****                            D5_Pin D6_Pin D7_Pin */
 742:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO1_Pin|PO2_Pin|DIR3_Pin|D4_Pin
 302              		.loc 1 742 3 view .LVU91
 303              		.loc 1 742 23 is_stmt 0 view .LVU92
 304 0126 41F2C533 		movw	r3, #5061
 305 012a 0793     		str	r3, [sp, #28]
 743:Core/Src/main.c ****                           |D5_Pin|D6_Pin|D7_Pin;
 744:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 306              		.loc 1 744 3 is_stmt 1 view .LVU93
 307              		.loc 1 744 24 is_stmt 0 view .LVU94
 308 012c 0895     		str	r5, [sp, #32]
 745:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 309              		.loc 1 745 3 is_stmt 1 view .LVU95
 310              		.loc 1 745 24 is_stmt 0 view .LVU96
 311 012e 0994     		str	r4, [sp, #36]
 746:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 312              		.loc 1 746 3 is_stmt 1 view .LVU97
 313              		.loc 1 746 25 is_stmt 0 view .LVU98
 314 0130 0A94     		str	r4, [sp, #40]
 747:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 315              		.loc 1 747 3 is_stmt 1 view .LVU99
 316 0132 07A9     		add	r1, sp, #28
 317 0134 3846     		mov	r0, r7
 318 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 319              	.LVL10:
 748:Core/Src/main.c **** 
 749:Core/Src/main.c ****   /*Configure GPIO pins : PO3_Pin O0_Pin O1_Pin O2_Pin
 750:Core/Src/main.c ****                            O3_Pin O4_Pin O5_Pin O6_Pin
 751:Core/Src/main.c ****                            O7_Pin EN_Pin RS_Pin */
 752:Core/Src/main.c ****   GPIO_InitStruct.Pin = PO3_Pin|O0_Pin|O1_Pin|O2_Pin
 320              		.loc 1 752 3 view .LVU100
 321              		.loc 1 752 23 is_stmt 0 view .LVU101
 322 013a 4FF68373 		movw	r3, #65411
 323 013e 0793     		str	r3, [sp, #28]
 753:Core/Src/main.c ****                           |O3_Pin|O4_Pin|O5_Pin|O6_Pin
 754:Core/Src/main.c ****                           |O7_Pin|EN_Pin|RS_Pin;
 755:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 324              		.loc 1 755 3 is_stmt 1 view .LVU102
 325              		.loc 1 755 24 is_stmt 0 view .LVU103
 326 0140 0895     		str	r5, [sp, #32]
 756:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 756 3 is_stmt 1 view .LVU104
 328              		.loc 1 756 24 is_stmt 0 view .LVU105
 329 0142 0994     		str	r4, [sp, #36]
 757:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccQFkTGB.s 			page 20


 330              		.loc 1 757 3 is_stmt 1 view .LVU106
 331              		.loc 1 757 25 is_stmt 0 view .LVU107
 332 0144 0A94     		str	r4, [sp, #40]
 758:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 333              		.loc 1 758 3 is_stmt 1 view .LVU108
 334 0146 07A9     		add	r1, sp, #28
 335 0148 4046     		mov	r0, r8
 336 014a FFF7FEFF 		bl	HAL_GPIO_Init
 337              	.LVL11:
 759:Core/Src/main.c **** 
 760:Core/Src/main.c ****   /*Configure GPIO pins : O10_Pin O11_Pin O12_Pin O13_Pin
 761:Core/Src/main.c ****                            O14_Pin O15_Pin */
 762:Core/Src/main.c ****   GPIO_InitStruct.Pin = O10_Pin|O11_Pin|O12_Pin|O13_Pin
 338              		.loc 1 762 3 view .LVU109
 339              		.loc 1 762 23 is_stmt 0 view .LVU110
 340 014e 4FF47C53 		mov	r3, #16128
 341 0152 0793     		str	r3, [sp, #28]
 763:Core/Src/main.c ****                           |O14_Pin|O15_Pin;
 764:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 342              		.loc 1 764 3 is_stmt 1 view .LVU111
 343              		.loc 1 764 24 is_stmt 0 view .LVU112
 344 0154 0895     		str	r5, [sp, #32]
 765:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 765 3 is_stmt 1 view .LVU113
 346              		.loc 1 765 24 is_stmt 0 view .LVU114
 347 0156 0994     		str	r4, [sp, #36]
 766:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 348              		.loc 1 766 3 is_stmt 1 view .LVU115
 349              		.loc 1 766 25 is_stmt 0 view .LVU116
 350 0158 0A94     		str	r4, [sp, #40]
 767:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 351              		.loc 1 767 3 is_stmt 1 view .LVU117
 352 015a 07A9     		add	r1, sp, #28
 353 015c 3046     		mov	r0, r6
 354 015e FFF7FEFF 		bl	HAL_GPIO_Init
 355              	.LVL12:
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****   /*Configure GPIO pins : SW0_Pin SW1_Pin */
 770:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW0_Pin|SW1_Pin;
 356              		.loc 1 770 3 view .LVU118
 357              		.loc 1 770 23 is_stmt 0 view .LVU119
 358 0162 4FF44043 		mov	r3, #49152
 359 0166 0793     		str	r3, [sp, #28]
 771:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 360              		.loc 1 771 3 is_stmt 1 view .LVU120
 361              		.loc 1 771 24 is_stmt 0 view .LVU121
 362 0168 4FF40413 		mov	r3, #2162688
 363 016c 0893     		str	r3, [sp, #32]
 772:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 364              		.loc 1 772 3 is_stmt 1 view .LVU122
 365              		.loc 1 772 24 is_stmt 0 view .LVU123
 366 016e 0994     		str	r4, [sp, #36]
 773:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 367              		.loc 1 773 3 is_stmt 1 view .LVU124
 368 0170 07A9     		add	r1, sp, #28
 369 0172 3046     		mov	r0, r6
 370 0174 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccQFkTGB.s 			page 21


 371              	.LVL13:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****   /*Configure GPIO pins : I0_Pin I1_Pin I2_Pin I3_Pin
 776:Core/Src/main.c ****                            I4_Pin I5_Pin I6_Pin */
 777:Core/Src/main.c ****   GPIO_InitStruct.Pin = I0_Pin|I1_Pin|I2_Pin|I3_Pin
 372              		.loc 1 777 3 view .LVU125
 373              		.loc 1 777 23 is_stmt 0 view .LVU126
 374 0178 FB23     		movs	r3, #251
 375 017a 0793     		str	r3, [sp, #28]
 778:Core/Src/main.c ****                           |I4_Pin|I5_Pin|I6_Pin;
 779:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 376              		.loc 1 779 3 is_stmt 1 view .LVU127
 377              		.loc 1 779 24 is_stmt 0 view .LVU128
 378 017c 0894     		str	r4, [sp, #32]
 780:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 379              		.loc 1 780 3 is_stmt 1 view .LVU129
 380              		.loc 1 780 24 is_stmt 0 view .LVU130
 381 017e 0994     		str	r4, [sp, #36]
 781:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 382              		.loc 1 781 3 is_stmt 1 view .LVU131
 383 0180 07A9     		add	r1, sp, #28
 384 0182 3046     		mov	r0, r6
 385 0184 FFF7FEFF 		bl	HAL_GPIO_Init
 386              	.LVL14:
 782:Core/Src/main.c **** 
 783:Core/Src/main.c ****   /*Configure GPIO pin : I7_Pin */
 784:Core/Src/main.c ****   GPIO_InitStruct.Pin = I7_Pin;
 387              		.loc 1 784 3 view .LVU132
 388              		.loc 1 784 23 is_stmt 0 view .LVU133
 389 0188 0823     		movs	r3, #8
 390 018a 0793     		str	r3, [sp, #28]
 785:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 391              		.loc 1 785 3 is_stmt 1 view .LVU134
 392              		.loc 1 785 24 is_stmt 0 view .LVU135
 393 018c 0894     		str	r4, [sp, #32]
 786:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 394              		.loc 1 786 3 is_stmt 1 view .LVU136
 395              		.loc 1 786 24 is_stmt 0 view .LVU137
 396 018e 0994     		str	r4, [sp, #36]
 787:Core/Src/main.c ****   HAL_GPIO_Init(I7_GPIO_Port, &GPIO_InitStruct);
 397              		.loc 1 787 3 is_stmt 1 view .LVU138
 398 0190 07A9     		add	r1, sp, #28
 399 0192 3846     		mov	r0, r7
 400 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 401              	.LVL15:
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****   /* EXTI interrupt init*/
 790:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 15, 0);
 402              		.loc 1 790 3 view .LVU139
 403 0198 2246     		mov	r2, r4
 404 019a 0F21     		movs	r1, #15
 405 019c 1720     		movs	r0, #23
 406 019e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 407              	.LVL16:
 791:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 408              		.loc 1 791 3 view .LVU140
 409 01a2 1720     		movs	r0, #23
ARM GAS  /tmp/ccQFkTGB.s 			page 22


 410 01a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 411              	.LVL17:
 792:Core/Src/main.c **** 
 793:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 14, 0);
 412              		.loc 1 793 3 view .LVU141
 413 01a8 2246     		mov	r2, r4
 414 01aa 0E21     		movs	r1, #14
 415 01ac 2820     		movs	r0, #40
 416 01ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 417              	.LVL18:
 794:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 418              		.loc 1 794 3 view .LVU142
 419 01b2 2820     		movs	r0, #40
 420 01b4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 421              	.LVL19:
 795:Core/Src/main.c **** 
 796:Core/Src/main.c **** }
 422              		.loc 1 796 1 is_stmt 0 view .LVU143
 423 01b8 0DB0     		add	sp, sp, #52
 424              		.cfi_def_cfa_offset 28
 425              		@ sp needed
 426 01ba BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 427              	.L8:
 428 01be 00BF     		.align	2
 429              	.L7:
 430 01c0 00100240 		.word	1073876992
 431 01c4 00040048 		.word	1207960576
 432 01c8 000C0048 		.word	1207962624
 433 01cc 00080048 		.word	1207961600
 434 01d0 00100048 		.word	1207963648
 435              		.cfi_endproc
 436              	.LFE302:
 438              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 439              		.align	1
 440              		.global	HAL_TIM_PeriodElapsedCallback
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 445              	HAL_TIM_PeriodElapsedCallback:
 446              	.LVL20:
 447              	.LFB303:
 797:Core/Src/main.c **** 
 798:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 799:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim)
 800:Core/Src/main.c **** {
 448              		.loc 1 800 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		.loc 1 800 1 is_stmt 0 view .LVU145
 453 0000 08B5     		push	{r3, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 3, -8
 456              		.cfi_offset 14, -4
 801:Core/Src/main.c ****   HMI_Update(&hmi_info, adc_data);
 457              		.loc 1 801 3 is_stmt 1 view .LVU146
 458 0002 0249     		ldr	r1, .L11
ARM GAS  /tmp/ccQFkTGB.s 			page 23


 459 0004 0248     		ldr	r0, .L11+4
 460              	.LVL21:
 461              		.loc 1 801 3 is_stmt 0 view .LVU147
 462 0006 FFF7FEFF 		bl	HMI_Update
 463              	.LVL22:
 802:Core/Src/main.c **** }
 464              		.loc 1 802 1 view .LVU148
 465 000a 08BD     		pop	{r3, pc}
 466              	.L12:
 467              		.align	2
 468              	.L11:
 469 000c 00000000 		.word	.LANCHOR0
 470 0010 00000000 		.word	.LANCHOR1
 471              		.cfi_endproc
 472              	.LFE303:
 474              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 475              		.align	1
 476              		.global	HAL_TIM_PWM_PulseFinishedCallback
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	HAL_TIM_PWM_PulseFinishedCallback:
 482              	.LVL23:
 483              	.LFB304:
 803:Core/Src/main.c **** 
 804:Core/Src/main.c **** void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim){
 484              		.loc 1 804 64 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		.loc 1 804 64 is_stmt 0 view .LVU150
 489 0000 10B5     		push	{r4, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 493 0002 0446     		mov	r4, r0
 805:Core/Src/main.c ****   if(htim == &enX_tim)
 494              		.loc 1 805 3 is_stmt 1 view .LVU151
 495              		.loc 1 805 5 is_stmt 0 view .LVU152
 496 0004 084B     		ldr	r3, .L19
 497 0006 9842     		cmp	r0, r3
 498 0008 03D0     		beq	.L17
 499              	.LVL24:
 500              	.L14:
 806:Core/Src/main.c ****     CNC_TIM_Callback_X(&hmi_info, &enX_tim);
 807:Core/Src/main.c **** 
 808:Core/Src/main.c ****   if(htim == &enY_tim)
 501              		.loc 1 808 3 is_stmt 1 view .LVU153
 502              		.loc 1 808 5 is_stmt 0 view .LVU154
 503 000a 084B     		ldr	r3, .L19+4
 504 000c 9C42     		cmp	r4, r3
 505 000e 05D0     		beq	.L18
 506              	.L13:
 809:Core/Src/main.c ****     CNC_TIM_Callback_Y(&hmi_info, &enY_tim); 
 810:Core/Src/main.c **** }
 507              		.loc 1 810 1 view .LVU155
 508 0010 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccQFkTGB.s 			page 24


 509              	.LVL25:
 510              	.L17:
 806:Core/Src/main.c ****     CNC_TIM_Callback_X(&hmi_info, &enX_tim);
 511              		.loc 1 806 5 is_stmt 1 view .LVU156
 512 0012 1946     		mov	r1, r3
 513 0014 0648     		ldr	r0, .L19+8
 514              	.LVL26:
 806:Core/Src/main.c ****     CNC_TIM_Callback_X(&hmi_info, &enX_tim);
 515              		.loc 1 806 5 is_stmt 0 view .LVU157
 516 0016 FFF7FEFF 		bl	CNC_TIM_Callback_X
 517              	.LVL27:
 518 001a F6E7     		b	.L14
 519              	.L18:
 809:Core/Src/main.c ****     CNC_TIM_Callback_Y(&hmi_info, &enY_tim); 
 520              		.loc 1 809 5 is_stmt 1 view .LVU158
 521 001c 1946     		mov	r1, r3
 522 001e 0448     		ldr	r0, .L19+8
 523 0020 FFF7FEFF 		bl	CNC_TIM_Callback_Y
 524              	.LVL28:
 525              		.loc 1 810 1 is_stmt 0 view .LVU159
 526 0024 F4E7     		b	.L13
 527              	.L20:
 528 0026 00BF     		.align	2
 529              	.L19:
 530 0028 00000000 		.word	.LANCHOR2
 531 002c 00000000 		.word	.LANCHOR3
 532 0030 00000000 		.word	.LANCHOR1
 533              		.cfi_endproc
 534              	.LFE304:
 536              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 537              		.align	1
 538              		.global	HAL_GPIO_EXTI_Callback
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 543              	HAL_GPIO_EXTI_Callback:
 544              	.LVL29:
 545              	.LFB305:
 811:Core/Src/main.c **** 
 812:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 813:Core/Src/main.c **** {
 546              		.loc 1 813 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 814:Core/Src/main.c ****   //STOP pressed halt motors and go to STOP mode
 815:Core/Src/main.c ****   if(GPIO_Pin == SWSTOP_Pin) {
 550              		.loc 1 815 3 view .LVU161
 551              		.loc 1 815 5 is_stmt 0 view .LVU162
 552 0000 4028     		cmp	r0, #64
 553 0002 00D0     		beq	.L27
 554 0004 7047     		bx	lr
 555              	.L27:
 813:Core/Src/main.c ****   //STOP pressed halt motors and go to STOP mode
 556              		.loc 1 813 1 view .LVU163
 557 0006 08B5     		push	{r3, lr}
 558              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQFkTGB.s 			page 25


 559              		.cfi_offset 3, -8
 560              		.cfi_offset 14, -4
 561              	.LBB11:
 816:Core/Src/main.c ****     CNC_Stop(&hmi_info, &enX_tim, &enY_tim);
 562              		.loc 1 816 5 is_stmt 1 view .LVU164
 563 0008 024A     		ldr	r2, .L28
 564 000a 0349     		ldr	r1, .L28+4
 565 000c 0348     		ldr	r0, .L28+8
 566              	.LVL30:
 567              		.loc 1 816 5 is_stmt 0 view .LVU165
 568 000e FFF7FEFF 		bl	CNC_Stop
 569              	.LVL31:
 570              	.LBE11:
 817:Core/Src/main.c ****   }
 818:Core/Src/main.c **** }
 571              		.loc 1 818 1 view .LVU166
 572 0012 08BD     		pop	{r3, pc}
 573              	.L29:
 574              		.align	2
 575              	.L28:
 576 0014 00000000 		.word	.LANCHOR3
 577 0018 00000000 		.word	.LANCHOR2
 578 001c 00000000 		.word	.LANCHOR1
 579              		.cfi_endproc
 580              	.LFE305:
 582              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 583              		.align	2
 584              	.LC0:
 585 0000 71756920 		.ascii	"qui si \303\250\012rotto tutto\000"
 585      736920C3 
 585      A80A726F 
 585      74746F20 
 585      74757474 
 586              		.section	.text.Error_Handler,"ax",%progbits
 587              		.align	1
 588              		.global	Error_Handler
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 593              	Error_Handler:
 594              	.LFB306:
 819:Core/Src/main.c **** /* USER CODE END 4 */
 820:Core/Src/main.c **** 
 821:Core/Src/main.c **** /**
 822:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 823:Core/Src/main.c ****   * @retval None
 824:Core/Src/main.c ****   */
 825:Core/Src/main.c **** void Error_Handler(void)
 826:Core/Src/main.c **** {
 595              		.loc 1 826 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ Volatile: function does not return.
 598              		@ args = 0, pretend = 0, frame = 24
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 00B5     		push	{lr}
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQFkTGB.s 			page 26


 603 0002 87B0     		sub	sp, sp, #28
 604              		.cfi_def_cfa_offset 32
 827:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 828:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 829:Core/Src/main.c ****   __disable_irq();
 605              		.loc 1 829 3 view .LVU168
 606              	.LBB12:
 607              	.LBI12:
 608              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccQFkTGB.s 			page 27


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccQFkTGB.s 			page 28


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
ARM GAS  /tmp/ccQFkTGB.s 			page 29


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 609              		.loc 2 207 27 view .LVU169
 610              	.LBB13:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 611              		.loc 2 209 3 view .LVU170
 612              		.syntax unified
 613              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 614 0004 72B6     		cpsid i
 615              	@ 0 "" 2
 616              		.thumb
 617              		.syntax unified
 618              	.LBE13:
ARM GAS  /tmp/ccQFkTGB.s 			page 30


 619              	.LBE12:
 830:Core/Src/main.c ****   char textStr[] = "qui si è\nrotto tutto";
 620              		.loc 1 830 3 view .LVU171
 621              		.loc 1 830 8 is_stmt 0 view .LVU172
 622 0006 EC46     		mov	ip, sp
 623 0008 094C     		ldr	r4, .L33
 624 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 625 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 626 0010 94E80300 		ldm	r4, {r0, r1}
 627 0014 4CF8040B 		str	r0, [ip], #4
 628 0018 ACF80010 		strh	r1, [ip]	@ movhi
 831:Core/Src/main.c ****   clearLCD();
 629              		.loc 1 831 3 is_stmt 1 view .LVU173
 630 001c FFF7FEFF 		bl	clearLCD
 631              	.LVL32:
 832:Core/Src/main.c ****   setCursor(0,  0);
 632              		.loc 1 832 3 view .LVU174
 633 0020 0021     		movs	r1, #0
 634 0022 0846     		mov	r0, r1
 635 0024 FFF7FEFF 		bl	setCursor
 636              	.LVL33:
 833:Core/Src/main.c ****   writeLCD(textStr);
 637              		.loc 1 833 3 view .LVU175
 638 0028 6846     		mov	r0, sp
 639 002a FFF7FEFF 		bl	writeLCD
 640              	.LVL34:
 641              	.L31:
 834:Core/Src/main.c ****   while (1)
 642              		.loc 1 834 3 discriminator 1 view .LVU176
 835:Core/Src/main.c ****   {
 836:Core/Src/main.c ****   }
 643              		.loc 1 836 3 discriminator 1 view .LVU177
 834:Core/Src/main.c ****   while (1)
 644              		.loc 1 834 9 discriminator 1 view .LVU178
 645 002e FEE7     		b	.L31
 646              	.L34:
 647              		.align	2
 648              	.L33:
 649 0030 00000000 		.word	.LC0
 650              		.cfi_endproc
 651              	.LFE306:
 653              		.section	.text.MX_ADC1_Init,"ax",%progbits
 654              		.align	1
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 659              	MX_ADC1_Init:
 660              	.LFB294:
 246:Core/Src/main.c **** 
 661              		.loc 1 246 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 24
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665 0000 00B5     		push	{lr}
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 14, -4
 668 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccQFkTGB.s 			page 31


 669              		.cfi_def_cfa_offset 32
 252:Core/Src/main.c **** 
 670              		.loc 1 252 3 view .LVU180
 252:Core/Src/main.c **** 
 671              		.loc 1 252 26 is_stmt 0 view .LVU181
 672 0004 0023     		movs	r3, #0
 673 0006 0093     		str	r3, [sp]
 674 0008 0193     		str	r3, [sp, #4]
 675 000a 0293     		str	r3, [sp, #8]
 676 000c 0393     		str	r3, [sp, #12]
 677 000e 0493     		str	r3, [sp, #16]
 678 0010 0593     		str	r3, [sp, #20]
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 679              		.loc 1 260 3 is_stmt 1 view .LVU182
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 680              		.loc 1 260 18 is_stmt 0 view .LVU183
 681 0012 4448     		ldr	r0, .L55
 682 0014 444A     		ldr	r2, .L55+4
 683 0016 0260     		str	r2, [r0]
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 684              		.loc 1 261 3 is_stmt 1 view .LVU184
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 685              		.loc 1 261 29 is_stmt 0 view .LVU185
 686 0018 4360     		str	r3, [r0, #4]
 262:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 687              		.loc 1 262 3 is_stmt 1 view .LVU186
 262:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 688              		.loc 1 262 25 is_stmt 0 view .LVU187
 689 001a 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 690              		.loc 1 263 3 is_stmt 1 view .LVU188
 263:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 691              		.loc 1 263 24 is_stmt 0 view .LVU189
 692 001c C360     		str	r3, [r0, #12]
 264:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 693              		.loc 1 264 3 is_stmt 1 view .LVU190
 264:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 694              		.loc 1 264 27 is_stmt 0 view .LVU191
 695 001e 0122     		movs	r2, #1
 696 0020 0261     		str	r2, [r0, #16]
 265:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 697              		.loc 1 265 3 is_stmt 1 view .LVU192
 265:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 698              		.loc 1 265 27 is_stmt 0 view .LVU193
 699 0022 0821     		movs	r1, #8
 700 0024 4161     		str	r1, [r0, #20]
 266:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 701              		.loc 1 266 3 is_stmt 1 view .LVU194
 266:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 702              		.loc 1 266 31 is_stmt 0 view .LVU195
 703 0026 0376     		strb	r3, [r0, #24]
 267:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 704              		.loc 1 267 3 is_stmt 1 view .LVU196
 267:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 8;
 705              		.loc 1 267 33 is_stmt 0 view .LVU197
 706 0028 4276     		strb	r2, [r0, #25]
 268:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  /tmp/ccQFkTGB.s 			page 32


 707              		.loc 1 268 3 is_stmt 1 view .LVU198
 268:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 708              		.loc 1 268 30 is_stmt 0 view .LVU199
 709 002a C161     		str	r1, [r0, #28]
 269:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 710              		.loc 1 269 3 is_stmt 1 view .LVU200
 269:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 711              		.loc 1 269 36 is_stmt 0 view .LVU201
 712 002c 80F82030 		strb	r3, [r0, #32]
 270:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 713              		.loc 1 270 3 is_stmt 1 view .LVU202
 270:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 714              		.loc 1 270 31 is_stmt 0 view .LVU203
 715 0030 8362     		str	r3, [r0, #40]
 271:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 716              		.loc 1 271 3 is_stmt 1 view .LVU204
 271:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 717              		.loc 1 271 35 is_stmt 0 view .LVU205
 718 0032 C362     		str	r3, [r0, #44]
 272:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 719              		.loc 1 272 3 is_stmt 1 view .LVU206
 272:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 720              		.loc 1 272 36 is_stmt 0 view .LVU207
 721 0034 80F83020 		strb	r2, [r0, #48]
 273:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 722              		.loc 1 273 3 is_stmt 1 view .LVU208
 273:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 723              		.loc 1 273 22 is_stmt 0 view .LVU209
 724 0038 4FF48052 		mov	r2, #4096
 725 003c 4263     		str	r2, [r0, #52]
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 726              		.loc 1 274 3 is_stmt 1 view .LVU210
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 727              		.loc 1 274 31 is_stmt 0 view .LVU211
 728 003e 80F83830 		strb	r3, [r0, #56]
 275:Core/Src/main.c ****   {
 729              		.loc 1 275 3 is_stmt 1 view .LVU212
 275:Core/Src/main.c ****   {
 730              		.loc 1 275 7 is_stmt 0 view .LVU213
 731 0042 FFF7FEFF 		bl	HAL_ADC_Init
 732              	.LVL35:
 275:Core/Src/main.c ****   {
 733              		.loc 1 275 6 view .LVU214
 734 0046 0028     		cmp	r0, #0
 735 0048 5AD1     		bne	.L46
 282:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 736              		.loc 1 282 3 is_stmt 1 view .LVU215
 282:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 737              		.loc 1 282 19 is_stmt 0 view .LVU216
 738 004a 384B     		ldr	r3, .L55+8
 739 004c 0093     		str	r3, [sp]
 283:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 740              		.loc 1 283 3 is_stmt 1 view .LVU217
 283:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 741              		.loc 1 283 16 is_stmt 0 view .LVU218
 742 004e 0623     		movs	r3, #6
 743 0050 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccQFkTGB.s 			page 33


 284:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 744              		.loc 1 284 3 is_stmt 1 view .LVU219
 284:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 745              		.loc 1 284 24 is_stmt 0 view .LVU220
 746 0052 0723     		movs	r3, #7
 747 0054 0293     		str	r3, [sp, #8]
 285:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 748              		.loc 1 285 3 is_stmt 1 view .LVU221
 285:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 749              		.loc 1 285 22 is_stmt 0 view .LVU222
 750 0056 7F23     		movs	r3, #127
 751 0058 0393     		str	r3, [sp, #12]
 286:Core/Src/main.c ****   sConfig.Offset = 0;
 752              		.loc 1 286 3 is_stmt 1 view .LVU223
 286:Core/Src/main.c ****   sConfig.Offset = 0;
 753              		.loc 1 286 24 is_stmt 0 view .LVU224
 754 005a 0423     		movs	r3, #4
 755 005c 0493     		str	r3, [sp, #16]
 287:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 756              		.loc 1 287 3 is_stmt 1 view .LVU225
 287:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 757              		.loc 1 287 18 is_stmt 0 view .LVU226
 758 005e 0023     		movs	r3, #0
 759 0060 0593     		str	r3, [sp, #20]
 288:Core/Src/main.c ****   {
 760              		.loc 1 288 3 is_stmt 1 view .LVU227
 288:Core/Src/main.c ****   {
 761              		.loc 1 288 7 is_stmt 0 view .LVU228
 762 0062 6946     		mov	r1, sp
 763 0064 2F48     		ldr	r0, .L55
 764 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 765              	.LVL36:
 288:Core/Src/main.c ****   {
 766              		.loc 1 288 6 view .LVU229
 767 006a 0028     		cmp	r0, #0
 768 006c 4AD1     		bne	.L47
 295:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 769              		.loc 1 295 3 is_stmt 1 view .LVU230
 295:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 770              		.loc 1 295 19 is_stmt 0 view .LVU231
 771 006e 304B     		ldr	r3, .L55+12
 772 0070 0093     		str	r3, [sp]
 296:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 773              		.loc 1 296 3 is_stmt 1 view .LVU232
 296:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 774              		.loc 1 296 16 is_stmt 0 view .LVU233
 775 0072 0C23     		movs	r3, #12
 776 0074 0193     		str	r3, [sp, #4]
 297:Core/Src/main.c ****   {
 777              		.loc 1 297 3 is_stmt 1 view .LVU234
 297:Core/Src/main.c ****   {
 778              		.loc 1 297 7 is_stmt 0 view .LVU235
 779 0076 6946     		mov	r1, sp
 780 0078 2A48     		ldr	r0, .L55
 781 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 782              	.LVL37:
 297:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 34


 783              		.loc 1 297 6 view .LVU236
 784 007e 0028     		cmp	r0, #0
 785 0080 42D1     		bne	.L48
 304:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 786              		.loc 1 304 3 is_stmt 1 view .LVU237
 304:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 787              		.loc 1 304 19 is_stmt 0 view .LVU238
 788 0082 2C4B     		ldr	r3, .L55+16
 789 0084 0093     		str	r3, [sp]
 305:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 790              		.loc 1 305 3 is_stmt 1 view .LVU239
 305:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 791              		.loc 1 305 16 is_stmt 0 view .LVU240
 792 0086 1223     		movs	r3, #18
 793 0088 0193     		str	r3, [sp, #4]
 306:Core/Src/main.c ****   {
 794              		.loc 1 306 3 is_stmt 1 view .LVU241
 306:Core/Src/main.c ****   {
 795              		.loc 1 306 7 is_stmt 0 view .LVU242
 796 008a 6946     		mov	r1, sp
 797 008c 2548     		ldr	r0, .L55
 798 008e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 799              	.LVL38:
 306:Core/Src/main.c ****   {
 800              		.loc 1 306 6 view .LVU243
 801 0092 0028     		cmp	r0, #0
 802 0094 3AD1     		bne	.L49
 313:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 803              		.loc 1 313 3 is_stmt 1 view .LVU244
 313:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 804              		.loc 1 313 19 is_stmt 0 view .LVU245
 805 0096 284B     		ldr	r3, .L55+20
 806 0098 0093     		str	r3, [sp]
 314:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 807              		.loc 1 314 3 is_stmt 1 view .LVU246
 314:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 808              		.loc 1 314 16 is_stmt 0 view .LVU247
 809 009a 1823     		movs	r3, #24
 810 009c 0193     		str	r3, [sp, #4]
 315:Core/Src/main.c ****   {
 811              		.loc 1 315 3 is_stmt 1 view .LVU248
 315:Core/Src/main.c ****   {
 812              		.loc 1 315 7 is_stmt 0 view .LVU249
 813 009e 6946     		mov	r1, sp
 814 00a0 2048     		ldr	r0, .L55
 815 00a2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 816              	.LVL39:
 315:Core/Src/main.c ****   {
 817              		.loc 1 315 6 view .LVU250
 818 00a6 0028     		cmp	r0, #0
 819 00a8 32D1     		bne	.L50
 322:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 820              		.loc 1 322 3 is_stmt 1 view .LVU251
 322:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 821              		.loc 1 322 19 is_stmt 0 view .LVU252
 822 00aa 244B     		ldr	r3, .L55+24
 823 00ac 0093     		str	r3, [sp]
ARM GAS  /tmp/ccQFkTGB.s 			page 35


 323:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 824              		.loc 1 323 3 is_stmt 1 view .LVU253
 323:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 825              		.loc 1 323 16 is_stmt 0 view .LVU254
 826 00ae 4FF48073 		mov	r3, #256
 827 00b2 0193     		str	r3, [sp, #4]
 324:Core/Src/main.c ****   {
 828              		.loc 1 324 3 is_stmt 1 view .LVU255
 324:Core/Src/main.c ****   {
 829              		.loc 1 324 7 is_stmt 0 view .LVU256
 830 00b4 6946     		mov	r1, sp
 831 00b6 1B48     		ldr	r0, .L55
 832 00b8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 833              	.LVL40:
 324:Core/Src/main.c ****   {
 834              		.loc 1 324 6 view .LVU257
 835 00bc 50BB     		cbnz	r0, .L51
 331:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 836              		.loc 1 331 3 is_stmt 1 view .LVU258
 331:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 837              		.loc 1 331 19 is_stmt 0 view .LVU259
 838 00be 204B     		ldr	r3, .L55+28
 839 00c0 0093     		str	r3, [sp]
 332:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 840              		.loc 1 332 3 is_stmt 1 view .LVU260
 332:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 841              		.loc 1 332 16 is_stmt 0 view .LVU261
 842 00c2 4FF48373 		mov	r3, #262
 843 00c6 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c ****   {
 844              		.loc 1 333 3 is_stmt 1 view .LVU262
 333:Core/Src/main.c ****   {
 845              		.loc 1 333 7 is_stmt 0 view .LVU263
 846 00c8 6946     		mov	r1, sp
 847 00ca 1648     		ldr	r0, .L55
 848 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 849              	.LVL41:
 333:Core/Src/main.c ****   {
 850              		.loc 1 333 6 view .LVU264
 851 00d0 10BB     		cbnz	r0, .L52
 340:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 852              		.loc 1 340 3 is_stmt 1 view .LVU265
 340:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 853              		.loc 1 340 19 is_stmt 0 view .LVU266
 854 00d2 1C4B     		ldr	r3, .L55+32
 855 00d4 0093     		str	r3, [sp]
 341:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 856              		.loc 1 341 3 is_stmt 1 view .LVU267
 341:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 857              		.loc 1 341 16 is_stmt 0 view .LVU268
 858 00d6 4FF48673 		mov	r3, #268
 859 00da 0193     		str	r3, [sp, #4]
 342:Core/Src/main.c ****   {
 860              		.loc 1 342 3 is_stmt 1 view .LVU269
 342:Core/Src/main.c ****   {
 861              		.loc 1 342 7 is_stmt 0 view .LVU270
 862 00dc 6946     		mov	r1, sp
ARM GAS  /tmp/ccQFkTGB.s 			page 36


 863 00de 1148     		ldr	r0, .L55
 864 00e0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 865              	.LVL42:
 342:Core/Src/main.c ****   {
 866              		.loc 1 342 6 view .LVU271
 867 00e4 D0B9     		cbnz	r0, .L53
 349:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 868              		.loc 1 349 3 is_stmt 1 view .LVU272
 349:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 869              		.loc 1 349 19 is_stmt 0 view .LVU273
 870 00e6 184B     		ldr	r3, .L55+36
 871 00e8 0093     		str	r3, [sp]
 350:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 872              		.loc 1 350 3 is_stmt 1 view .LVU274
 350:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 873              		.loc 1 350 16 is_stmt 0 view .LVU275
 874 00ea 4FF48973 		mov	r3, #274
 875 00ee 0193     		str	r3, [sp, #4]
 351:Core/Src/main.c ****   {
 876              		.loc 1 351 3 is_stmt 1 view .LVU276
 351:Core/Src/main.c ****   {
 877              		.loc 1 351 7 is_stmt 0 view .LVU277
 878 00f0 6946     		mov	r1, sp
 879 00f2 0C48     		ldr	r0, .L55
 880 00f4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 881              	.LVL43:
 351:Core/Src/main.c ****   {
 882              		.loc 1 351 6 view .LVU278
 883 00f8 90B9     		cbnz	r0, .L54
 359:Core/Src/main.c **** 
 884              		.loc 1 359 1 view .LVU279
 885 00fa 07B0     		add	sp, sp, #28
 886              		.cfi_remember_state
 887              		.cfi_def_cfa_offset 4
 888              		@ sp needed
 889 00fc 5DF804FB 		ldr	pc, [sp], #4
 890              	.L46:
 891              		.cfi_restore_state
 277:Core/Src/main.c ****   }
 892              		.loc 1 277 5 is_stmt 1 view .LVU280
 893 0100 FFF7FEFF 		bl	Error_Handler
 894              	.LVL44:
 895              	.L47:
 290:Core/Src/main.c ****   }
 896              		.loc 1 290 5 view .LVU281
 897 0104 FFF7FEFF 		bl	Error_Handler
 898              	.LVL45:
 899              	.L48:
 299:Core/Src/main.c ****   }
 900              		.loc 1 299 5 view .LVU282
 901 0108 FFF7FEFF 		bl	Error_Handler
 902              	.LVL46:
 903              	.L49:
 308:Core/Src/main.c ****   }
 904              		.loc 1 308 5 view .LVU283
 905 010c FFF7FEFF 		bl	Error_Handler
 906              	.LVL47:
ARM GAS  /tmp/ccQFkTGB.s 			page 37


 907              	.L50:
 317:Core/Src/main.c ****   }
 908              		.loc 1 317 5 view .LVU284
 909 0110 FFF7FEFF 		bl	Error_Handler
 910              	.LVL48:
 911              	.L51:
 326:Core/Src/main.c ****   }
 912              		.loc 1 326 5 view .LVU285
 913 0114 FFF7FEFF 		bl	Error_Handler
 914              	.LVL49:
 915              	.L52:
 335:Core/Src/main.c ****   }
 916              		.loc 1 335 5 view .LVU286
 917 0118 FFF7FEFF 		bl	Error_Handler
 918              	.LVL50:
 919              	.L53:
 344:Core/Src/main.c ****   }
 920              		.loc 1 344 5 view .LVU287
 921 011c FFF7FEFF 		bl	Error_Handler
 922              	.LVL51:
 923              	.L54:
 353:Core/Src/main.c ****   }
 924              		.loc 1 353 5 view .LVU288
 925 0120 FFF7FEFF 		bl	Error_Handler
 926              	.LVL52:
 927              	.L56:
 928              		.align	2
 929              	.L55:
 930 0124 00000000 		.word	.LANCHOR4
 931 0128 00000450 		.word	1342439424
 932 012c 02003004 		.word	70254594
 933 0130 04006008 		.word	140509188
 934 0134 0800900C 		.word	210763784
 935 0138 1000C010 		.word	281018384
 936 013c 0002B025 		.word	632291840
 937 0140 0004002A 		.word	704644096
 938 0144 00106032 		.word	845156352
 939 0148 00209036 		.word	915415040
 940              		.cfi_endproc
 941              	.LFE294:
 943              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	MX_USART1_UART_Init:
 950              	.LFB298:
 560:Core/Src/main.c **** 
 951              		.loc 1 560 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 08B5     		push	{r3, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 3, -8
 958              		.cfi_offset 14, -4
 569:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccQFkTGB.s 			page 38


 959              		.loc 1 569 3 view .LVU290
 569:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 960              		.loc 1 569 19 is_stmt 0 view .LVU291
 961 0002 0B48     		ldr	r0, .L61
 962 0004 0B4B     		ldr	r3, .L61+4
 963 0006 0360     		str	r3, [r0]
 570:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 964              		.loc 1 570 3 is_stmt 1 view .LVU292
 570:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 965              		.loc 1 570 24 is_stmt 0 view .LVU293
 966 0008 4FF4E133 		mov	r3, #115200
 967 000c 4360     		str	r3, [r0, #4]
 571:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 968              		.loc 1 571 3 is_stmt 1 view .LVU294
 571:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 969              		.loc 1 571 26 is_stmt 0 view .LVU295
 970 000e 0023     		movs	r3, #0
 971 0010 8360     		str	r3, [r0, #8]
 572:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 972              		.loc 1 572 3 is_stmt 1 view .LVU296
 572:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 973              		.loc 1 572 24 is_stmt 0 view .LVU297
 974 0012 C360     		str	r3, [r0, #12]
 573:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 975              		.loc 1 573 3 is_stmt 1 view .LVU298
 573:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 976              		.loc 1 573 22 is_stmt 0 view .LVU299
 977 0014 0361     		str	r3, [r0, #16]
 574:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 978              		.loc 1 574 3 is_stmt 1 view .LVU300
 574:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 979              		.loc 1 574 20 is_stmt 0 view .LVU301
 980 0016 0C22     		movs	r2, #12
 981 0018 4261     		str	r2, [r0, #20]
 575:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 982              		.loc 1 575 3 is_stmt 1 view .LVU302
 575:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 983              		.loc 1 575 25 is_stmt 0 view .LVU303
 984 001a 8361     		str	r3, [r0, #24]
 576:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 985              		.loc 1 576 3 is_stmt 1 view .LVU304
 576:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 986              		.loc 1 576 28 is_stmt 0 view .LVU305
 987 001c C361     		str	r3, [r0, #28]
 577:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 988              		.loc 1 577 3 is_stmt 1 view .LVU306
 577:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 989              		.loc 1 577 30 is_stmt 0 view .LVU307
 990 001e 0362     		str	r3, [r0, #32]
 578:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 991              		.loc 1 578 3 is_stmt 1 view .LVU308
 578:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 992              		.loc 1 578 38 is_stmt 0 view .LVU309
 993 0020 4362     		str	r3, [r0, #36]
 579:Core/Src/main.c ****   {
 994              		.loc 1 579 3 is_stmt 1 view .LVU310
 579:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 39


 995              		.loc 1 579 7 is_stmt 0 view .LVU311
 996 0022 FFF7FEFF 		bl	HAL_UART_Init
 997              	.LVL53:
 579:Core/Src/main.c ****   {
 998              		.loc 1 579 6 view .LVU312
 999 0026 00B9     		cbnz	r0, .L60
 587:Core/Src/main.c **** 
 1000              		.loc 1 587 1 view .LVU313
 1001 0028 08BD     		pop	{r3, pc}
 1002              	.L60:
 581:Core/Src/main.c ****   }
 1003              		.loc 1 581 5 is_stmt 1 view .LVU314
 1004 002a FFF7FEFF 		bl	Error_Handler
 1005              	.LVL54:
 1006              	.L62:
 1007 002e 00BF     		.align	2
 1008              	.L61:
 1009 0030 00000000 		.word	.LANCHOR5
 1010 0034 00380140 		.word	1073821696
 1011              		.cfi_endproc
 1012              	.LFE298:
 1014              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1015              		.align	1
 1016              		.syntax unified
 1017              		.thumb
 1018              		.thumb_func
 1020              	MX_TIM1_Init:
 1021              	.LFB295:
 367:Core/Src/main.c **** 
 1022              		.loc 1 367 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 104
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026 0000 10B5     		push	{r4, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 4, -8
 1029              		.cfi_offset 14, -4
 1030 0002 9AB0     		sub	sp, sp, #104
 1031              		.cfi_def_cfa_offset 112
 373:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1032              		.loc 1 373 3 view .LVU316
 373:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1033              		.loc 1 373 26 is_stmt 0 view .LVU317
 1034 0004 0024     		movs	r4, #0
 1035 0006 1694     		str	r4, [sp, #88]
 1036 0008 1794     		str	r4, [sp, #92]
 1037 000a 1894     		str	r4, [sp, #96]
 1038 000c 1994     		str	r4, [sp, #100]
 374:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1039              		.loc 1 374 3 is_stmt 1 view .LVU318
 374:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1040              		.loc 1 374 27 is_stmt 0 view .LVU319
 1041 000e 1394     		str	r4, [sp, #76]
 1042 0010 1494     		str	r4, [sp, #80]
 1043 0012 1594     		str	r4, [sp, #84]
 375:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1044              		.loc 1 375 3 is_stmt 1 view .LVU320
ARM GAS  /tmp/ccQFkTGB.s 			page 40


 375:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1045              		.loc 1 375 22 is_stmt 0 view .LVU321
 1046 0014 0C94     		str	r4, [sp, #48]
 1047 0016 0D94     		str	r4, [sp, #52]
 1048 0018 0E94     		str	r4, [sp, #56]
 1049 001a 0F94     		str	r4, [sp, #60]
 1050 001c 1094     		str	r4, [sp, #64]
 1051 001e 1194     		str	r4, [sp, #68]
 1052 0020 1294     		str	r4, [sp, #72]
 376:Core/Src/main.c **** 
 1053              		.loc 1 376 3 is_stmt 1 view .LVU322
 376:Core/Src/main.c **** 
 1054              		.loc 1 376 34 is_stmt 0 view .LVU323
 1055 0022 2C22     		movs	r2, #44
 1056 0024 2146     		mov	r1, r4
 1057 0026 01A8     		add	r0, sp, #4
 1058 0028 FFF7FEFF 		bl	memset
 1059              	.LVL55:
 381:Core/Src/main.c ****   htim1.Init.Prescaler = 92;
 1060              		.loc 1 381 3 is_stmt 1 view .LVU324
 381:Core/Src/main.c ****   htim1.Init.Prescaler = 92;
 1061              		.loc 1 381 18 is_stmt 0 view .LVU325
 1062 002c 3148     		ldr	r0, .L77
 1063 002e 324B     		ldr	r3, .L77+4
 1064 0030 0360     		str	r3, [r0]
 382:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1065              		.loc 1 382 3 is_stmt 1 view .LVU326
 382:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1066              		.loc 1 382 24 is_stmt 0 view .LVU327
 1067 0032 5C23     		movs	r3, #92
 1068 0034 4360     		str	r3, [r0, #4]
 383:Core/Src/main.c ****   htim1.Init.Period = 400;
 1069              		.loc 1 383 3 is_stmt 1 view .LVU328
 383:Core/Src/main.c ****   htim1.Init.Period = 400;
 1070              		.loc 1 383 26 is_stmt 0 view .LVU329
 1071 0036 8460     		str	r4, [r0, #8]
 384:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1072              		.loc 1 384 3 is_stmt 1 view .LVU330
 384:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1073              		.loc 1 384 21 is_stmt 0 view .LVU331
 1074 0038 4FF4C873 		mov	r3, #400
 1075 003c C360     		str	r3, [r0, #12]
 385:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1076              		.loc 1 385 3 is_stmt 1 view .LVU332
 385:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1077              		.loc 1 385 28 is_stmt 0 view .LVU333
 1078 003e 0461     		str	r4, [r0, #16]
 386:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1079              		.loc 1 386 3 is_stmt 1 view .LVU334
 386:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1080              		.loc 1 386 32 is_stmt 0 view .LVU335
 1081 0040 4461     		str	r4, [r0, #20]
 387:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1082              		.loc 1 387 3 is_stmt 1 view .LVU336
 387:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1083              		.loc 1 387 32 is_stmt 0 view .LVU337
 1084 0042 8023     		movs	r3, #128
ARM GAS  /tmp/ccQFkTGB.s 			page 41


 1085 0044 8361     		str	r3, [r0, #24]
 388:Core/Src/main.c ****   {
 1086              		.loc 1 388 3 is_stmt 1 view .LVU338
 388:Core/Src/main.c ****   {
 1087              		.loc 1 388 7 is_stmt 0 view .LVU339
 1088 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1089              	.LVL56:
 388:Core/Src/main.c ****   {
 1090              		.loc 1 388 6 view .LVU340
 1091 004a 0028     		cmp	r0, #0
 1092 004c 45D1     		bne	.L71
 392:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1093              		.loc 1 392 3 is_stmt 1 view .LVU341
 392:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1094              		.loc 1 392 34 is_stmt 0 view .LVU342
 1095 004e 4FF48053 		mov	r3, #4096
 1096 0052 1693     		str	r3, [sp, #88]
 393:Core/Src/main.c ****   {
 1097              		.loc 1 393 3 is_stmt 1 view .LVU343
 393:Core/Src/main.c ****   {
 1098              		.loc 1 393 7 is_stmt 0 view .LVU344
 1099 0054 16A9     		add	r1, sp, #88
 1100 0056 2748     		ldr	r0, .L77
 1101 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1102              	.LVL57:
 393:Core/Src/main.c ****   {
 1103              		.loc 1 393 6 view .LVU345
 1104 005c 0028     		cmp	r0, #0
 1105 005e 3ED1     		bne	.L72
 397:Core/Src/main.c ****   {
 1106              		.loc 1 397 3 is_stmt 1 view .LVU346
 397:Core/Src/main.c ****   {
 1107              		.loc 1 397 7 is_stmt 0 view .LVU347
 1108 0060 2448     		ldr	r0, .L77
 1109 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1110              	.LVL58:
 397:Core/Src/main.c ****   {
 1111              		.loc 1 397 6 view .LVU348
 1112 0066 0028     		cmp	r0, #0
 1113 0068 3BD1     		bne	.L73
 401:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 1114              		.loc 1 401 3 is_stmt 1 view .LVU349
 401:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_UPDATE;
 1115              		.loc 1 401 37 is_stmt 0 view .LVU350
 1116 006a 2023     		movs	r3, #32
 1117 006c 1393     		str	r3, [sp, #76]
 402:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1118              		.loc 1 402 3 is_stmt 1 view .LVU351
 402:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1119              		.loc 1 402 38 is_stmt 0 view .LVU352
 1120 006e 4FF40013 		mov	r3, #2097152
 1121 0072 1493     		str	r3, [sp, #80]
 403:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1122              		.loc 1 403 3 is_stmt 1 view .LVU353
 403:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1123              		.loc 1 403 33 is_stmt 0 view .LVU354
 1124 0074 0023     		movs	r3, #0
ARM GAS  /tmp/ccQFkTGB.s 			page 42


 1125 0076 1593     		str	r3, [sp, #84]
 404:Core/Src/main.c ****   {
 1126              		.loc 1 404 3 is_stmt 1 view .LVU355
 404:Core/Src/main.c ****   {
 1127              		.loc 1 404 7 is_stmt 0 view .LVU356
 1128 0078 13A9     		add	r1, sp, #76
 1129 007a 1E48     		ldr	r0, .L77
 1130 007c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1131              	.LVL59:
 404:Core/Src/main.c ****   {
 1132              		.loc 1 404 6 view .LVU357
 1133 0080 0028     		cmp	r0, #0
 1134 0082 30D1     		bne	.L74
 408:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1135              		.loc 1 408 3 is_stmt 1 view .LVU358
 408:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1136              		.loc 1 408 20 is_stmt 0 view .LVU359
 1137 0084 6023     		movs	r3, #96
 1138 0086 0C93     		str	r3, [sp, #48]
 409:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1139              		.loc 1 409 3 is_stmt 1 view .LVU360
 409:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1140              		.loc 1 409 19 is_stmt 0 view .LVU361
 1141 0088 4FF4FA73 		mov	r3, #500
 1142 008c 0D93     		str	r3, [sp, #52]
 410:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 1143              		.loc 1 410 3 is_stmt 1 view .LVU362
 410:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 1144              		.loc 1 410 24 is_stmt 0 view .LVU363
 1145 008e 0023     		movs	r3, #0
 1146 0090 0E93     		str	r3, [sp, #56]
 411:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1147              		.loc 1 411 3 is_stmt 1 view .LVU364
 411:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1148              		.loc 1 411 25 is_stmt 0 view .LVU365
 1149 0092 0822     		movs	r2, #8
 1150 0094 0F92     		str	r2, [sp, #60]
 412:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1151              		.loc 1 412 3 is_stmt 1 view .LVU366
 412:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1152              		.loc 1 412 24 is_stmt 0 view .LVU367
 1153 0096 1093     		str	r3, [sp, #64]
 413:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1154              		.loc 1 413 3 is_stmt 1 view .LVU368
 413:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1155              		.loc 1 413 25 is_stmt 0 view .LVU369
 1156 0098 1193     		str	r3, [sp, #68]
 414:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1157              		.loc 1 414 3 is_stmt 1 view .LVU370
 414:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1158              		.loc 1 414 26 is_stmt 0 view .LVU371
 1159 009a 1293     		str	r3, [sp, #72]
 415:Core/Src/main.c ****   {
 1160              		.loc 1 415 3 is_stmt 1 view .LVU372
 415:Core/Src/main.c ****   {
 1161              		.loc 1 415 7 is_stmt 0 view .LVU373
 1162 009c 0CA9     		add	r1, sp, #48
ARM GAS  /tmp/ccQFkTGB.s 			page 43


 1163 009e 1548     		ldr	r0, .L77
 1164 00a0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1165              	.LVL60:
 415:Core/Src/main.c ****   {
 1166              		.loc 1 415 6 view .LVU374
 1167 00a4 08BB     		cbnz	r0, .L75
 419:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1168              		.loc 1 419 3 is_stmt 1 view .LVU375
 419:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1169              		.loc 1 419 40 is_stmt 0 view .LVU376
 1170 00a6 0023     		movs	r3, #0
 1171 00a8 0193     		str	r3, [sp, #4]
 420:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1172              		.loc 1 420 3 is_stmt 1 view .LVU377
 420:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1173              		.loc 1 420 41 is_stmt 0 view .LVU378
 1174 00aa 0293     		str	r3, [sp, #8]
 421:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1175              		.loc 1 421 3 is_stmt 1 view .LVU379
 421:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1176              		.loc 1 421 34 is_stmt 0 view .LVU380
 1177 00ac 0393     		str	r3, [sp, #12]
 422:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1178              		.loc 1 422 3 is_stmt 1 view .LVU381
 422:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1179              		.loc 1 422 33 is_stmt 0 view .LVU382
 1180 00ae 0493     		str	r3, [sp, #16]
 423:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1181              		.loc 1 423 3 is_stmt 1 view .LVU383
 423:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1182              		.loc 1 423 35 is_stmt 0 view .LVU384
 1183 00b0 0593     		str	r3, [sp, #20]
 424:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1184              		.loc 1 424 3 is_stmt 1 view .LVU385
 424:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1185              		.loc 1 424 38 is_stmt 0 view .LVU386
 1186 00b2 4FF40052 		mov	r2, #8192
 1187 00b6 0692     		str	r2, [sp, #24]
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1188              		.loc 1 425 3 is_stmt 1 view .LVU387
 425:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1189              		.loc 1 425 36 is_stmt 0 view .LVU388
 1190 00b8 0793     		str	r3, [sp, #28]
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1191              		.loc 1 426 3 is_stmt 1 view .LVU389
 426:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1192              		.loc 1 426 36 is_stmt 0 view .LVU390
 1193 00ba 0893     		str	r3, [sp, #32]
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1194              		.loc 1 427 3 is_stmt 1 view .LVU391
 427:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1195              		.loc 1 427 39 is_stmt 0 view .LVU392
 1196 00bc 4FF00072 		mov	r2, #33554432
 1197 00c0 0992     		str	r2, [sp, #36]
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1198              		.loc 1 428 3 is_stmt 1 view .LVU393
 428:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
ARM GAS  /tmp/ccQFkTGB.s 			page 44


 1199              		.loc 1 428 37 is_stmt 0 view .LVU394
 1200 00c2 0A93     		str	r3, [sp, #40]
 429:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1201              		.loc 1 429 3 is_stmt 1 view .LVU395
 429:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1202              		.loc 1 429 40 is_stmt 0 view .LVU396
 1203 00c4 0B93     		str	r3, [sp, #44]
 430:Core/Src/main.c ****   {
 1204              		.loc 1 430 3 is_stmt 1 view .LVU397
 430:Core/Src/main.c ****   {
 1205              		.loc 1 430 7 is_stmt 0 view .LVU398
 1206 00c6 01A9     		add	r1, sp, #4
 1207 00c8 0A48     		ldr	r0, .L77
 1208 00ca FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1209              	.LVL61:
 430:Core/Src/main.c ****   {
 1210              		.loc 1 430 6 view .LVU399
 1211 00ce 70B9     		cbnz	r0, .L76
 437:Core/Src/main.c **** 
 1212              		.loc 1 437 3 is_stmt 1 view .LVU400
 1213 00d0 0848     		ldr	r0, .L77
 1214 00d2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1215              	.LVL62:
 439:Core/Src/main.c **** 
 1216              		.loc 1 439 1 is_stmt 0 view .LVU401
 1217 00d6 1AB0     		add	sp, sp, #104
 1218              		.cfi_remember_state
 1219              		.cfi_def_cfa_offset 8
 1220              		@ sp needed
 1221 00d8 10BD     		pop	{r4, pc}
 1222              	.L71:
 1223              		.cfi_restore_state
 390:Core/Src/main.c ****   }
 1224              		.loc 1 390 5 is_stmt 1 view .LVU402
 1225 00da FFF7FEFF 		bl	Error_Handler
 1226              	.LVL63:
 1227              	.L72:
 395:Core/Src/main.c ****   }
 1228              		.loc 1 395 5 view .LVU403
 1229 00de FFF7FEFF 		bl	Error_Handler
 1230              	.LVL64:
 1231              	.L73:
 399:Core/Src/main.c ****   }
 1232              		.loc 1 399 5 view .LVU404
 1233 00e2 FFF7FEFF 		bl	Error_Handler
 1234              	.LVL65:
 1235              	.L74:
 406:Core/Src/main.c ****   }
 1236              		.loc 1 406 5 view .LVU405
 1237 00e6 FFF7FEFF 		bl	Error_Handler
 1238              	.LVL66:
 1239              	.L75:
 417:Core/Src/main.c ****   }
 1240              		.loc 1 417 5 view .LVU406
 1241 00ea FFF7FEFF 		bl	Error_Handler
 1242              	.LVL67:
 1243              	.L76:
ARM GAS  /tmp/ccQFkTGB.s 			page 45


 432:Core/Src/main.c ****   }
 1244              		.loc 1 432 5 view .LVU407
 1245 00ee FFF7FEFF 		bl	Error_Handler
 1246              	.LVL68:
 1247              	.L78:
 1248 00f2 00BF     		.align	2
 1249              	.L77:
 1250 00f4 00000000 		.word	.LANCHOR2
 1251 00f8 002C0140 		.word	1073818624
 1252              		.cfi_endproc
 1253              	.LFE295:
 1255              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1256              		.align	1
 1257              		.syntax unified
 1258              		.thumb
 1259              		.thumb_func
 1261              	MX_USART2_UART_Init:
 1262              	.LFB299:
 595:Core/Src/main.c **** 
 1263              		.loc 1 595 1 view -0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267 0000 08B5     		push	{r3, lr}
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 3, -8
 1270              		.cfi_offset 14, -4
 604:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1271              		.loc 1 604 3 view .LVU409
 604:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1272              		.loc 1 604 19 is_stmt 0 view .LVU410
 1273 0002 0B48     		ldr	r0, .L83
 1274 0004 0B4B     		ldr	r3, .L83+4
 1275 0006 0360     		str	r3, [r0]
 605:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1276              		.loc 1 605 3 is_stmt 1 view .LVU411
 605:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1277              		.loc 1 605 24 is_stmt 0 view .LVU412
 1278 0008 4FF4E133 		mov	r3, #115200
 1279 000c 4360     		str	r3, [r0, #4]
 606:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1280              		.loc 1 606 3 is_stmt 1 view .LVU413
 606:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1281              		.loc 1 606 26 is_stmt 0 view .LVU414
 1282 000e 0023     		movs	r3, #0
 1283 0010 8360     		str	r3, [r0, #8]
 607:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1284              		.loc 1 607 3 is_stmt 1 view .LVU415
 607:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1285              		.loc 1 607 24 is_stmt 0 view .LVU416
 1286 0012 C360     		str	r3, [r0, #12]
 608:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1287              		.loc 1 608 3 is_stmt 1 view .LVU417
 608:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1288              		.loc 1 608 22 is_stmt 0 view .LVU418
 1289 0014 0361     		str	r3, [r0, #16]
 609:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccQFkTGB.s 			page 46


 1290              		.loc 1 609 3 is_stmt 1 view .LVU419
 609:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1291              		.loc 1 609 20 is_stmt 0 view .LVU420
 1292 0016 0C22     		movs	r2, #12
 1293 0018 4261     		str	r2, [r0, #20]
 610:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1294              		.loc 1 610 3 is_stmt 1 view .LVU421
 610:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1295              		.loc 1 610 25 is_stmt 0 view .LVU422
 1296 001a 8361     		str	r3, [r0, #24]
 611:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1297              		.loc 1 611 3 is_stmt 1 view .LVU423
 611:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1298              		.loc 1 611 28 is_stmt 0 view .LVU424
 1299 001c C361     		str	r3, [r0, #28]
 612:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1300              		.loc 1 612 3 is_stmt 1 view .LVU425
 612:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1301              		.loc 1 612 30 is_stmt 0 view .LVU426
 1302 001e 0362     		str	r3, [r0, #32]
 613:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1303              		.loc 1 613 3 is_stmt 1 view .LVU427
 613:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1304              		.loc 1 613 38 is_stmt 0 view .LVU428
 1305 0020 4362     		str	r3, [r0, #36]
 614:Core/Src/main.c ****   {
 1306              		.loc 1 614 3 is_stmt 1 view .LVU429
 614:Core/Src/main.c ****   {
 1307              		.loc 1 614 7 is_stmt 0 view .LVU430
 1308 0022 FFF7FEFF 		bl	HAL_UART_Init
 1309              	.LVL69:
 614:Core/Src/main.c ****   {
 1310              		.loc 1 614 6 view .LVU431
 1311 0026 00B9     		cbnz	r0, .L82
 622:Core/Src/main.c **** 
 1312              		.loc 1 622 1 view .LVU432
 1313 0028 08BD     		pop	{r3, pc}
 1314              	.L82:
 616:Core/Src/main.c ****   }
 1315              		.loc 1 616 5 is_stmt 1 view .LVU433
 1316 002a FFF7FEFF 		bl	Error_Handler
 1317              	.LVL70:
 1318              	.L84:
 1319 002e 00BF     		.align	2
 1320              	.L83:
 1321 0030 00000000 		.word	.LANCHOR6
 1322 0034 00440040 		.word	1073759232
 1323              		.cfi_endproc
 1324              	.LFE299:
 1326              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1327              		.align	1
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	MX_USART3_UART_Init:
 1333              	.LFB300:
 630:Core/Src/main.c **** 
ARM GAS  /tmp/ccQFkTGB.s 			page 47


 1334              		.loc 1 630 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338 0000 08B5     		push	{r3, lr}
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 3, -8
 1341              		.cfi_offset 14, -4
 639:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1342              		.loc 1 639 3 view .LVU435
 639:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1343              		.loc 1 639 19 is_stmt 0 view .LVU436
 1344 0002 0B48     		ldr	r0, .L89
 1345 0004 0B4B     		ldr	r3, .L89+4
 1346 0006 0360     		str	r3, [r0]
 640:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1347              		.loc 1 640 3 is_stmt 1 view .LVU437
 640:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1348              		.loc 1 640 24 is_stmt 0 view .LVU438
 1349 0008 4FF4E133 		mov	r3, #115200
 1350 000c 4360     		str	r3, [r0, #4]
 641:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1351              		.loc 1 641 3 is_stmt 1 view .LVU439
 641:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1352              		.loc 1 641 26 is_stmt 0 view .LVU440
 1353 000e 0023     		movs	r3, #0
 1354 0010 8360     		str	r3, [r0, #8]
 642:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1355              		.loc 1 642 3 is_stmt 1 view .LVU441
 642:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1356              		.loc 1 642 24 is_stmt 0 view .LVU442
 1357 0012 C360     		str	r3, [r0, #12]
 643:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1358              		.loc 1 643 3 is_stmt 1 view .LVU443
 643:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1359              		.loc 1 643 22 is_stmt 0 view .LVU444
 1360 0014 0361     		str	r3, [r0, #16]
 644:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1361              		.loc 1 644 3 is_stmt 1 view .LVU445
 644:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1362              		.loc 1 644 20 is_stmt 0 view .LVU446
 1363 0016 0C22     		movs	r2, #12
 1364 0018 4261     		str	r2, [r0, #20]
 645:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1365              		.loc 1 645 3 is_stmt 1 view .LVU447
 645:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1366              		.loc 1 645 25 is_stmt 0 view .LVU448
 1367 001a 8361     		str	r3, [r0, #24]
 646:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1368              		.loc 1 646 3 is_stmt 1 view .LVU449
 646:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1369              		.loc 1 646 28 is_stmt 0 view .LVU450
 1370 001c C361     		str	r3, [r0, #28]
 647:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1371              		.loc 1 647 3 is_stmt 1 view .LVU451
 647:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1372              		.loc 1 647 30 is_stmt 0 view .LVU452
ARM GAS  /tmp/ccQFkTGB.s 			page 48


 1373 001e 0362     		str	r3, [r0, #32]
 648:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1374              		.loc 1 648 3 is_stmt 1 view .LVU453
 648:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1375              		.loc 1 648 38 is_stmt 0 view .LVU454
 1376 0020 4362     		str	r3, [r0, #36]
 649:Core/Src/main.c ****   {
 1377              		.loc 1 649 3 is_stmt 1 view .LVU455
 649:Core/Src/main.c ****   {
 1378              		.loc 1 649 7 is_stmt 0 view .LVU456
 1379 0022 FFF7FEFF 		bl	HAL_UART_Init
 1380              	.LVL71:
 649:Core/Src/main.c ****   {
 1381              		.loc 1 649 6 view .LVU457
 1382 0026 00B9     		cbnz	r0, .L88
 657:Core/Src/main.c **** 
 1383              		.loc 1 657 1 view .LVU458
 1384 0028 08BD     		pop	{r3, pc}
 1385              	.L88:
 651:Core/Src/main.c ****   }
 1386              		.loc 1 651 5 is_stmt 1 view .LVU459
 1387 002a FFF7FEFF 		bl	Error_Handler
 1388              	.LVL72:
 1389              	.L90:
 1390 002e 00BF     		.align	2
 1391              	.L89:
 1392 0030 00000000 		.word	.LANCHOR7
 1393 0034 00480040 		.word	1073760256
 1394              		.cfi_endproc
 1395              	.LFE300:
 1397              		.section	.text.MX_TIM15_Init,"ax",%progbits
 1398              		.align	1
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1403              	MX_TIM15_Init:
 1404              	.LFB297:
 485:Core/Src/main.c **** 
 1405              		.loc 1 485 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 104
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409 0000 10B5     		push	{r4, lr}
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 4, -8
 1412              		.cfi_offset 14, -4
 1413 0002 9AB0     		sub	sp, sp, #104
 1414              		.cfi_def_cfa_offset 112
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1415              		.loc 1 491 3 view .LVU461
 491:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1416              		.loc 1 491 26 is_stmt 0 view .LVU462
 1417 0004 0024     		movs	r4, #0
 1418 0006 1694     		str	r4, [sp, #88]
 1419 0008 1794     		str	r4, [sp, #92]
 1420 000a 1894     		str	r4, [sp, #96]
 1421 000c 1994     		str	r4, [sp, #100]
ARM GAS  /tmp/ccQFkTGB.s 			page 49


 492:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1422              		.loc 1 492 3 is_stmt 1 view .LVU463
 492:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1423              		.loc 1 492 27 is_stmt 0 view .LVU464
 1424 000e 1394     		str	r4, [sp, #76]
 1425 0010 1494     		str	r4, [sp, #80]
 1426 0012 1594     		str	r4, [sp, #84]
 493:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1427              		.loc 1 493 3 is_stmt 1 view .LVU465
 493:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1428              		.loc 1 493 22 is_stmt 0 view .LVU466
 1429 0014 0C94     		str	r4, [sp, #48]
 1430 0016 0D94     		str	r4, [sp, #52]
 1431 0018 0E94     		str	r4, [sp, #56]
 1432 001a 0F94     		str	r4, [sp, #60]
 1433 001c 1094     		str	r4, [sp, #64]
 1434 001e 1194     		str	r4, [sp, #68]
 1435 0020 1294     		str	r4, [sp, #72]
 494:Core/Src/main.c **** 
 1436              		.loc 1 494 3 is_stmt 1 view .LVU467
 494:Core/Src/main.c **** 
 1437              		.loc 1 494 34 is_stmt 0 view .LVU468
 1438 0022 2C22     		movs	r2, #44
 1439 0024 2146     		mov	r1, r4
 1440 0026 01A8     		add	r0, sp, #4
 1441 0028 FFF7FEFF 		bl	memset
 1442              	.LVL73:
 499:Core/Src/main.c ****   htim15.Init.Prescaler = 92;
 1443              		.loc 1 499 3 is_stmt 1 view .LVU469
 499:Core/Src/main.c ****   htim15.Init.Prescaler = 92;
 1444              		.loc 1 499 19 is_stmt 0 view .LVU470
 1445 002c 2C48     		ldr	r0, .L105
 1446 002e 2D4B     		ldr	r3, .L105+4
 1447 0030 0360     		str	r3, [r0]
 500:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1448              		.loc 1 500 3 is_stmt 1 view .LVU471
 500:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1449              		.loc 1 500 25 is_stmt 0 view .LVU472
 1450 0032 5C23     		movs	r3, #92
 1451 0034 4360     		str	r3, [r0, #4]
 501:Core/Src/main.c ****   htim15.Init.Period = 400;
 1452              		.loc 1 501 3 is_stmt 1 view .LVU473
 501:Core/Src/main.c ****   htim15.Init.Period = 400;
 1453              		.loc 1 501 27 is_stmt 0 view .LVU474
 1454 0036 8460     		str	r4, [r0, #8]
 502:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1455              		.loc 1 502 3 is_stmt 1 view .LVU475
 502:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1456              		.loc 1 502 22 is_stmt 0 view .LVU476
 1457 0038 4FF4C873 		mov	r3, #400
 1458 003c C360     		str	r3, [r0, #12]
 503:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 1459              		.loc 1 503 3 is_stmt 1 view .LVU477
 503:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 1460              		.loc 1 503 29 is_stmt 0 view .LVU478
 1461 003e 0461     		str	r4, [r0, #16]
 504:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
ARM GAS  /tmp/ccQFkTGB.s 			page 50


 1462              		.loc 1 504 3 is_stmt 1 view .LVU479
 504:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1463              		.loc 1 504 33 is_stmt 0 view .LVU480
 1464 0040 4461     		str	r4, [r0, #20]
 505:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1465              		.loc 1 505 3 is_stmt 1 view .LVU481
 505:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1466              		.loc 1 505 33 is_stmt 0 view .LVU482
 1467 0042 8023     		movs	r3, #128
 1468 0044 8361     		str	r3, [r0, #24]
 506:Core/Src/main.c ****   {
 1469              		.loc 1 506 3 is_stmt 1 view .LVU483
 506:Core/Src/main.c ****   {
 1470              		.loc 1 506 7 is_stmt 0 view .LVU484
 1471 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1472              	.LVL74:
 506:Core/Src/main.c ****   {
 1473              		.loc 1 506 6 view .LVU485
 1474 004a 0028     		cmp	r0, #0
 1475 004c 3BD1     		bne	.L99
 510:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 1476              		.loc 1 510 3 is_stmt 1 view .LVU486
 510:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 1477              		.loc 1 510 34 is_stmt 0 view .LVU487
 1478 004e 4FF48053 		mov	r3, #4096
 1479 0052 1693     		str	r3, [sp, #88]
 511:Core/Src/main.c ****   {
 1480              		.loc 1 511 3 is_stmt 1 view .LVU488
 511:Core/Src/main.c ****   {
 1481              		.loc 1 511 7 is_stmt 0 view .LVU489
 1482 0054 16A9     		add	r1, sp, #88
 1483 0056 2248     		ldr	r0, .L105
 1484 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1485              	.LVL75:
 511:Core/Src/main.c ****   {
 1486              		.loc 1 511 6 view .LVU490
 1487 005c 0028     		cmp	r0, #0
 1488 005e 34D1     		bne	.L100
 515:Core/Src/main.c ****   {
 1489              		.loc 1 515 3 is_stmt 1 view .LVU491
 515:Core/Src/main.c ****   {
 1490              		.loc 1 515 7 is_stmt 0 view .LVU492
 1491 0060 1F48     		ldr	r0, .L105
 1492 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1493              	.LVL76:
 515:Core/Src/main.c ****   {
 1494              		.loc 1 515 6 view .LVU493
 1495 0066 0028     		cmp	r0, #0
 1496 0068 31D1     		bne	.L101
 519:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1497              		.loc 1 519 3 is_stmt 1 view .LVU494
 519:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1498              		.loc 1 519 37 is_stmt 0 view .LVU495
 1499 006a 2023     		movs	r3, #32
 1500 006c 1393     		str	r3, [sp, #76]
 520:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1501              		.loc 1 520 3 is_stmt 1 view .LVU496
ARM GAS  /tmp/ccQFkTGB.s 			page 51


 520:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1502              		.loc 1 520 33 is_stmt 0 view .LVU497
 1503 006e 0023     		movs	r3, #0
 1504 0070 1593     		str	r3, [sp, #84]
 521:Core/Src/main.c ****   {
 1505              		.loc 1 521 3 is_stmt 1 view .LVU498
 521:Core/Src/main.c ****   {
 1506              		.loc 1 521 7 is_stmt 0 view .LVU499
 1507 0072 13A9     		add	r1, sp, #76
 1508 0074 1A48     		ldr	r0, .L105
 1509 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1510              	.LVL77:
 521:Core/Src/main.c ****   {
 1511              		.loc 1 521 6 view .LVU500
 1512 007a 50BB     		cbnz	r0, .L102
 525:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1513              		.loc 1 525 3 is_stmt 1 view .LVU501
 525:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1514              		.loc 1 525 20 is_stmt 0 view .LVU502
 1515 007c 6023     		movs	r3, #96
 1516 007e 0C93     		str	r3, [sp, #48]
 526:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 1517              		.loc 1 526 3 is_stmt 1 view .LVU503
 526:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 1518              		.loc 1 526 19 is_stmt 0 view .LVU504
 1519 0080 4FF4FA73 		mov	r3, #500
 1520 0084 0D93     		str	r3, [sp, #52]
 527:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1521              		.loc 1 527 3 is_stmt 1 view .LVU505
 527:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1522              		.loc 1 527 24 is_stmt 0 view .LVU506
 1523 0086 0223     		movs	r3, #2
 1524 0088 0E93     		str	r3, [sp, #56]
 528:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1525              		.loc 1 528 3 is_stmt 1 view .LVU507
 528:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1526              		.loc 1 528 25 is_stmt 0 view .LVU508
 1527 008a 0022     		movs	r2, #0
 1528 008c 0F92     		str	r2, [sp, #60]
 529:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1529              		.loc 1 529 3 is_stmt 1 view .LVU509
 529:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1530              		.loc 1 529 24 is_stmt 0 view .LVU510
 1531 008e 1092     		str	r2, [sp, #64]
 530:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1532              		.loc 1 530 3 is_stmt 1 view .LVU511
 530:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1533              		.loc 1 530 25 is_stmt 0 view .LVU512
 1534 0090 1192     		str	r2, [sp, #68]
 531:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1535              		.loc 1 531 3 is_stmt 1 view .LVU513
 531:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1536              		.loc 1 531 26 is_stmt 0 view .LVU514
 1537 0092 1292     		str	r2, [sp, #72]
 532:Core/Src/main.c ****   {
 1538              		.loc 1 532 3 is_stmt 1 view .LVU515
 532:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 52


 1539              		.loc 1 532 7 is_stmt 0 view .LVU516
 1540 0094 0CA9     		add	r1, sp, #48
 1541 0096 1248     		ldr	r0, .L105
 1542 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1543              	.LVL78:
 532:Core/Src/main.c ****   {
 1544              		.loc 1 532 6 view .LVU517
 1545 009c D8B9     		cbnz	r0, .L103
 536:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1546              		.loc 1 536 3 is_stmt 1 view .LVU518
 536:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1547              		.loc 1 536 40 is_stmt 0 view .LVU519
 1548 009e 0023     		movs	r3, #0
 1549 00a0 0193     		str	r3, [sp, #4]
 537:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1550              		.loc 1 537 3 is_stmt 1 view .LVU520
 537:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1551              		.loc 1 537 41 is_stmt 0 view .LVU521
 1552 00a2 0293     		str	r3, [sp, #8]
 538:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1553              		.loc 1 538 3 is_stmt 1 view .LVU522
 538:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1554              		.loc 1 538 34 is_stmt 0 view .LVU523
 1555 00a4 0393     		str	r3, [sp, #12]
 539:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1556              		.loc 1 539 3 is_stmt 1 view .LVU524
 539:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1557              		.loc 1 539 33 is_stmt 0 view .LVU525
 1558 00a6 0493     		str	r3, [sp, #16]
 540:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1559              		.loc 1 540 3 is_stmt 1 view .LVU526
 540:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1560              		.loc 1 540 35 is_stmt 0 view .LVU527
 1561 00a8 0593     		str	r3, [sp, #20]
 541:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1562              		.loc 1 541 3 is_stmt 1 view .LVU528
 541:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1563              		.loc 1 541 38 is_stmt 0 view .LVU529
 1564 00aa 4FF40052 		mov	r2, #8192
 1565 00ae 0692     		str	r2, [sp, #24]
 542:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1566              		.loc 1 542 3 is_stmt 1 view .LVU530
 542:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 1567              		.loc 1 542 40 is_stmt 0 view .LVU531
 1568 00b0 0B93     		str	r3, [sp, #44]
 543:Core/Src/main.c ****   {
 1569              		.loc 1 543 3 is_stmt 1 view .LVU532
 543:Core/Src/main.c ****   {
 1570              		.loc 1 543 7 is_stmt 0 view .LVU533
 1571 00b2 01A9     		add	r1, sp, #4
 1572 00b4 0A48     		ldr	r0, .L105
 1573 00b6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1574              	.LVL79:
 543:Core/Src/main.c ****   {
 1575              		.loc 1 543 6 view .LVU534
 1576 00ba 70B9     		cbnz	r0, .L104
 550:Core/Src/main.c **** 
ARM GAS  /tmp/ccQFkTGB.s 			page 53


 1577              		.loc 1 550 3 is_stmt 1 view .LVU535
 1578 00bc 0848     		ldr	r0, .L105
 1579 00be FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1580              	.LVL80:
 552:Core/Src/main.c **** 
 1581              		.loc 1 552 1 is_stmt 0 view .LVU536
 1582 00c2 1AB0     		add	sp, sp, #104
 1583              		.cfi_remember_state
 1584              		.cfi_def_cfa_offset 8
 1585              		@ sp needed
 1586 00c4 10BD     		pop	{r4, pc}
 1587              	.L99:
 1588              		.cfi_restore_state
 508:Core/Src/main.c ****   }
 1589              		.loc 1 508 5 is_stmt 1 view .LVU537
 1590 00c6 FFF7FEFF 		bl	Error_Handler
 1591              	.LVL81:
 1592              	.L100:
 513:Core/Src/main.c ****   }
 1593              		.loc 1 513 5 view .LVU538
 1594 00ca FFF7FEFF 		bl	Error_Handler
 1595              	.LVL82:
 1596              	.L101:
 517:Core/Src/main.c ****   }
 1597              		.loc 1 517 5 view .LVU539
 1598 00ce FFF7FEFF 		bl	Error_Handler
 1599              	.LVL83:
 1600              	.L102:
 523:Core/Src/main.c ****   }
 1601              		.loc 1 523 5 view .LVU540
 1602 00d2 FFF7FEFF 		bl	Error_Handler
 1603              	.LVL84:
 1604              	.L103:
 534:Core/Src/main.c ****   }
 1605              		.loc 1 534 5 view .LVU541
 1606 00d6 FFF7FEFF 		bl	Error_Handler
 1607              	.LVL85:
 1608              	.L104:
 545:Core/Src/main.c ****   }
 1609              		.loc 1 545 5 view .LVU542
 1610 00da FFF7FEFF 		bl	Error_Handler
 1611              	.LVL86:
 1612              	.L106:
 1613 00de 00BF     		.align	2
 1614              	.L105:
 1615 00e0 00000000 		.word	.LANCHOR3
 1616 00e4 00400140 		.word	1073823744
 1617              		.cfi_endproc
 1618              	.LFE297:
 1620              		.section	.text.MX_TIM7_Init,"ax",%progbits
 1621              		.align	1
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1626              	MX_TIM7_Init:
 1627              	.LFB296:
 447:Core/Src/main.c **** 
ARM GAS  /tmp/ccQFkTGB.s 			page 54


 1628              		.loc 1 447 1 view -0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 16
 1631              		@ frame_needed = 0, uses_anonymous_args = 0
 1632 0000 00B5     		push	{lr}
 1633              		.cfi_def_cfa_offset 4
 1634              		.cfi_offset 14, -4
 1635 0002 85B0     		sub	sp, sp, #20
 1636              		.cfi_def_cfa_offset 24
 453:Core/Src/main.c **** 
 1637              		.loc 1 453 3 view .LVU544
 453:Core/Src/main.c **** 
 1638              		.loc 1 453 27 is_stmt 0 view .LVU545
 1639 0004 0023     		movs	r3, #0
 1640 0006 0193     		str	r3, [sp, #4]
 1641 0008 0293     		str	r3, [sp, #8]
 1642 000a 0393     		str	r3, [sp, #12]
 458:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 1643              		.loc 1 458 3 is_stmt 1 view .LVU546
 458:Core/Src/main.c ****   htim7.Init.Prescaler = 666;
 1644              		.loc 1 458 18 is_stmt 0 view .LVU547
 1645 000c 0F48     		ldr	r0, .L113
 1646 000e 104A     		ldr	r2, .L113+4
 1647 0010 0260     		str	r2, [r0]
 459:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1648              		.loc 1 459 3 is_stmt 1 view .LVU548
 459:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 1649              		.loc 1 459 24 is_stmt 0 view .LVU549
 1650 0012 40F29A22 		movw	r2, #666
 1651 0016 4260     		str	r2, [r0, #4]
 460:Core/Src/main.c ****   htim7.Init.Period = 600;
 1652              		.loc 1 460 3 is_stmt 1 view .LVU550
 460:Core/Src/main.c ****   htim7.Init.Period = 600;
 1653              		.loc 1 460 26 is_stmt 0 view .LVU551
 1654 0018 8360     		str	r3, [r0, #8]
 461:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1655              		.loc 1 461 3 is_stmt 1 view .LVU552
 461:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1656              		.loc 1 461 21 is_stmt 0 view .LVU553
 1657 001a 4FF41673 		mov	r3, #600
 1658 001e C360     		str	r3, [r0, #12]
 462:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1659              		.loc 1 462 3 is_stmt 1 view .LVU554
 462:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 1660              		.loc 1 462 32 is_stmt 0 view .LVU555
 1661 0020 8023     		movs	r3, #128
 1662 0022 8361     		str	r3, [r0, #24]
 463:Core/Src/main.c ****   {
 1663              		.loc 1 463 3 is_stmt 1 view .LVU556
 463:Core/Src/main.c ****   {
 1664              		.loc 1 463 7 is_stmt 0 view .LVU557
 1665 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1666              	.LVL87:
 463:Core/Src/main.c ****   {
 1667              		.loc 1 463 6 view .LVU558
 1668 0028 58B9     		cbnz	r0, .L111
 467:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccQFkTGB.s 			page 55


 1669              		.loc 1 467 3 is_stmt 1 view .LVU559
 467:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1670              		.loc 1 467 37 is_stmt 0 view .LVU560
 1671 002a 2023     		movs	r3, #32
 1672 002c 0193     		str	r3, [sp, #4]
 468:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1673              		.loc 1 468 3 is_stmt 1 view .LVU561
 468:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 1674              		.loc 1 468 33 is_stmt 0 view .LVU562
 1675 002e 0023     		movs	r3, #0
 1676 0030 0393     		str	r3, [sp, #12]
 469:Core/Src/main.c ****   {
 1677              		.loc 1 469 3 is_stmt 1 view .LVU563
 469:Core/Src/main.c ****   {
 1678              		.loc 1 469 7 is_stmt 0 view .LVU564
 1679 0032 01A9     		add	r1, sp, #4
 1680 0034 0548     		ldr	r0, .L113
 1681 0036 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1682              	.LVL88:
 469:Core/Src/main.c ****   {
 1683              		.loc 1 469 6 view .LVU565
 1684 003a 20B9     		cbnz	r0, .L112
 477:Core/Src/main.c **** 
 1685              		.loc 1 477 1 view .LVU566
 1686 003c 05B0     		add	sp, sp, #20
 1687              		.cfi_remember_state
 1688              		.cfi_def_cfa_offset 4
 1689              		@ sp needed
 1690 003e 5DF804FB 		ldr	pc, [sp], #4
 1691              	.L111:
 1692              		.cfi_restore_state
 465:Core/Src/main.c ****   }
 1693              		.loc 1 465 5 is_stmt 1 view .LVU567
 1694 0042 FFF7FEFF 		bl	Error_Handler
 1695              	.LVL89:
 1696              	.L112:
 471:Core/Src/main.c ****   }
 1697              		.loc 1 471 5 view .LVU568
 1698 0046 FFF7FEFF 		bl	Error_Handler
 1699              	.LVL90:
 1700              	.L114:
 1701 004a 00BF     		.align	2
 1702              	.L113:
 1703 004c 00000000 		.word	.LANCHOR8
 1704 0050 00140040 		.word	1073746944
 1705              		.cfi_endproc
 1706              	.LFE296:
 1708              		.section	.text.SystemClock_Config,"ax",%progbits
 1709              		.align	1
 1710              		.global	SystemClock_Config
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1715              	SystemClock_Config:
 1716              	.LFB292:
 175:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1717              		.loc 1 175 1 view -0
ARM GAS  /tmp/ccQFkTGB.s 			page 56


 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 88
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 1721 0000 00B5     		push	{lr}
 1722              		.cfi_def_cfa_offset 4
 1723              		.cfi_offset 14, -4
 1724 0002 97B0     		sub	sp, sp, #92
 1725              		.cfi_def_cfa_offset 96
 176:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1726              		.loc 1 176 3 view .LVU570
 176:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1727              		.loc 1 176 22 is_stmt 0 view .LVU571
 1728 0004 4422     		movs	r2, #68
 1729 0006 0021     		movs	r1, #0
 1730 0008 05A8     		add	r0, sp, #20
 1731 000a FFF7FEFF 		bl	memset
 1732              	.LVL91:
 177:Core/Src/main.c **** 
 1733              		.loc 1 177 3 is_stmt 1 view .LVU572
 177:Core/Src/main.c **** 
 1734              		.loc 1 177 22 is_stmt 0 view .LVU573
 1735 000e 0023     		movs	r3, #0
 1736 0010 0093     		str	r3, [sp]
 1737 0012 0193     		str	r3, [sp, #4]
 1738 0014 0293     		str	r3, [sp, #8]
 1739 0016 0393     		str	r3, [sp, #12]
 1740 0018 0493     		str	r3, [sp, #16]
 181:Core/Src/main.c ****   {
 1741              		.loc 1 181 3 is_stmt 1 view .LVU574
 181:Core/Src/main.c ****   {
 1742              		.loc 1 181 7 is_stmt 0 view .LVU575
 1743 001a 4FF40070 		mov	r0, #512
 1744 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1745              	.LVL92:
 181:Core/Src/main.c ****   {
 1746              		.loc 1 181 6 view .LVU576
 1747 0022 D0B9     		cbnz	r0, .L120
 189:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1748              		.loc 1 189 3 is_stmt 1 view .LVU577
 189:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1749              		.loc 1 189 36 is_stmt 0 view .LVU578
 1750 0024 1023     		movs	r3, #16
 1751 0026 0593     		str	r3, [sp, #20]
 190:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1752              		.loc 1 190 3 is_stmt 1 view .LVU579
 190:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 1753              		.loc 1 190 30 is_stmt 0 view .LVU580
 1754 0028 0123     		movs	r3, #1
 1755 002a 0B93     		str	r3, [sp, #44]
 191:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1756              		.loc 1 191 3 is_stmt 1 view .LVU581
 191:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 1757              		.loc 1 191 41 is_stmt 0 view .LVU582
 1758 002c 0023     		movs	r3, #0
 1759 002e 0C93     		str	r3, [sp, #48]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1760              		.loc 1 192 3 is_stmt 1 view .LVU583
ARM GAS  /tmp/ccQFkTGB.s 			page 57


 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1761              		.loc 1 192 35 is_stmt 0 view .LVU584
 1762 0030 6022     		movs	r2, #96
 1763 0032 0D92     		str	r2, [sp, #52]
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1764              		.loc 1 193 3 is_stmt 1 view .LVU585
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1765              		.loc 1 193 34 is_stmt 0 view .LVU586
 1766 0034 0F93     		str	r3, [sp, #60]
 194:Core/Src/main.c ****   {
 1767              		.loc 1 194 3 is_stmt 1 view .LVU587
 194:Core/Src/main.c ****   {
 1768              		.loc 1 194 7 is_stmt 0 view .LVU588
 1769 0036 05A8     		add	r0, sp, #20
 1770 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1771              	.LVL93:
 194:Core/Src/main.c ****   {
 1772              		.loc 1 194 6 view .LVU589
 1773 003c 78B9     		cbnz	r0, .L121
 201:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1774              		.loc 1 201 3 is_stmt 1 view .LVU590
 201:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1775              		.loc 1 201 31 is_stmt 0 view .LVU591
 1776 003e 0F23     		movs	r3, #15
 1777 0040 0093     		str	r3, [sp]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1778              		.loc 1 203 3 is_stmt 1 view .LVU592
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1779              		.loc 1 203 34 is_stmt 0 view .LVU593
 1780 0042 0021     		movs	r1, #0
 1781 0044 0191     		str	r1, [sp, #4]
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1782              		.loc 1 204 3 is_stmt 1 view .LVU594
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1783              		.loc 1 204 35 is_stmt 0 view .LVU595
 1784 0046 0291     		str	r1, [sp, #8]
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1785              		.loc 1 205 3 is_stmt 1 view .LVU596
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1786              		.loc 1 205 36 is_stmt 0 view .LVU597
 1787 0048 0391     		str	r1, [sp, #12]
 206:Core/Src/main.c **** 
 1788              		.loc 1 206 3 is_stmt 1 view .LVU598
 206:Core/Src/main.c **** 
 1789              		.loc 1 206 36 is_stmt 0 view .LVU599
 1790 004a 0491     		str	r1, [sp, #16]
 208:Core/Src/main.c ****   {
 1791              		.loc 1 208 3 is_stmt 1 view .LVU600
 208:Core/Src/main.c ****   {
 1792              		.loc 1 208 7 is_stmt 0 view .LVU601
 1793 004c 6846     		mov	r0, sp
 1794 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1795              	.LVL94:
 208:Core/Src/main.c ****   {
 1796              		.loc 1 208 6 view .LVU602
 1797 0052 30B9     		cbnz	r0, .L122
 212:Core/Src/main.c **** 
ARM GAS  /tmp/ccQFkTGB.s 			page 58


 1798              		.loc 1 212 1 view .LVU603
 1799 0054 17B0     		add	sp, sp, #92
 1800              		.cfi_remember_state
 1801              		.cfi_def_cfa_offset 4
 1802              		@ sp needed
 1803 0056 5DF804FB 		ldr	pc, [sp], #4
 1804              	.L120:
 1805              		.cfi_restore_state
 183:Core/Src/main.c ****   }
 1806              		.loc 1 183 5 is_stmt 1 view .LVU604
 1807 005a FFF7FEFF 		bl	Error_Handler
 1808              	.LVL95:
 1809              	.L121:
 196:Core/Src/main.c ****   }
 1810              		.loc 1 196 5 view .LVU605
 1811 005e FFF7FEFF 		bl	Error_Handler
 1812              	.LVL96:
 1813              	.L122:
 210:Core/Src/main.c ****   }
 1814              		.loc 1 210 5 view .LVU606
 1815 0062 FFF7FEFF 		bl	Error_Handler
 1816              	.LVL97:
 1817              		.cfi_endproc
 1818              	.LFE292:
 1820              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 1821              		.align	1
 1822              		.global	PeriphCommonClock_Config
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1827              	PeriphCommonClock_Config:
 1828              	.LFB293:
 219:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1829              		.loc 1 219 1 view -0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 96
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833 0000 00B5     		push	{lr}
 1834              		.cfi_def_cfa_offset 4
 1835              		.cfi_offset 14, -4
 1836 0002 99B0     		sub	sp, sp, #100
 1837              		.cfi_def_cfa_offset 104
 220:Core/Src/main.c **** 
 1838              		.loc 1 220 3 view .LVU608
 220:Core/Src/main.c **** 
 1839              		.loc 1 220 28 is_stmt 0 view .LVU609
 1840 0004 5C22     		movs	r2, #92
 1841 0006 0021     		movs	r1, #0
 1842 0008 01A8     		add	r0, sp, #4
 1843 000a FFF7FEFF 		bl	memset
 1844              	.LVL98:
 224:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1845              		.loc 1 224 3 is_stmt 1 view .LVU610
 224:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 1846              		.loc 1 224 38 is_stmt 0 view .LVU611
 1847 000e 4FF40423 		mov	r3, #540672
 1848 0012 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccQFkTGB.s 			page 59


 225:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1849              		.loc 1 225 3 is_stmt 1 view .LVU612
 225:Core/Src/main.c ****   PeriphClkInit.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_PLLSAI1;
 1850              		.loc 1 225 35 is_stmt 0 view .LVU613
 1851 0014 4FF08053 		mov	r3, #268435456
 1852 0018 1593     		str	r3, [sp, #84]
 226:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1853              		.loc 1 226 3 is_stmt 1 view .LVU614
 226:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 1854              		.loc 1 226 38 is_stmt 0 view .LVU615
 1855 001a 4FF08063 		mov	r3, #67108864
 1856 001e 1393     		str	r3, [sp, #76]
 227:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1857              		.loc 1 227 3 is_stmt 1 view .LVU616
 227:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 1858              		.loc 1 227 39 is_stmt 0 view .LVU617
 1859 0020 0123     		movs	r3, #1
 1860 0022 0293     		str	r3, [sp, #8]
 228:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1861              		.loc 1 228 3 is_stmt 1 view .LVU618
 228:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 1862              		.loc 1 228 34 is_stmt 0 view .LVU619
 1863 0024 0393     		str	r3, [sp, #12]
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1864              		.loc 1 229 3 is_stmt 1 view .LVU620
 229:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 1865              		.loc 1 229 34 is_stmt 0 view .LVU621
 1866 0026 1023     		movs	r3, #16
 1867 0028 0493     		str	r3, [sp, #16]
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1868              		.loc 1 230 3 is_stmt 1 view .LVU622
 230:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 1869              		.loc 1 230 34 is_stmt 0 view .LVU623
 1870 002a 0723     		movs	r3, #7
 1871 002c 0593     		str	r3, [sp, #20]
 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1872              		.loc 1 231 3 is_stmt 1 view .LVU624
 231:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 1873              		.loc 1 231 34 is_stmt 0 view .LVU625
 1874 002e 0223     		movs	r3, #2
 1875 0030 0693     		str	r3, [sp, #24]
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1876              		.loc 1 232 3 is_stmt 1 view .LVU626
 232:Core/Src/main.c ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 1877              		.loc 1 232 34 is_stmt 0 view .LVU627
 1878 0032 0793     		str	r3, [sp, #28]
 233:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1879              		.loc 1 233 3 is_stmt 1 view .LVU628
 233:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1880              		.loc 1 233 41 is_stmt 0 view .LVU629
 1881 0034 4FF08873 		mov	r3, #17825792
 1882 0038 0893     		str	r3, [sp, #32]
 234:Core/Src/main.c ****   {
 1883              		.loc 1 234 3 is_stmt 1 view .LVU630
 234:Core/Src/main.c ****   {
 1884              		.loc 1 234 7 is_stmt 0 view .LVU631
 1885 003a 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccQFkTGB.s 			page 60


 1886 003c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1887              	.LVL99:
 234:Core/Src/main.c ****   {
 1888              		.loc 1 234 6 view .LVU632
 1889 0040 10B9     		cbnz	r0, .L126
 238:Core/Src/main.c **** 
 1890              		.loc 1 238 1 view .LVU633
 1891 0042 19B0     		add	sp, sp, #100
 1892              		.cfi_remember_state
 1893              		.cfi_def_cfa_offset 4
 1894              		@ sp needed
 1895 0044 5DF804FB 		ldr	pc, [sp], #4
 1896              	.L126:
 1897              		.cfi_restore_state
 236:Core/Src/main.c ****   }
 1898              		.loc 1 236 5 is_stmt 1 view .LVU634
 1899 0048 FFF7FEFF 		bl	Error_Handler
 1900              	.LVL100:
 1901              		.cfi_endproc
 1902              	.LFE293:
 1904              		.section	.text.main,"ax",%progbits
 1905              		.align	1
 1906              		.global	main
 1907              		.syntax unified
 1908              		.thumb
 1909              		.thumb_func
 1911              	main:
 1912              	.LFB291:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1913              		.loc 1 105 1 view -0
 1914              		.cfi_startproc
 1915              		@ Volatile: function does not return.
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918 0000 00B5     		push	{lr}
 1919              		.cfi_def_cfa_offset 4
 1920              		.cfi_offset 14, -4
 1921 0002 83B0     		sub	sp, sp, #12
 1922              		.cfi_def_cfa_offset 16
 113:Core/Src/main.c **** 
 1923              		.loc 1 113 3 view .LVU636
 1924 0004 FFF7FEFF 		bl	HAL_Init
 1925              	.LVL101:
 120:Core/Src/main.c **** 
 1926              		.loc 1 120 3 view .LVU637
 1927 0008 FFF7FEFF 		bl	SystemClock_Config
 1928              	.LVL102:
 123:Core/Src/main.c **** 
 1929              		.loc 1 123 3 view .LVU638
 1930 000c FFF7FEFF 		bl	PeriphCommonClock_Config
 1931              	.LVL103:
 130:Core/Src/main.c ****   MX_DMA_Init();
 1932              		.loc 1 130 3 view .LVU639
 1933 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1934              	.LVL104:
 131:Core/Src/main.c ****   MX_ADC1_Init();
 1935              		.loc 1 131 3 view .LVU640
ARM GAS  /tmp/ccQFkTGB.s 			page 61


 1936 0014 FFF7FEFF 		bl	MX_DMA_Init
 1937              	.LVL105:
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 1938              		.loc 1 132 3 view .LVU641
 1939 0018 FFF7FEFF 		bl	MX_ADC1_Init
 1940              	.LVL106:
 133:Core/Src/main.c ****   MX_TIM1_Init();
 1941              		.loc 1 133 3 view .LVU642
 1942 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 1943              	.LVL107:
 134:Core/Src/main.c ****   MX_USART2_UART_Init();
 1944              		.loc 1 134 3 view .LVU643
 1945 0020 FFF7FEFF 		bl	MX_TIM1_Init
 1946              	.LVL108:
 135:Core/Src/main.c ****   MX_USART3_UART_Init();
 1947              		.loc 1 135 3 view .LVU644
 1948 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 1949              	.LVL109:
 136:Core/Src/main.c ****   MX_TIM15_Init();
 1950              		.loc 1 136 3 view .LVU645
 1951 0028 FFF7FEFF 		bl	MX_USART3_UART_Init
 1952              	.LVL110:
 137:Core/Src/main.c ****   MX_TIM7_Init();
 1953              		.loc 1 137 3 view .LVU646
 1954 002c FFF7FEFF 		bl	MX_TIM15_Init
 1955              	.LVL111:
 138:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1956              		.loc 1 138 3 view .LVU647
 1957 0030 FFF7FEFF 		bl	MX_TIM7_Init
 1958              	.LVL112:
 141:Core/Src/main.c **** 
 1959              		.loc 1 141 3 view .LVU648
 1960 0034 FFF7FEFF 		bl	initLCD
 1961              	.LVL113:
 143:Core/Src/main.c **** 
 1962              		.loc 1 143 3 view .LVU649
 1963 0038 1748     		ldr	r0, .L130
 1964 003a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1965              	.LVL114:
 145:Core/Src/main.c ****   HAL_TIM_PWM_Start_IT(&enY_tim, TIM_CHANNEL_1);
 1966              		.loc 1 145 3 view .LVU650
 1967 003e 174D     		ldr	r5, .L130+4
 1968 0040 0821     		movs	r1, #8
 1969 0042 2846     		mov	r0, r5
 1970 0044 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start_IT
 1971              	.LVL115:
 146:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 1972              		.loc 1 146 3 view .LVU651
 1973 0048 154C     		ldr	r4, .L130+8
 1974 004a 0021     		movs	r1, #0
 1975 004c 2046     		mov	r0, r4
 1976 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start_IT
 1977              	.LVL116:
 147:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 1978              		.loc 1 147 3 view .LVU652
 147:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 1979              		.loc 1 147 10 is_stmt 0 view .LVU653
ARM GAS  /tmp/ccQFkTGB.s 			page 62


 1980 0052 2A68     		ldr	r2, [r5]
 147:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_CEN;
 1981              		.loc 1 147 25 view .LVU654
 1982 0054 1368     		ldr	r3, [r2]
 1983 0056 23F00103 		bic	r3, r3, #1
 1984 005a 1360     		str	r3, [r2]
 148:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1985              		.loc 1 148 3 is_stmt 1 view .LVU655
 148:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1986              		.loc 1 148 10 is_stmt 0 view .LVU656
 1987 005c 2268     		ldr	r2, [r4]
 148:Core/Src/main.c ****   enX_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1988              		.loc 1 148 25 view .LVU657
 1989 005e 1368     		ldr	r3, [r2]
 1990 0060 23F00103 		bic	r3, r3, #1
 1991 0064 1360     		str	r3, [r2]
 149:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1992              		.loc 1 149 3 is_stmt 1 view .LVU658
 149:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1993              		.loc 1 149 10 is_stmt 0 view .LVU659
 1994 0066 2A68     		ldr	r2, [r5]
 149:Core/Src/main.c ****   enY_tim.Instance->CR1 &= ~TIM_CR1_ARPE;
 1995              		.loc 1 149 25 view .LVU660
 1996 0068 1368     		ldr	r3, [r2]
 1997 006a 23F08003 		bic	r3, r3, #128
 1998 006e 1360     		str	r3, [r2]
 150:Core/Src/main.c **** 
 1999              		.loc 1 150 3 is_stmt 1 view .LVU661
 150:Core/Src/main.c **** 
 2000              		.loc 1 150 10 is_stmt 0 view .LVU662
 2001 0070 2268     		ldr	r2, [r4]
 150:Core/Src/main.c **** 
 2002              		.loc 1 150 25 view .LVU663
 2003 0072 1368     		ldr	r3, [r2]
 2004 0074 23F08003 		bic	r3, r3, #128
 2005 0078 1360     		str	r3, [r2]
 152:Core/Src/main.c **** 
 2006              		.loc 1 152 3 is_stmt 1 view .LVU664
 2007 007a 0822     		movs	r2, #8
 2008 007c 0949     		ldr	r1, .L130+12
 2009 007e 0A48     		ldr	r0, .L130+16
 2010 0080 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2011              	.LVL117:
 2012              	.L128:
 158:Core/Src/main.c ****   {
 2013              		.loc 1 158 3 discriminator 1 view .LVU665
 164:Core/Src/main.c ****     //HAL_Delay(1);
 2014              		.loc 1 164 5 discriminator 1 view .LVU666
 2015 0084 074B     		ldr	r3, .L130+12
 2016 0086 0093     		str	r3, [sp]
 2017 0088 084B     		ldr	r3, .L130+20
 2018 008a 054A     		ldr	r2, .L130+8
 2019 008c 0349     		ldr	r1, .L130+4
 2020 008e 0848     		ldr	r0, .L130+24
 2021 0090 FFF7FEFF 		bl	CNC_HL_Control
 2022              	.LVL118:
 158:Core/Src/main.c ****   {
ARM GAS  /tmp/ccQFkTGB.s 			page 63


 2023              		.loc 1 158 9 discriminator 1 view .LVU667
 2024 0094 F6E7     		b	.L128
 2025              	.L131:
 2026 0096 00BF     		.align	2
 2027              	.L130:
 2028 0098 00000000 		.word	.LANCHOR8
 2029 009c 00000000 		.word	.LANCHOR2
 2030 00a0 00000000 		.word	.LANCHOR3
 2031 00a4 00000000 		.word	.LANCHOR0
 2032 00a8 00000000 		.word	.LANCHOR4
 2033 00ac 00000000 		.word	.LANCHOR5
 2034 00b0 00000000 		.word	.LANCHOR1
 2035              		.cfi_endproc
 2036              	.LFE291:
 2038              		.global	adc_data
 2039              		.global	hmi_info
 2040              		.global	huart3
 2041              		.global	huart2
 2042              		.global	huart1
 2043              		.global	htim15
 2044              		.global	htim7
 2045              		.global	htim1
 2046              		.global	hdma_adc1
 2047              		.global	hadc1
 2048              		.section	.bss.adc_data,"aw",%nobits
 2049              		.align	2
 2050              		.set	.LANCHOR0,. + 0
 2053              	adc_data:
 2054 0000 00000000 		.space	16
 2054      00000000 
 2054      00000000 
 2054      00000000 
 2055              		.section	.bss.hadc1,"aw",%nobits
 2056              		.align	2
 2057              		.set	.LANCHOR4,. + 0
 2060              	hadc1:
 2061 0000 00000000 		.space	100
 2061      00000000 
 2061      00000000 
 2061      00000000 
 2061      00000000 
 2062              		.section	.bss.hdma_adc1,"aw",%nobits
 2063              		.align	2
 2066              	hdma_adc1:
 2067 0000 00000000 		.space	72
 2067      00000000 
 2067      00000000 
 2067      00000000 
 2067      00000000 
 2068              		.section	.bss.htim1,"aw",%nobits
 2069              		.align	2
 2070              		.set	.LANCHOR2,. + 0
 2073              	htim1:
 2074 0000 00000000 		.space	76
 2074      00000000 
 2074      00000000 
 2074      00000000 
ARM GAS  /tmp/ccQFkTGB.s 			page 64


 2074      00000000 
 2075              		.section	.bss.htim15,"aw",%nobits
 2076              		.align	2
 2077              		.set	.LANCHOR3,. + 0
 2080              	htim15:
 2081 0000 00000000 		.space	76
 2081      00000000 
 2081      00000000 
 2081      00000000 
 2081      00000000 
 2082              		.section	.bss.htim7,"aw",%nobits
 2083              		.align	2
 2084              		.set	.LANCHOR8,. + 0
 2087              	htim7:
 2088 0000 00000000 		.space	76
 2088      00000000 
 2088      00000000 
 2088      00000000 
 2088      00000000 
 2089              		.section	.bss.huart1,"aw",%nobits
 2090              		.align	2
 2091              		.set	.LANCHOR5,. + 0
 2094              	huart1:
 2095 0000 00000000 		.space	132
 2095      00000000 
 2095      00000000 
 2095      00000000 
 2095      00000000 
 2096              		.section	.bss.huart2,"aw",%nobits
 2097              		.align	2
 2098              		.set	.LANCHOR6,. + 0
 2101              	huart2:
 2102 0000 00000000 		.space	132
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2103              		.section	.bss.huart3,"aw",%nobits
 2104              		.align	2
 2105              		.set	.LANCHOR7,. + 0
 2108              	huart3:
 2109 0000 00000000 		.space	132
 2109      00000000 
 2109      00000000 
 2109      00000000 
 2109      00000000 
 2110              		.section	.data.hmi_info,"aw"
 2111              		.align	2
 2112              		.set	.LANCHOR1,. + 0
 2115              	hmi_info:
 2116 0000 00       		.byte	0
 2117 0001 00       		.byte	0
 2118 0002 02       		.byte	2
 2119 0003 00       		.space	1
 2120 0004 B80B     		.short	3000
 2121 0006 B80B     		.short	3000
 2122 0008 E803     		.short	1000
ARM GAS  /tmp/ccQFkTGB.s 			page 65


 2123 000a E803     		.short	1000
 2124 000c 0000     		.short	0
 2125 000e 0000     		.short	0
 2126 0010 0000     		.space	2
 2127 0012 0000     		.short	0
 2128 0014 0000     		.short	0
 2129 0016 E803     		.short	1000
 2130 0018 00       		.byte	0
 2131 0019 00       		.byte	0
 2132 001a 01       		.byte	1
 2133 001b 00       		.byte	0
 2134 001c FF       		.byte	-1
 2135 001d 00       		.space	1
 2136              		.text
 2137              	.Letext0:
 2138              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 2139              		.file 4 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 2140              		.file 5 "/home/retfie/.config/VSCodium/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 2141              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2142              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2143              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2144              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 2145              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2146              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2147              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2148              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 2149              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2150              		.file 15 "Core/Inc/cnc_info.h"
 2151              		.file 16 "Core/Inc/lcd.h"
 2152              		.file 17 "Core/Inc/cnc_core.h"
 2153              		.file 18 "Core/Inc/hmi.h"
 2154              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2155              		.file 20 "Core/Inc/main.h"
 2156              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 2157              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 2158              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2159              		.file 24 "<built-in>"
ARM GAS  /tmp/ccQFkTGB.s 			page 66


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQFkTGB.s:20     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:25     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccQFkTGB.s:59     .text.MX_DMA_Init:000000000000001c $d
     /tmp/ccQFkTGB.s:64     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:69     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccQFkTGB.s:430    .text.MX_GPIO_Init:00000000000001c0 $d
     /tmp/ccQFkTGB.s:439    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccQFkTGB.s:445    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccQFkTGB.s:469    .text.HAL_TIM_PeriodElapsedCallback:000000000000000c $d
     /tmp/ccQFkTGB.s:475    .text.HAL_TIM_PWM_PulseFinishedCallback:0000000000000000 $t
     /tmp/ccQFkTGB.s:481    .text.HAL_TIM_PWM_PulseFinishedCallback:0000000000000000 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/ccQFkTGB.s:530    .text.HAL_TIM_PWM_PulseFinishedCallback:0000000000000028 $d
     /tmp/ccQFkTGB.s:537    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccQFkTGB.s:543    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccQFkTGB.s:576    .text.HAL_GPIO_EXTI_Callback:0000000000000014 $d
     /tmp/ccQFkTGB.s:583    .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccQFkTGB.s:587    .text.Error_Handler:0000000000000000 $t
     /tmp/ccQFkTGB.s:593    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQFkTGB.s:649    .text.Error_Handler:0000000000000030 $d
     /tmp/ccQFkTGB.s:654    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:659    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccQFkTGB.s:930    .text.MX_ADC1_Init:0000000000000124 $d
     /tmp/ccQFkTGB.s:944    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:949    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccQFkTGB.s:1009   .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccQFkTGB.s:1015   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:1020   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccQFkTGB.s:1250   .text.MX_TIM1_Init:00000000000000f4 $d
     /tmp/ccQFkTGB.s:1256   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:1261   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccQFkTGB.s:1321   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccQFkTGB.s:1327   .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:1332   .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccQFkTGB.s:1392   .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/ccQFkTGB.s:1398   .text.MX_TIM15_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:1403   .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
     /tmp/ccQFkTGB.s:1615   .text.MX_TIM15_Init:00000000000000e0 $d
     /tmp/ccQFkTGB.s:1621   .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccQFkTGB.s:1626   .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccQFkTGB.s:1703   .text.MX_TIM7_Init:000000000000004c $d
     /tmp/ccQFkTGB.s:1709   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQFkTGB.s:1715   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQFkTGB.s:1821   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccQFkTGB.s:1827   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccQFkTGB.s:1905   .text.main:0000000000000000 $t
     /tmp/ccQFkTGB.s:1911   .text.main:0000000000000000 main
     /tmp/ccQFkTGB.s:2028   .text.main:0000000000000098 $d
     /tmp/ccQFkTGB.s:2053   .bss.adc_data:0000000000000000 adc_data
     /tmp/ccQFkTGB.s:2115   .data.hmi_info:0000000000000000 hmi_info
     /tmp/ccQFkTGB.s:2108   .bss.huart3:0000000000000000 huart3
     /tmp/ccQFkTGB.s:2101   .bss.huart2:0000000000000000 huart2
     /tmp/ccQFkTGB.s:2094   .bss.huart1:0000000000000000 huart1
     /tmp/ccQFkTGB.s:2080   .bss.htim15:0000000000000000 htim15
     /tmp/ccQFkTGB.s:2087   .bss.htim7:0000000000000000 htim7
     /tmp/ccQFkTGB.s:2073   .bss.htim1:0000000000000000 htim1
ARM GAS  /tmp/ccQFkTGB.s 			page 67


     /tmp/ccQFkTGB.s:2066   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/ccQFkTGB.s:2060   .bss.hadc1:0000000000000000 hadc1
     /tmp/ccQFkTGB.s:2049   .bss.adc_data:0000000000000000 $d
     /tmp/ccQFkTGB.s:2056   .bss.hadc1:0000000000000000 $d
     /tmp/ccQFkTGB.s:2063   .bss.hdma_adc1:0000000000000000 $d
     /tmp/ccQFkTGB.s:2069   .bss.htim1:0000000000000000 $d
     /tmp/ccQFkTGB.s:2076   .bss.htim15:0000000000000000 $d
     /tmp/ccQFkTGB.s:2083   .bss.htim7:0000000000000000 $d
     /tmp/ccQFkTGB.s:2090   .bss.huart1:0000000000000000 $d
     /tmp/ccQFkTGB.s:2097   .bss.huart2:0000000000000000 $d
     /tmp/ccQFkTGB.s:2104   .bss.huart3:0000000000000000 $d
     /tmp/ccQFkTGB.s:2111   .data.hmi_info:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HMI_Update
CNC_TIM_Callback_X
CNC_TIM_Callback_Y
CNC_Stop
clearLCD
setCursor
writeLCD
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
initLCD
HAL_TIM_Base_Start_IT
HAL_TIMEx_PWMN_Start_IT
HAL_TIM_PWM_Start_IT
HAL_ADC_Start_DMA
CNC_HL_Control
